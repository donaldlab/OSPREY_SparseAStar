!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	kstar/TreeEdge.java	/^    private int A[][] = null; \/\/the A matrix for the current tree edge$/;"	f	class:TreeEdge	file:
A2	kstar/TreeEdge.java	/^    private ArrayList<PriorityQueue<Conf>> A2;$/;"	f	class:TreeEdge	file:
AA	kstar/CommucObj.java	/^		String AA[] = null;$/;"	f	class:CommucObj.ConfInfo
AAallowed	kstar/CommucObj.java	/^	String AAallowed[][] = null;$/;"	f	class:CommucObj
AAallowed	kstar/MutationManager.java	/^	String AAallowed[][] = null;$/;"	f	class:MutationManager
AAnums	kstar/CommucObj.java	/^		int AAnums[] = null;$/;"	f	class:CommucObj.ConfInfo
AMBER	kstar/EnvironmentVars.java	/^		AMBER, CHARMM22, CHARMM19NEUTRAL, CHARMM19$/;"	e	enum:EnvironmentVars.FORCEFIELD	file:
ANY_SOURCE	kstar/ThreadMessage.java	/^	  final static int ANY_SOURCE = -1;$/;"	f	class:ThreadMessage
ANY_SOURCE	mpi/MPI.java	/^  static public int ANY_SOURCE, ANY_TAG;$/;"	f	class:MPI
ANY_TAG	kstar/ThreadMessage.java	/^	  final	static int ANY_TAG = -1;$/;"	f	class:ThreadMessage
ANY_TAG	mpi/MPI.java	/^  static public int ANY_SOURCE, ANY_TAG;$/;"	f	class:MPI
ASAANums	kstar/RotamerSearch.java	/^	int ASAANums[] = null;$/;"	f	class:RotamerSearch
AStarRoot	kstar/BranchTree.java	/^	private static BWMAStarNode AStarRoot;$/;"	f	class:BranchTree	file:
Abort	mpi/Comm.java	/^  public native void Abort(int errorcode) throws MPIException ;$/;"	m	class:Comm
AbstractConformation	BDAStar/AbstractConformation.java	/^    public AbstractConformation()$/;"	m	class:AbstractConformation
AbstractConformation	BDAStar/AbstractConformation.java	/^public abstract class AbstractConformation implements Conformation{$/;"	c
Allgather	mpi/Intracomm.java	/^  public void Allgather(Object   sendbuf, $/;"	m	class:Intracomm
Allgatherv	mpi/Intracomm.java	/^  public void Allgatherv(Object   sendbuf, $/;"	m	class:Intracomm
Allreduce	mpi/Intracomm.java	/^  public void Allreduce(Object sendbuf, int sendoffset,$/;"	m	class:Intracomm
Alltoall	mpi/Intracomm.java	/^  public void Alltoall(Object   sendbuf, $/;"	m	class:Intracomm
Alltoallv	mpi/Intracomm.java	/^  public void Alltoallv(Object   sendbuf, $/;"	m	class:Intracomm
Amber96PolyPeptideResidue	kstar/Amber96PolyPeptideResidue.java	/^	public Amber96PolyPeptideResidue() {$/;"	m	class:Amber96PolyPeptideResidue
Amber96PolyPeptideResidue	kstar/Amber96PolyPeptideResidue.java	/^public class Amber96PolyPeptideResidue {$/;"	c
Amber96ext	kstar/Amber96ext.java	/^	Amber96ext(Molecule m, boolean ddDielect, double dielectConst, boolean doSolv, double solvScFactor, double vdwMult){$/;"	m	class:Amber96ext
Amber96ext	kstar/Amber96ext.java	/^public class Amber96ext implements ForceField, Serializable {$/;"	c
AminoAcidTemplates	kstar/AminoAcidTemplates.java	/^	AminoAcidTemplates() throws Exception {$/;"	m	class:AminoAcidTemplates
AminoAcidTemplates	kstar/AminoAcidTemplates.java	/^public class AminoAcidTemplates implements Serializable {$/;"	c
ArrayIndex	kstar/DEESplit2f.java	/^		public ArrayIndex(int posNum, int AANumAtPos, int rotNumAtPos) {$/;"	m	class:DEESplit2f.ArrayIndex
ArrayIndex	kstar/DEESplit2f.java	/^	private class ArrayIndex{$/;"	c	class:DEESplit2f
Atom	kstar/Atom.java	/^	Atom(){$/;"	m	class:Atom
Atom	kstar/Atom.java	/^	Atom(String atomName, float xpos, float ypos, float zpos){$/;"	m	class:Atom
Atom	kstar/Atom.java	/^	Atom(String atomName, float xpos, float ypos, float zpos, String ffType){$/;"	m	class:Atom
Atom	kstar/Atom.java	/^	Atom(String atomName, float xpos, float ypos, float zpos, float thecharge){$/;"	m	class:Atom
Atom	kstar/Atom.java	/^	Atom(String atomName, float xpos, float ypos, float zpos, float thecharge, String ffType){	$/;"	m	class:Atom
Atom	kstar/Atom.java	/^	protected Atom (Atom a){$/;"	m	class:Atom
Atom	kstar/Atom.java	/^        Atom(float coor[]){$/;"	m	class:Atom
Atom	kstar/Atom.java	/^public class Atom implements Serializable {$/;"	c
Attr_get	mpi/Comm.java	/^  public native int Attr_get(int keyval) throws MPIException ;$/;"	m	class:Comm
BAND	mpi/MPI.java	/^  static public Op MAX, MIN, SUM, PROD, LAND, BAND,$/;"	f	class:MPI
BAND	mpi/Op.java	/^  private final static int BAND  = 6;$/;"	f	class:Op	file:
BBMinimizer	kstar/BBMinimizer.java	/^	BBMinimizer(){$/;"	m	class:BBMinimizer
BBMinimizer	kstar/BBMinimizer.java	/^public class BBMinimizer implements Serializable {$/;"	c
BDAStar	BDAStar/AbstractConformation.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/BDAStarNode.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/BWMAStarNode.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/BWMSolutionSpace.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/BWMStarNode.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/Choice.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/Conformation.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/ConformationMap.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/CopyOfBWMAStarNode.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/EnergyFunction.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/Position.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/ProteinChoice.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/ProteinConformation.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/ProteinConformationMap.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/ProteinConformationTrie.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/ProteinPosition.java	/^package BDAStar;$/;"	p
BDAStar	BDAStar/SolutionSpace.java	/^package BDAStar;$/;"	p
BDAStarNode	BDAStar/BDAStarNode.java	/^    public BDAStarNode (BDAStarNode parentNode, Choice newChoice, Conformation empty) {$/;"	m	class:BDAStarNode
BDAStarNode	BDAStar/BDAStarNode.java	/^public class BDAStarNode implements Comparable<BDAStarNode> $/;"	c
BDAStarNodeTest	BDAStarTest/BDAStarNodeTest.java	/^public class BDAStarNodeTest {$/;"	c
BDAStarTest	BDAStarTest/BDAStarNodeTest.java	/^package BDAStarTest;$/;"	p
BDAStarTest	BDAStarTest/BDAStarTest.java	/^package BDAStarTest;$/;"	p
BDAStarTest	BDAStarTest/BDAStarTest.java	/^public class BDAStarTest {$/;"	c
BDAStarTest	BDAStarTest/BWMStarNodeTest.java	/^package BDAStarTest;$/;"	p
BDAStarTest	BDAStarTest/Playground.java	/^package BDAStarTest;$/;"	p
BDAStarTest	BDAStarTest/ProteinConformationTrieTest.java	/^package BDAStarTest;$/;"	p
BDAStarTest	BDAStarTest/TestConformation.java	/^package BDAStarTest;$/;"	p
BDAStarTest	BDAStarTest/TestConformationMap.java	/^package BDAStarTest;$/;"	p
BDAStarTest	BDAStarTest/TestProteinConformation.java	/^package BDAStarTest;$/;"	p
BDAStarTest	BDAStarTest/TestSolutionSpace.java	/^package BDAStarTest;$/;"	p
BFactor	kstar/Atom.java	/^        float BFactor;$/;"	f	class:Atom
BOOLEAN	kstar/ThreadMessage.java	/^	  final static int BOOLEAN   =  4 ;$/;"	f	class:ThreadMessage
BOOLEAN	mpi/Datatype.java	/^  private final static int BOOLEAN   =  4 ;$/;"	f	class:Datatype	file:
BOOLEAN	mpi/MPI.java	/^  static public Datatype BYTE, CHAR, SHORT, BOOLEAN, $/;"	f	class:MPI
BOR	mpi/MPI.java	/^                   LOR, BOR, LXOR, BXOR, MINLOC, MAXLOC;$/;"	f	class:MPI
BOR	mpi/Op.java	/^  private final static int BOR   = 8;$/;"	f	class:Op	file:
BSEND_OVERHEAD	mpi/MPI.java	/^  static public int BSEND_OVERHEAD;$/;"	f	class:MPI
BWMAStarNode	BDAStar/BWMAStarNode.java	/^    public BWMAStarNode(Conformation conf) $/;"	m	class:BWMAStarNode
BWMAStarNode	BDAStar/BWMAStarNode.java	/^public class BWMAStarNode implements Comparable<BWMAStarNode> {$/;"	c
BWMSolutionSpace	BDAStar/BWMSolutionSpace.java	/^    public BWMSolutionSpace(PrunedRotamers<Boolean> lib, EnergyFunction e, int[] mutRes2Strand, $/;"	m	class:BWMSolutionSpace
BWMSolutionSpace	BDAStar/BWMSolutionSpace.java	/^public class BWMSolutionSpace implements SolutionSpace {$/;"	c
BWMStarNode	BDAStar/BWMStarNode.java	/^    public BWMStarNode(Set<? extends Position> M, Set<? extends Position> lambda, $/;"	m	class:BWMStarNode
BWMStarNode	BDAStar/BWMStarNode.java	/^public class BWMStarNode $/;"	c
BWMStarNodeTest	BDAStarTest/BWMStarNodeTest.java	/^public class BWMStarNodeTest {$/;"	c
BXOR	mpi/MPI.java	/^                   LOR, BOR, LXOR, BXOR, MINLOC, MAXLOC;$/;"	f	class:MPI
BXOR	mpi/Op.java	/^  private final static int BXOR  =10;$/;"	f	class:Op	file:
BYTE	kstar/ThreadMessage.java	/^	  final static int BYTE      =  1 ;$/;"	f	class:ThreadMessage
BYTE	mpi/Datatype.java	/^  private final static int BYTE      =  1 ;$/;"	f	class:Datatype	file:
BYTE	mpi/MPI.java	/^  static public Datatype BYTE, CHAR, SHORT, BOOLEAN, $/;"	f	class:MPI
Backbone	kstar/Backbone.java	/^	Backbone(){$/;"	m	class:Backbone
Backbone	kstar/Backbone.java	/^public class Backbone implements Serializable {$/;"	c
Backrub	kstar/Backrub.java	/^    public Backrub(Molecule molec,int resList[]){$/;"	m	class:Backrub
Backrub	kstar/Backrub.java	/^public class Backrub extends Perturbation {$/;"	c
BackrubMinimizer	kstar/BackrubMinimizer.java	/^	BackrubMinimizer(){$/;"	m	class:BackrubMinimizer
BackrubMinimizer	kstar/BackrubMinimizer.java	/^public class BackrubMinimizer implements Serializable {$/;"	c
Backrubs	kstar/Backrubs.java	/^	Backrubs(){$/;"	m	class:Backrubs
Backrubs	kstar/Backrubs.java	/^public class Backrubs implements Serializable {$/;"	c
Barrier	mpi/Intracomm.java	/^  public native void Barrier() throws MPIException ;$/;"	m	class:Intracomm
Bcast	mpi/Intracomm.java	/^  public void Bcast(Object   buf, $/;"	m	class:Intracomm
BoundFlags	kstar/BoundFlags.java	/^	BoundFlags(PairwiseEnergyMatrix arpMatrix, int numResMutable, int strMut[][], StrandRotamers strandLRot[], double pruneE,$/;"	m	class:BoundFlags
BoundFlags	kstar/BoundFlags.java	/^public class BoundFlags extends DEE {$/;"	c
BranchDecomposition	BranchDecomposition/BranchDecomposition.java	/^package BranchDecomposition;$/;"	p
BranchDecomposition	BranchDecomposition/BranchDecomposition.java	/^public class BranchDecomposition {$/;"	c
BranchDecomposition	BranchDecomposition/BranchDecompositionH.java	/^package BranchDecomposition;$/;"	p
BranchDecomposition	BranchDecomposition/BranchEdge.java	/^package BranchDecomposition;$/;"	p
BranchDecomposition	BranchDecomposition/BranchNode.java	/^package BranchDecomposition;$/;"	p
BranchDecomposition	BranchDecomposition/BranchTree.java	/^package BranchDecomposition;$/;"	p
BranchDecomposition	BranchDecomposition/BreadthFirstSearch.java	/^package BranchDecomposition;$/;"	p
BranchDecomposition	BranchDecomposition/GraphVertices.java	/^package BranchDecomposition;$/;"	p
BranchDecomposition	BranchDecomposition/MinVertexCut.java	/^package BranchDecomposition;$/;"	p
BranchDecompositionH	BranchDecomposition/BranchDecompositionH.java	/^	public BranchDecompositionH(String args[]){$/;"	m	class:BranchDecompositionH
BranchDecompositionH	BranchDecomposition/BranchDecompositionH.java	/^public class BranchDecompositionH {$/;"	c
BranchEdge	BranchDecomposition/BranchEdge.java	/^	BranchEdge(BranchNode bn1, BranchNode bn2){$/;"	m	class:BranchEdge
BranchEdge	BranchDecomposition/BranchEdge.java	/^public class BranchEdge implements Serializable {$/;"	c
BranchNode	BranchDecomposition/BranchNode.java	/^	BranchNode(boolean leafNode, String gv1, String gv2){$/;"	m	class:BranchNode
BranchNode	BranchDecomposition/BranchNode.java	/^public class BranchNode implements Serializable {$/;"	c
BranchTree	BranchDecomposition/BranchTree.java	/^	BranchTree(){$/;"	m	class:BranchTree
BranchTree	BranchDecomposition/BranchTree.java	/^public class BranchTree implements Serializable {$/;"	c
BranchTree	kstar/BranchTree.java	/^	public BranchTree(String fName, Molecule m, int numUnprunedRot[], int molResidueMap[], int invResidueMap[], int sysStrandNum, int numResInAS, boolean ligPresent){$/;"	m	class:BranchTree
BranchTree	kstar/BranchTree.java	/^public class BranchTree implements Serializable {$/;"	c
BreadthFirstSearch	BranchDecomposition/BreadthFirstSearch.java	/^	BreadthFirstSearch(BranchTree graph, int sInd, int tInd){$/;"	m	class:BreadthFirstSearch
BreadthFirstSearch	BranchDecomposition/BreadthFirstSearch.java	/^public class BreadthFirstSearch {$/;"	c
Bsend	mpi/Comm.java	/^  public void Bsend(Object   buf, $/;"	m	class:Comm
Bsend_init	mpi/Comm.java	/^  public Prequest Bsend_init(Object   buf, $/;"	m	class:Comm
Buffer_attach	mpi/MPI.java	/^  static public void Buffer_attach(byte[] buffer) throws MPIException {$/;"	m	class:MPI
Buffer_attach_native	mpi/MPI.java	/^  static private native void Buffer_attach_native(byte[] buffer);$/;"	m	class:MPI	file:
Buffer_detach	mpi/MPI.java	/^  static public byte[] Buffer_detach() throws MPIException {$/;"	m	class:MPI
Buffer_detach_native	mpi/MPI.java	/^  static private native void Buffer_detach_native(byte[] buffer);$/;"	m	class:MPI	file:
BuildBalancedTree	BDAStarTest/BDAStarTest.java	/^	private static void BuildBalancedTree(TreeNode root, int height, int currentHeight, $/;"	m	class:BDAStarTest	file:
C0	kstar/TripeptideClosure.java	/^  double[][] C0 = new double[3][3], C1 = new double[3][3], C2 = new double[3][3];$/;"	f	class:TripeptideClosure
C1	kstar/TripeptideClosure.java	/^  double[][] C0 = new double[3][3], C1 = new double[3][3], C2 = new double[3][3];$/;"	f	class:TripeptideClosure
C2	kstar/TripeptideClosure.java	/^  double[][] C0 = new double[3][3], C1 = new double[3][3], C2 = new double[3][3];$/;"	f	class:TripeptideClosure
CART	mpi/MPI.java	/^  static public int GRAPH, CART;$/;"	f	class:MPI
CCLIBKEY	mpi/Makefile	/^CCLIBKEY = $/;"	m
CDIR	mpi/Makefile	/^CDIR = ..\/..\/..\/src\/C$/;"	m
CFLAGS	mpi/Makefile	/^CFLAGS = -c$/;"	m
CHAR	kstar/ThreadMessage.java	/^	  final static int CHAR      =  2 ;$/;"	f	class:ThreadMessage
CHAR	mpi/Datatype.java	/^  private final static int CHAR      =  2 ;$/;"	f	class:Datatype	file:
CHAR	mpi/MPI.java	/^  static public Datatype BYTE, CHAR, SHORT, BOOLEAN, $/;"	f	class:MPI
CHARMM19	kstar/EnvironmentVars.java	/^		AMBER, CHARMM22, CHARMM19NEUTRAL, CHARMM19$/;"	e	enum:EnvironmentVars.FORCEFIELD	file:
CHARMM19NEUTRAL	kstar/EnvironmentVars.java	/^		AMBER, CHARMM22, CHARMM19NEUTRAL, CHARMM19$/;"	e	enum:EnvironmentVars.FORCEFIELD	file:
CHARMM22	kstar/EnvironmentVars.java	/^		AMBER, CHARMM22, CHARMM19NEUTRAL, CHARMM19$/;"	e	enum:EnvironmentVars.FORCEFIELD	file:
CHOICES	BDAStarTest/BDAStarTest.java	/^	public static final int CHOICES = 2;$/;"	f	class:BDAStarTest
CLASSES	mpi/Makefile	/^CLASSES = ..\/..\/..\/lib\/classes$/;"	m
CLASSPATH	mpi/Makefile	/^CLASSPATH = .:$(CLASSES)$/;"	m
COMM_SELF	mpi/MPI.java	/^  static public Comm COMM_SELF;$/;"	f	class:MPI
COMM_WORLD	mpi/MPI.java	/^  static public Intracomm COMM_WORLD;$/;"	f	class:MPI
COMPLEX	kstar/KSParser.java	/^		final static int COMPLEX = -1;$/;"	f	class:KSParser
CONGRUENT	mpi/MPI.java	/^  static public int IDENT, CONGRUENT, SIMILAR, UNEQUAL;$/;"	f	class:MPI
CONNECT_INCREMENT_SIZE	kstar/Molecule.java	/^	public static final int CONNECT_INCREMENT_SIZE = 6000;$/;"	f	class:Molecule
CP	mpi/Makefile	/^CP = cp$/;"	m
CPUTime	BranchDecomposition/BranchDecompositionH.java	/^	public long CPUTime(){$/;"	m	class:BranchDecompositionH
CToNClosure	kstar/CloseLoop.java	/^	boolean CToNClosure = false;$/;"	f	class:CloseLoop
CalculateSolutions	kstar/CloseLoop.java	/^    public int CalculateSolutions(){\/\/Solve the loop closure equations given the current state of predecessor perturbations$/;"	m	class:CloseLoop
Call	mpi/MPI.java	/^  public void Call(Object invec, int inoffset, Object outvec, int outoffset,$/;"	m	class:Maxloc
Call	mpi/MPI.java	/^  public void Call(Object invec, int inoffset, Object outvec, int outoffset,$/;"	m	class:Minloc
Call	mpi/Op.java	/^  public final void Call(Object invec, int inoffset,$/;"	m	class:Op
Call	mpi/User_function.java	/^  public abstract void Call(Object invec, int inoffset,$/;"	m	class:User_function
Calphas	kstar/Shear.java	/^    public Atom Calphas[];\/\/The four Calphas$/;"	f	class:Shear
CanEliminate	kstar/BoundFlags.java	/^	private void CanEliminate (int posNum1, int AANumAtPos1, int rotNumAtPos1,$/;"	m	class:BoundFlags	file:
CanEliminate	kstar/DEEGoldstein.java	/^	private boolean CanEliminate (int posNum, int AANumAtPos, int rotNumAtPos){$/;"	m	class:DEEGoldstein	file:
CanEliminate	kstar/DEEGoldsteinPairs.java	/^	private boolean CanEliminate (int posNum1, int AANumAtPos1, int rotNumAtPos1, int posNum2, $/;"	m	class:DEEGoldsteinPairs	file:
CanEliminate	kstar/DEEGoldsteinTriples.java	/^        private boolean CanEliminate (int posNum1, int AANumAtPos1, int rotNumAtPos1,$/;"	m	class:DEEGoldsteinTriples	file:
CanEliminate	kstar/DEEIndirect.java	/^	private boolean CanEliminate (int posNum, int AANumAtPos, int rotNumAtPos){$/;"	m	class:DEEIndirect	file:
CanEliminate	kstar/DEEIndirect.java	/^        private boolean CanEliminate (int posNum1, int AANumAtPos1, int rotNumAtPos1, int posNum2,$/;"	m	class:DEEIndirect	file:
CanEliminate	kstar/DEESplit1f.java	/^	private boolean CanEliminate (int posNum, int AANumAtPos, int rotNumAtPos){$/;"	m	class:DEESplit1f	file:
CanEliminate	kstar/DEESplit2f.java	/^	private boolean CanEliminate (int posNum, int AANumAtPos, int rotNumAtPos){$/;"	m	class:DEESplit2f	file:
CanEliminate	kstar/MSMinBounds.java	/^	private void CanEliminate (int posNum, int AANumAtPos, int rotNumAtPos, int numRotForCurAAatPos){$/;"	m	class:MSMinBounds	file:
Cancel	mpi/Request.java	/^  public native void Cancel() throws MPIException ;$/;"	m	class:Request
CartParms	mpi/CartParms.java	/^public class CartParms {$/;"	c
Cartcomm	mpi/Cartcomm.java	/^  protected Cartcomm(long handle) throws MPIException {$/;"	m	class:Cartcomm
Cartcomm	mpi/Cartcomm.java	/^public class Cartcomm extends Intracomm {$/;"	c
ChainSection	kstar/PartialStructureSwitch.java	/^    private class ChainSection {\/\/A section of chain from an alternate structure, to be placed into the main structure m as a unit$/;"	c	class:PartialStructureSwitch
Choice	BDAStar/Choice.java	/^    public Choice(int i)$/;"	m	class:Choice
Choice	BDAStar/Choice.java	/^public class Choice {$/;"	c
CloseLoop	kstar/CloseLoop.java	/^    public CloseLoop(String t, Molecule molec, int resList[]){$/;"	m	class:CloseLoop
CloseLoop	kstar/CloseLoop.java	/^    public CloseLoop(String t, Molecule molec, int[] reslist, int[] NAnchorAtoms, int[] CAnchorAtoms){$/;"	m	class:CloseLoop
CloseLoop	kstar/CloseLoop.java	/^public class CloseLoop$/;"	c
Comm	mpi/Comm.java	/^  Comm() {}$/;"	m	class:Comm
Comm	mpi/Comm.java	/^  protected Comm(long handle) {$/;"	m	class:Comm
Comm	mpi/Comm.java	/^public class Comm {$/;"	c
Commit	mpi/Datatype.java	/^  public void Commit() throws MPIException {$/;"	m	class:Datatype
CommucObj	kstar/CommucObj.java	/^	CommucObj() {$/;"	m	class:CommucObj
CommucObj	kstar/CommucObj.java	/^public class CommucObj implements Serializable$/;"	c
Compare	mpi/Comm.java	/^  public static native int Compare(Comm comm1, Comm comm2) throws MPIException ;$/;"	m	class:Comm
Compare	mpi/Group.java	/^  public static native int Compare(Group group1, Group group2)$/;"	m	class:Group
ComputeEliminatedRotConf	kstar/BoundFlags.java	/^	public boolean[][][][][][] ComputeEliminatedRotConf (){$/;"	m	class:BoundFlags
ComputeEliminatedRotConf	kstar/DEEGoldstein.java	/^	public PrunedRotamers<Boolean> ComputeEliminatedRotConf(){$/;"	m	class:DEEGoldstein
ComputeEliminatedRotConf	kstar/DEEGoldsteinPairs.java	/^	public void ComputeEliminatedRotConf(){$/;"	m	class:DEEGoldsteinPairs
ComputeEliminatedRotConf	kstar/DEEGoldsteinTriples.java	/^	public void ComputeEliminatedRotConf(){$/;"	m	class:DEEGoldsteinTriples
ComputeEliminatedRotConf	kstar/DEEIndirect.java	/^	public PrunedRotamers<Boolean> ComputeEliminatedRotConf(){$/;"	m	class:DEEIndirect
ComputeEliminatedRotConf	kstar/DEESplit1f.java	/^	public PrunedRotamers<Boolean> ComputeEliminatedRotConf(){$/;"	m	class:DEESplit1f
ComputeEliminatedRotConf	kstar/DEESplit2f.java	/^	public PrunedRotamers<Boolean> ComputeEliminatedRotConf(){$/;"	m	class:DEESplit2f
ComputeEliminatedRotConf	kstar/MSMinBounds.java	/^	public PrunedRotamers ComputeEliminatedRotConf (){$/;"	m	class:MSMinBounds
ComputeKStarScore	Miscellany/ComputeKStarScore.java	/^public class ComputeKStarScore {$/;"	c
Conf	kstar/TreeEdge.java	/^        public Conf(RotTypeMap[] conformation, double energy)$/;"	m	class:TreeEdge.Conf
Conf	kstar/TreeEdge.java	/^        public Conf(int[] c, double e, RotTypeMap[][] matrix)$/;"	m	class:TreeEdge.Conf
Conf	kstar/TreeEdge.java	/^    private class Conf implements Comparable<Conf>$/;"	c	class:TreeEdge
ConfFromAStarTokens	Miscellany/ComputeKStarScore.java	/^	public static String ConfFromAStarTokens(String[] tokens)$/;"	m	class:ComputeKStarScore
ConfFromBWMTokens	Miscellany/ComputeKStarScore.java	/^	public static String ConfFromBWMTokens(String[] tokens)$/;"	m	class:ComputeKStarScore
ConfInfo	kstar/CommucObj.java	/^		ConfInfo (int treeLevels){$/;"	m	class:CommucObj.ConfInfo
ConfInfo	kstar/CommucObj.java	/^	public class ConfInfo implements Serializable {$/;"	c	class:CommucObj
ConfPair	kstar/ConfPair.java	/^	public ConfPair(int[] conformation, float[] e){$/;"	m	class:ConfPair
ConfPair	kstar/ConfPair.java	/^public class ConfPair implements Comparable{$/;"	c
Conformation	BDAStar/Conformation.java	/^public interface Conformation {$/;"	i
ConformationComparator	kstar/TreeEdge.java	/^    private class ConformationComparator implements Comparator<Conf>$/;"	c	class:TreeEdge
ConformationMap	BDAStar/ConformationMap.java	/^public abstract class ConformationMap implements Map<Choice, ProteinConformationTrie> {$/;"	c
Contiguous	mpi/Datatype.java	/^  public static Datatype Contiguous(int      count, $/;"	m	class:Datatype
Coords	mpi/Cartcomm.java	/^  public native int [] Coords(int rank) throws MPIException ;$/;"	m	class:Cartcomm
CopyOfBWMAStarNode	BDAStar/CopyOfBWMAStarNode.java	/^    public CopyOfBWMAStarNode(Conformation conf) $/;"	m	class:CopyOfBWMAStarNode
CopyOfBWMAStarNode	BDAStar/CopyOfBWMAStarNode.java	/^public class CopyOfBWMAStarNode implements Comparable<CopyOfBWMAStarNode> {$/;"	c
Creat	mpi/Intracomm.java	/^  public Intracomm Creat(Group group) throws MPIException {$/;"	m	class:Intracomm
CreateTree	BDAStar/BWMStarNode.java	/^    public static BWMStarNode CreateTree(TreeNode node, SolutionSpace space)$/;"	m	class:BWMStarNode
CreateTree	BDAStar/CopyOfBWMAStarNode.java	/^    public static CopyOfBWMAStarNode CreateTree(TreeNode root, Conformation previous, SolutionSpace s)$/;"	m	class:CopyOfBWMAStarNode
CreateTree2	BDAStar/BWMAStarNode.java	/^    public static void CreateTree2(TreeNode root, BWMAStarNode parent, Conformation previous, PriorityQueue<BWMAStarNode> heap, SolutionSpace s, int index, List<? extends Position> positions)$/;"	m	class:BWMAStarNode
Create_cart	mpi/Intracomm.java	/^  public Cartcomm Create_cart(int [] dims, boolean [] periods, $/;"	m	class:Intracomm
Create_graph	mpi/Intracomm.java	/^  public Graphcomm Create_graph(int [] index, int [] edges, boolean reorder)$/;"	m	class:Intracomm
Create_intercomm	mpi/Comm.java	/^  public Intercomm Create_intercomm(Comm local_comm, $/;"	m	class:Comm
D2R	kstar/Amber96ext.java	/^	double D2R = 0.01745329251994329576;$/;"	f	class:Amber96ext
DACSthread	kstar/KSParser.java	/^		DACSthread(RotamerSearch rsP, CommucObj cObjP, PrintStream lP, String ociP){$/;"	m	class:KSParser.DACSthread
DACSthread	kstar/KSParser.java	/^	private class DACSthread implements Runnable {$/;"	c	class:KSParser
DEE	kstar/DEE.java	/^public abstract class DEE {$/;"	c
DEEGoldstein	kstar/DEEGoldstein.java	/^	DEEGoldstein(PairwiseEnergyMatrix arpMatrix, PairwiseEnergyMatrix arpMatrixMax, int numResMutable,$/;"	m	class:DEEGoldstein
DEEGoldstein	kstar/DEEGoldstein.java	/^public class DEEGoldstein extends DEE {$/;"	c
DEEGoldsteinPairs	kstar/DEEGoldsteinPairs.java	/^	DEEGoldsteinPairs(PairwiseEnergyMatrix arpMatrix, PairwiseEnergyMatrix arpMatrixMax, int numResMutable,$/;"	m	class:DEEGoldsteinPairs
DEEGoldsteinPairs	kstar/DEEGoldsteinPairs.java	/^public class DEEGoldsteinPairs extends DEE {$/;"	c
DEEGoldsteinTriples	kstar/DEEGoldsteinTriples.java	/^	DEEGoldsteinTriples (PairwiseEnergyMatrix arpMatrix, int numResMutable, int strMut[][], float initEw,$/;"	m	class:DEEGoldsteinTriples
DEEGoldsteinTriples	kstar/DEEGoldsteinTriples.java	/^public class DEEGoldsteinTriples extends DEE {$/;"	c
DEEIndirect	kstar/DEEIndirect.java	/^	DEEIndirect (PairwiseEnergyMatrix arpMatrix, int numResMutable, int strMut[][], float initEw,$/;"	m	class:DEEIndirect
DEEIndirect	kstar/DEEIndirect.java	/^public class DEEIndirect extends DEE {$/;"	c
DEESplit1f	kstar/DEESplit1f.java	/^	DEESplit1f(PairwiseEnergyMatrix arpMatrix, PairwiseEnergyMatrix arpMatrixMax, int numResMutable, int strMut[][], float initEw,$/;"	m	class:DEESplit1f
DEESplit1f	kstar/DEESplit1f.java	/^public class DEESplit1f extends DEE {$/;"	c
DEESplit2f	kstar/DEESplit2f.java	/^	DEESplit2f(PairwiseEnergyMatrix arpMatrix, PairwiseEnergyMatrix arpMatrixMax, int numResMutable,$/;"	m	class:DEESplit2f
DEESplit2f	kstar/DEESplit2f.java	/^public class DEESplit2f extends DEE {$/;"	c
DIR	mpi/Makefile	/^DIR = $(TITLE)\/$/;"	m
DOUBLE	kstar/ThreadMessage.java	/^	  final static int DOUBLE    =  8 ;  $/;"	f	class:ThreadMessage
DOUBLE	mpi/Datatype.java	/^  private final static int DOUBLE    =  8 ;  $/;"	f	class:Datatype	file:
DOUBLE	mpi/MPI.java	/^    INT, LONG, FLOAT, DOUBLE, PACKED, LB, UB, OBJECT;$/;"	f	class:MPI
DOUBLE2	mpi/MPI.java	/^  static public Datatype SHORT2, INT2, LONG2, FLOAT2, DOUBLE2;$/;"	f	class:MPI
DOWN	kstar/ProlineFlip.java	/^    static boolean DOWN = false;\/\/Pucker options$/;"	f	class:ProlineFlip
Datatype	mpi/Datatype.java	/^  Datatype() {}$/;"	m	class:Datatype
Datatype	mpi/Datatype.java	/^  Datatype(int Type) { $/;"	m	class:Datatype
Datatype	mpi/Datatype.java	/^  private Datatype(int count, Datatype oldtype) throws MPIException {$/;"	m	class:Datatype	file:
Datatype	mpi/Datatype.java	/^  private Datatype(int count, int blocklength, int stride, Datatype oldtype,$/;"	m	class:Datatype	file:
Datatype	mpi/Datatype.java	/^  private Datatype(int[] array_of_blocklengths, int[] array_of_displacements,$/;"	m	class:Datatype	file:
Datatype	mpi/Datatype.java	/^public class Datatype extends Freeable {$/;"	c
Difference	mpi/Group.java	/^  public static Group Difference(Group group1, Group group2)$/;"	m	class:Group
Dims_create	mpi/Cartcomm.java	/^  static public native void Dims_create(int nnodes, int[] dims)$/;"	m	class:Cartcomm
DoBoundFlags	kstar/RotamerSearch.java	/^	public void DoBoundFlags(int numMutable, int strandMut[][],$/;"	m	class:RotamerSearch
DoDEEConfSplitting	kstar/RotamerSearch.java	/^	public PrunedRotamers<Boolean> DoDEEConfSplitting(int numMutable, $/;"	m	class:RotamerSearch
DoDEEGoldstein	kstar/RotamerSearch.java	/^	public PrunedRotamers<Boolean> DoDEEGoldstein(int numMutable,$/;"	m	class:RotamerSearch
DoDEEIndirect	kstar/RotamerSearch.java	/^        public PrunedRotamers<Boolean> DoDEEIndirect(int numMutable, int strandMut[][],$/;"	m	class:RotamerSearch
DoDEEPairs	kstar/RotamerSearch.java	/^	public void DoDEEPairs(int numMutable, int strandMut[][], $/;"	m	class:RotamerSearch
DoDEETriples	kstar/RotamerSearch.java	/^        public void DoDEETriples(int numMutable, int strandMut[][],$/;"	m	class:RotamerSearch
DoMinBounds	kstar/RotamerSearch.java	/^	public PrunedRotamers<Boolean> DoMinBounds(int numInAS, int strandMut[][],$/;"	m	class:RotamerSearch
DoMinBounds	kstar/RotamerSearch.java	/^	public PrunedRotamers<Boolean> DoMinBounds(int numMutable, int strandMut[][],$/;"	m	class:RotamerSearch
DoPruneStericTemplate	kstar/RotamerSearch.java	/^	public PrunedRotamers<Boolean> DoPruneStericTemplate(int numMutable, int strandMut[][],$/;"	m	class:RotamerSearch
DoSaveMolecule	kstar/SaveMolecule.java	/^	private void DoSaveMolecule (Molecule m, PrintStream pw, Hashtable params) throws Exception {$/;"	m	class:SaveMolecule	file:
EEF1	kstar/EEF1.java	/^	EEF1(Molecule mol){$/;"	m	class:EEF1
EEF1	kstar/EEF1.java	/^public class EEF1 implements Serializable {$/;"	c
EMPTY	mpi/Group.java	/^  protected final static int EMPTY = 0;$/;"	f	class:Group
ERRORS_ARE_FATAL	mpi/MPI.java	/^  static Errhandler ERRORS_ARE_FATAL, ERRORS_RETURN;$/;"	f	class:MPI
ERRORS_RETURN	mpi/MPI.java	/^  static Errhandler ERRORS_ARE_FATAL, ERRORS_RETURN;$/;"	f	class:MPI
Ec	kstar/BoundFlags.java	/^	double Ec = bigE;$/;"	f	class:BoundFlags
Ec	kstar/MSMinBounds.java	/^		double Ec; \/\/min bound for rot index$/;"	f	class:MSMinBounds.MSRotBounds
Ec	kstar/MSMinBounds.java	/^	double Ec = bigE;$/;"	f	class:MSMinBounds
Ec_const	kstar/RotamerSearch.java	/^	private double Ec_const = stericE;	\/\/ the minimum lower energy bound for a pruned conformation$/;"	f	class:RotamerSearch	file:
EnergyAtLevel	kstar/MSAStar.java	/^	private float EnergyAtLevel(int topLevel, int curLevel, int conf[]){$/;"	m	class:MSAStar	file:
EnergyFunction	BDAStar/EnergyFunction.java	/^    public EnergyFunction (PairwiseEnergyMatrix m, InteractionGraph g)$/;"	m	class:EnergyFunction
EnergyFunction	BDAStar/EnergyFunction.java	/^public class EnergyFunction $/;"	c
EnergyMatrixComparison	Tests/EnergyMatrixComparison.java	/^public class EnergyMatrixComparison$/;"	c
EnumerateEnsembles	kstar/TreeEdge.java	/^    static boolean EnumerateEnsembles = false;$/;"	f	class:TreeEdge
EnvironmentVars	kstar/EnvironmentVars.java	/^public class EnvironmentVars {$/;"	c
Errhandler	mpi/Errhandler.java	/^  public Errhandler(int Type) { GetErrhandler(Type);}$/;"	m	class:Errhandler
Errhandler	mpi/Errhandler.java	/^  public Errhandler(long _handle) { handle = _handle;}  $/;"	m	class:Errhandler
Errhandler	mpi/Errhandler.java	/^public class Errhandler{$/;"	c
Errhandler_set	mpi/Comm.java	/^  public native void Errhandler_set(Errhandler errhandler) throws MPIException ;$/;"	m	class:Comm
Errorhandler_get	mpi/Comm.java	/^  public Errhandler Errorhandler_get() throws MPIException {$/;"	m	class:Comm
Ew	kstar/BoundFlags.java	/^	double Ew = 0.0; \/\/the E window allowed from the best energy$/;"	f	class:BoundFlags
Ew	kstar/MSMinBounds.java	/^	double Ew = 0.0; \/\/the E window allowed from the best energy$/;"	f	class:MSMinBounds
Excl	mpi/Group.java	/^  public Group Excl(int [] ranks) throws MPIException {$/;"	m	class:Group
ExpFunction	kstar/ExpFunction.java	/^	public ExpFunction(){$/;"	m	class:ExpFunction
ExpFunction	kstar/ExpFunction.java	/^public class ExpFunction {$/;"	c
ExpansionQueue	kstar/ExpansionQueue.java	/^	ExpansionQueue () {$/;"	m	class:ExpansionQueue
ExpansionQueue	kstar/ExpansionQueue.java	/^public class ExpansionQueue {$/;"	c
Extent	mpi/Datatype.java	/^  public int Extent() throws MPIException {$/;"	m	class:Datatype
FATAL	mpi/Errhandler.java	/^  public final static int FATAL = 1;$/;"	f	class:Errhandler
FLOAT	kstar/ThreadMessage.java	/^	  final static int FLOAT     =  7 ;$/;"	f	class:ThreadMessage
FLOAT	mpi/Datatype.java	/^  private final static int FLOAT     =  7 ;$/;"	f	class:Datatype	file:
FLOAT	mpi/MPI.java	/^    INT, LONG, FLOAT, DOUBLE, PACKED, LB, UB, OBJECT;$/;"	f	class:MPI
FLOAT2	mpi/MPI.java	/^  static public Datatype SHORT2, INT2, LONG2, FLOAT2, DOUBLE2;$/;"	f	class:MPI
FORCEFIELD	kstar/EnvironmentVars.java	/^	public enum FORCEFIELD {$/;"	g	class:EnvironmentVars
Finalize	mpi/MPI.java	/^  static public native void Finalize() throws MPIException ;$/;"	m	class:MPI
ForceField	kstar/ForceField.java	/^public interface ForceField{$/;"	i
Free	mpi/Comm.java	/^  public native void Free() throws MPIException ;$/;"	m	class:Comm
Free	mpi/Request.java	/^  public native void Free() throws MPIException ;$/;"	m	class:Request
Freeable	mpi/Freeable.java	/^abstract class Freeable {$/;"	c
Fset	kstar/TreeEdge.java	/^    private LinkedHashSet<TreeEdge> Fset = null; \/\/ list to contain the F set of the edges$/;"	f	class:TreeEdge	file:
FullStructureSwitch	kstar/FullStructureSwitch.java	/^    public FullStructureSwitch(Molecule m, int resList[], BufferedReader br){$/;"	m	class:FullStructureSwitch
FullStructureSwitch	kstar/FullStructureSwitch.java	/^public class FullStructureSwitch extends Perturbation {$/;"	c
G	BDAStar/EnergyFunction.java	/^    private InteractionGraph G;$/;"	f	class:EnergyFunction	file:
G	BranchDecomposition/BreadthFirstSearch.java	/^	private BranchTree G = null; \/\/the directed graph to be searched$/;"	f	class:BreadthFirstSearch	file:
G	kstar/BranchTree.java	/^	private InteractionGraph G = null; \/\/the residue interaction graph$/;"	f	class:BranchTree	file:
G	kstar/PairwiseEnergyMatrix.java	/^        InteractionGraph G = null; \/\/ SJ, the sparse interaction graph$/;"	f	class:PairwiseEnergyMatrix
G	kstar/ReducedEnergyMatrix.java	/^      private InteractionGraph G = null;$/;"	f	class:ReducedEnergyMatrix	file:
GLOBALNUM	kstar/SimpleMinimizer.java	/^	public int GLOBALNUM = 0; \/\/Used to count how many times the minimizer$/;"	f	class:SimpleMinimizer
GRAPH	mpi/MPI.java	/^  static public int GRAPH, CART;$/;"	f	class:MPI
GROUP_EMPTY	mpi/MPI.java	/^  static public Group GROUP_EMPTY;$/;"	f	class:MPI
Gather	mpi/Intracomm.java	/^  public void Gather(Object   sendbuf, $/;"	m	class:Intracomm
Gatherv	mpi/Intracomm.java	/^  public void Gatherv(Object   sendbuf,  $/;"	m	class:Intracomm
GenericResidueTemplates	kstar/GenericResidueTemplates.java	/^	GenericResidueTemplates() throws Exception {$/;"	m	class:GenericResidueTemplates
GenericResidueTemplates	kstar/GenericResidueTemplates.java	/^public class GenericResidueTemplates implements Serializable{$/;"	c
Get	mpi/Cartcomm.java	/^  public native CartParms Get() throws MPIException ;$/;"	m	class:Cartcomm
Get	mpi/Graphcomm.java	/^  public native GraphParms Get() throws MPIException ;$/;"	m	class:Graphcomm
GetCart	mpi/Intracomm.java	/^  private native long GetCart(int [] dims, boolean [] periods,$/;"	m	class:Intracomm	file:
GetComm	mpi/Comm.java	/^  private native void GetComm(int Type);$/;"	m	class:Comm	file:
GetContiguous	mpi/Datatype.java	/^  private native void GetContiguous(int count, Datatype oldtype);$/;"	m	class:Datatype	file:
GetDatatype	mpi/Datatype.java	/^  private native void GetDatatype(int Type);$/;"	m	class:Datatype	file:
GetErrhandler	mpi/Errhandler.java	/^  protected native void GetErrhandler(int Type);$/;"	m	class:Errhandler
GetGraph	mpi/Intracomm.java	/^  private native long GetGraph(int [] index,int [] edges, boolean reorder);$/;"	m	class:Intracomm	file:
GetGroup	mpi/Group.java	/^  private native void GetGroup(int Type);$/;"	m	class:Group	file:
GetHindexed	mpi/Datatype.java	/^  private native void GetHindexed(int[] array_of_blocklengths,$/;"	m	class:Datatype	file:
GetHvector	mpi/Datatype.java	/^  private native void GetHvector(int count, int blocklength, int stride,$/;"	m	class:Datatype	file:
GetIndexed	mpi/Datatype.java	/^  private native void GetIndexed(int[] array_of_blocklengths,$/;"	m	class:Datatype	file:
GetIntercomm	mpi/Comm.java	/^  public native long GetIntercomm(Comm local_comm, $/;"	m	class:Comm
GetOp	mpi/Op.java	/^  private native void GetOp(int Type);$/;"	m	class:Op	file:
GetReq	mpi/Request.java	/^  private native void GetReq(int Type);$/;"	m	class:Request	file:
GetStruct	mpi/Datatype.java	/^  private native void GetStruct(int[] array_of_blocklengths,$/;"	m	class:Datatype	file:
GetVector	mpi/Datatype.java	/^  private native void GetVector(int count, int blocklength, int stride,$/;"	m	class:Datatype	file:
Get_count	mpi/Status.java	/^  public int Get_count(Datatype datatype) throws MPIException {$/;"	m	class:Status
Get_elements	mpi/Status.java	/^  public int Get_elements(Datatype datatype) throws MPIException {$/;"	m	class:Status
Get_processor_name	mpi/MPI.java	/^  static private native int Get_processor_name(byte[] buf) ;$/;"	m	class:MPI	file:
Get_processor_name	mpi/MPI.java	/^  static public String Get_processor_name() throws MPIException {$/;"	m	class:MPI
GraphParms	mpi/GraphParms.java	/^public class GraphParms {$/;"	c
GraphVertices	BranchDecomposition/GraphVertices.java	/^	GraphVertices(){		$/;"	m	class:GraphVertices
GraphVertices	BranchDecomposition/GraphVertices.java	/^public class GraphVertices {$/;"	c
Graphcomm	mpi/Graphcomm.java	/^  protected Graphcomm(long handle) throws MPIException {$/;"	m	class:Graphcomm
Graphcomm	mpi/Graphcomm.java	/^public class Graphcomm extends Intracomm {$/;"	c
Group	mpi/Comm.java	/^  public Group Group() throws MPIException {$/;"	m	class:Comm
Group	mpi/Group.java	/^  protected Group(int Type) { GetGroup(Type); }$/;"	m	class:Group
Group	mpi/Group.java	/^  protected Group(long _handle) { handle = _handle;}$/;"	m	class:Group
Group	mpi/Group.java	/^public class Group extends Freeable {$/;"	c
HELIX	kstar/Residue.java	/^        final static int HELIX = 0;$/;"	f	class:Residue
HOST	mpi/MPI.java	/^  static public int TAG_UB, HOST, IO;$/;"	f	class:MPI
Hindexed	mpi/Datatype.java	/^  public static Datatype Hindexed(int[]    array_of_blocklengths, $/;"	m	class:Datatype
Hvector	mpi/Datatype.java	/^  public static Datatype Hvector(int      count, $/;"	m	class:Datatype
IDENT	mpi/MPI.java	/^  static public int IDENT, CONGRUENT, SIMILAR, UNEQUAL;$/;"	f	class:MPI
INCLUDES	mpi/Makefile	/^INCLUDES = -I$(JDK)\/include -I$(JDK)\/include\/linux -I$(MPI_INC)$/;"	m
INSTANCE	kstar/RamachandranChecker.java	/^        private static final RamachandranChecker INSTANCE = new RamachandranChecker();$/;"	f	class:RamachandranChecker.RamachandranCheckerHolder	file:
INT	kstar/ThreadMessage.java	/^	  final static int INT       =  5 ;$/;"	f	class:ThreadMessage
INT	mpi/Datatype.java	/^  private final static int INT       =  5 ;$/;"	f	class:Datatype	file:
INT	mpi/MPI.java	/^    INT, LONG, FLOAT, DOUBLE, PACKED, LB, UB, OBJECT;$/;"	f	class:MPI
INT2	mpi/MPI.java	/^  static public Datatype SHORT2, INT2, LONG2, FLOAT2, DOUBLE2;$/;"	f	class:MPI
IO	mpi/MPI.java	/^  static public int TAG_UB, HOST, IO;$/;"	f	class:MPI
Ibsend	mpi/Comm.java	/^  protected native Request Ibsend(Object   buf, $/;"	m	class:Comm
Ibsend	mpi/Comm.java	/^  public Request Ibsend(Object   buf, $/;"	m	class:Comm
Incl	mpi/Group.java	/^  public Group Incl(int [] ranks) throws MPIException {$/;"	m	class:Group
IndInt	kstar/BoundFlags.java	/^	private void IndInt (int atPos, int atAA, int atRot){$/;"	m	class:BoundFlags	file:
IndInt	kstar/DEEGoldsteinPairs.java	/^	private double IndInt (int atPos, int atAA, int atRot){$/;"	m	class:DEEGoldsteinPairs	file:
IndInt	kstar/MSMinBounds.java	/^	private void IndInt (int atPos, int atAA, int atRot){$/;"	m	class:MSMinBounds	file:
IndInt	kstar/MinDEEIntervals.java	/^	private double IndInt (int atPos, int atAA, int atRot){$/;"	m	class:MinDEEIntervals	file:
IndMinDiffPVE	kstar/BoundFlags.java	/^	private void IndMinDiffPVE (int firstPos, int firstAA, int firstRot1, int secondPos){$/;"	m	class:BoundFlags	file:
IndMinDiffPVE	kstar/DEEGoldstein.java	/^	private double IndMinDiffPVE (int firstPos, int firstAA1, int firstRot1, int firstAA2, int firstRot2, int secondPos){$/;"	m	class:DEEGoldstein	file:
IndMinDiffPVE	kstar/DEEGoldsteinPairs.java	/^	private double IndMinDiffPVE (int firstPos, int firstAA1, int firstRot1, int firstAltAA1, int firstAltRot1, $/;"	m	class:DEEGoldsteinPairs	file:
IndMinDiffPVE	kstar/DEESplit1f.java	/^	private double IndMinDiffPVE (int firstPos, int firstAA1, int firstRot1, int firstAA2, int firstRot2, int secondPos){$/;"	m	class:DEESplit1f	file:
IndMinDiffPVE	kstar/DEESplit2f.java	/^	private double IndMinDiffPVE (int firstPos, int firstAA1, int firstRot1, int firstAA2, int firstRot2, int secondPos){$/;"	m	class:DEESplit2f	file:
IndMinDiffPVE	kstar/MSMinBounds.java	/^	private void IndMinDiffPVE (int firstPos, int firstAA, int firstRot1, int secondPos){$/;"	m	class:MSMinBounds	file:
Index3	kstar/PrunedRotamers.java	/^	public Index3(String s){$/;"	m	class:Index3
Index3	kstar/PrunedRotamers.java	/^	public Index3(int curPos, int curAA, int curRot) {$/;"	m	class:Index3
Index3	kstar/PrunedRotamers.java	/^class Index3 implements Comparable<Index3> {$/;"	c
Indexed	mpi/Datatype.java	/^  public static Datatype Indexed(int[]    array_of_blocklengths, $/;"	m	class:Datatype
Init	mpi/MPI.java	/^  static public String [] Init(String[] args) throws MPIException {$/;"	m	class:MPI
InitNative	mpi/MPI.java	/^  static private native String [] InitNative(String[] args);$/;"	m	class:MPI	file:
Initialized	mpi/MPI.java	/^  static public native boolean Initialized() throws MPIException ;$/;"	m	class:MPI
InteractionGraph	kstar/InteractionGraph.java	/^	InteractionGraph(int numV){$/;"	m	class:InteractionGraph
InteractionGraph	kstar/InteractionGraph.java	/^public class InteractionGraph {$/;"	c
Intercomm	mpi/Intercomm.java	/^  protected Intercomm(long handle) {super(handle) ;}$/;"	m	class:Intercomm
Intercomm	mpi/Intercomm.java	/^public class Intercomm extends Comm {$/;"	c
Intersection	mpi/Group.java	/^  public static Group Intersection(Group group1,Group group2)$/;"	m	class:Group
Intracomm	mpi/Intracomm.java	/^  Intracomm() {}$/;"	m	class:Intracomm
Intracomm	mpi/Intracomm.java	/^  protected Intracomm(long handle) throws MPIException {$/;"	m	class:Intracomm
Intracomm	mpi/Intracomm.java	/^public class Intracomm extends Comm {$/;"	c
Iprobe	kstar/MPItoThread.java	/^	public static Object Iprobe(int source, int tag) throws MPIException, InterruptedException{$/;"	m	class:MPItoThread
Iprobe	kstar/ThreadElement.java	/^	public ThreadStatus Iprobe(int source, int tag) throws InterruptedException{$/;"	m	class:ThreadElement
Iprobe	mpi/Comm.java	/^  private native Status Iprobe(int source, int tag,Status stat)$/;"	m	class:Comm	file:
Iprobe	mpi/Comm.java	/^  public Status Iprobe(int source, int tag) throws MPIException {$/;"	m	class:Comm
Irecv	mpi/Comm.java	/^  protected native Request Irecv(Object   buf, $/;"	m	class:Comm
Irecv	mpi/Comm.java	/^  public Request Irecv(Object   buf, $/;"	m	class:Comm
Irsend	mpi/Comm.java	/^  protected native Request Irsend(Object   buf,$/;"	m	class:Comm
Irsend	mpi/Comm.java	/^  public Request Irsend(Object   buf, $/;"	m	class:Comm
Is_null	mpi/Comm.java	/^  public native boolean Is_null();$/;"	m	class:Comm
Is_null	mpi/Request.java	/^  public native boolean Is_null();$/;"	m	class:Request
Isend	kstar/MPItoThread.java	/^	public static void Isend(Object buf, int offset, int count, int type,$/;"	m	class:MPItoThread
Isend	mpi/Comm.java	/^  protected native Request Isend(Object   buf, $/;"	m	class:Comm
Isend	mpi/Comm.java	/^  public Request Isend(Object   buf, $/;"	m	class:Comm
Issend	mpi/Comm.java	/^  protected native Request Issend(Object   buf, $/;"	m	class:Comm
Issend	mpi/Comm.java	/^  public Request Issend(Object   buf, $/;"	m	class:Comm
Ival	kstar/DEE.java	/^	float Ival = 0.0f;$/;"	f	class:DEE
JAVAFILES	mpi/Makefile	/^JAVAFILES= \\$/;"	m
JAVA_H	mpi/Makefile	/^JAVA_H= $(CDIR)\/$(PFX)MPI.h           \\$/;"	m
JC	mpi/Makefile	/^JC = $(JDK)\/bin\/javac$/;"	m
JDK	mpi/Makefile	/^JDK = \/usr\/java\/latest$/;"	m
JFLAG	mpi/Makefile	/^JFLAG = -jni$/;"	m
JH	mpi/Makefile	/^JH = $(JDK)\/bin\/javah$/;"	m
KSCONFTHRESH	kstar/CommucObj.java	/^	boolean KSCONFTHRESH = false;$/;"	f	class:CommucObj
KSGMEC	kstar/CommucObj.java	/^	boolean KSGMEC = false;$/;"	f	class:CommucObj
KSParser	kstar/KSParser.java	/^public class KSParser$/;"	c
KSepsilon	kstar/RotamerSearch.java	/^	float KSepsilon = 0.03f;$/;"	f	class:RotamerSearch
KStar	kstar/KStar.java	/^public class KStar$/;"	c
KSthread	kstar/KSthread.java	/^	public KSthread(KSParser k, int n, ThreadElement t) {$/;"	m	class:KSthread
KSthread	kstar/KSthread.java	/^public class KSthread implements Runnable {$/;"	c
L	kstar/TreeEdge.java	/^    private LinkedHashSet<Integer> L = null; \/\/the L set (vertices have molecule index-relative numbering)$/;"	f	class:TreeEdge	file:
LAND	mpi/MPI.java	/^  static public Op MAX, MIN, SUM, PROD, LAND, BAND,$/;"	f	class:MPI
LAND	mpi/Op.java	/^  private final static int LAND  = 5;$/;"	f	class:Op	file:
LB	kstar/ThreadMessage.java	/^	  final static int LB        = 10 ;$/;"	f	class:ThreadMessage
LB	mpi/Datatype.java	/^  private final static int LB        = 10 ;$/;"	f	class:Datatype	file:
LB	mpi/MPI.java	/^    INT, LONG, FLOAT, DOUBLE, PACKED, LB, UB, OBJECT;$/;"	f	class:MPI
LIB	mpi/Makefile	/^LIB = ..\/..\/..\/lib$/;"	m
LONG	kstar/ThreadMessage.java	/^	  final static int LONG      =  6 ;$/;"	f	class:ThreadMessage
LONG	mpi/Datatype.java	/^  private final static int LONG      =  6 ;$/;"	f	class:Datatype	file:
LONG	mpi/MPI.java	/^    INT, LONG, FLOAT, DOUBLE, PACKED, LB, UB, OBJECT;$/;"	f	class:MPI
LONG2	mpi/MPI.java	/^  static public Datatype SHORT2, INT2, LONG2, FLOAT2, DOUBLE2;$/;"	f	class:MPI
LOOP	kstar/Residue.java	/^        final static int LOOP = 2;$/;"	f	class:Residue
LOR	mpi/MPI.java	/^                   LOR, BOR, LXOR, BXOR, MINLOC, MAXLOC;$/;"	f	class:MPI
LOR	mpi/Op.java	/^  private final static int LOR   = 7;$/;"	f	class:Op	file:
LXOR	mpi/MPI.java	/^                   LOR, BOR, LXOR, BXOR, MINLOC, MAXLOC;$/;"	f	class:MPI
LXOR	mpi/Op.java	/^  private final static int LXOR  = 9;$/;"	f	class:Op	file:
LazyHeap	kstar/TreeEdge.java	/^        public LazyHeap (PriorityQueue<T> template)$/;"	m	class:TreeEdge.LazyHeap
LazyHeap	kstar/TreeEdge.java	/^    private class LazyHeap<T> extends PriorityQueue<T>$/;"	c	class:TreeEdge
Lb	mpi/Datatype.java	/^  public int Lb() throws MPIException {$/;"	m	class:Datatype
LoopClosureAdjustment	kstar/LoopClosureAdjustment.java	/^    public LoopClosureAdjustment(String t, Molecule molec, int resList[]){$/;"	m	class:LoopClosureAdjustment
LoopClosureAdjustment	kstar/LoopClosureAdjustment.java	/^public class LoopClosureAdjustment extends Perturbation {$/;"	c
Lset	BranchDecomposition/MinVertexCut.java	/^	private LinkedHashSet<String> Lset = null;$/;"	f	class:MinVertexCut	file:
M	BranchDecomposition/BranchEdge.java	/^	private LinkedHashSet<String> M = null; \/\/the M set$/;"	f	class:BranchEdge	file:
M	kstar/TreeEdge.java	/^    private LinkedHashSet<Integer> M = null; \/\/the M set (vertices have molecule index-relative numbering)$/;"	f	class:TreeEdge	file:
MAX	mpi/MPI.java	/^  static public Op MAX, MIN, SUM, PROD, LAND, BAND,$/;"	f	class:MPI
MAX	mpi/Op.java	/^  private final static int MAX   = 1;$/;"	f	class:Op	file:
MAXIT	kstar/SturmSolver.java	/^    int MAXIT, MAX_ITER_SECANT;$/;"	f	class:SturmSolver
MAXLOC	mpi/MPI.java	/^                   LOR, BOR, LXOR, BXOR, MINLOC, MAXLOC;$/;"	f	class:MPI
MAXLOC	mpi/Op.java	/^  private final static int MAXLOC=12;$/;"	f	class:Op	file:
MAXPOW	kstar/SturmSolver.java	/^    final int MAXPOW=32;$/;"	f	class:SturmSolver
MAX_ATOM_CONNECTIONS	kstar/Molecule.java	/^	public static final int MAX_ATOM_CONNECTIONS = 7;$/;"	f	class:Molecule
MAX_ENERGY	BDAStar/ProteinConformation.java	/^    public static final double MAX_ENERGY = Double.MAX_VALUE;$/;"	f	class:ProteinConformation
MAX_ENERGY	BDAStarTest/TestProteinConformation.java	/^    public static final double MAX_ENERGY = Double.MAX_VALUE;$/;"	f	class:TestProteinConformation
MAX_ITER_SECANT	kstar/SturmSolver.java	/^    int MAXIT, MAX_ITER_SECANT;$/;"	f	class:SturmSolver
MAX_NUM_ATOMS_DISTAL	kstar/SimpleMinimizer.java	/^	int MAX_NUM_ATOMS_DISTAL = 30;$/;"	f	class:SimpleMinimizer
MAX_NUM_ATOMS_RES	kstar/BBMinimizer.java	/^	private int MAX_NUM_ATOMS_RES = 30; \/\/the max number of atoms for a given residue; this is increased as needed for big ligands$/;"	f	class:BBMinimizer	file:
MAX_NUM_ATOMS_RES	kstar/BackrubMinimizer.java	/^	private int MAX_NUM_ATOMS_RES = 30; \/\/the max number of atoms for a given residue; this is increased as needed for big ligands$/;"	f	class:BackrubMinimizer	file:
MAX_NUM_RES	kstar/GenericResidueTemplates.java	/^	public static final int MAX_NUM_RES = 50;$/;"	f	class:GenericResidueTemplates
MAX_ORDER	kstar/SturmSolver.java	/^    final int MAX_ORDER=16;$/;"	f	class:SturmSolver
MAX_PROCESSOR_NAME	mpi/MPI.java	/^  static int MAX_PROCESSOR_NAME = 256;$/;"	f	class:MPI
MIN	mpi/MPI.java	/^  static public Op MAX, MIN, SUM, PROD, LAND, BAND,$/;"	f	class:MPI
MIN	mpi/Op.java	/^  private final static int MIN   = 2;$/;"	f	class:Op	file:
MINLOC	mpi/MPI.java	/^                   LOR, BOR, LXOR, BXOR, MINLOC, MAXLOC;$/;"	f	class:MPI
MINLOC	mpi/Op.java	/^  private final static int MINLOC=11;$/;"	f	class:Op	file:
MODE_BUFFERED	mpi/Prequest.java	/^  protected final static int MODE_BUFFERED    = 1 ;$/;"	f	class:Prequest
MODE_READY	mpi/Prequest.java	/^  protected final static int MODE_READY       = 3 ;$/;"	f	class:Prequest
MODE_STANDARD	mpi/Prequest.java	/^  protected final static int MODE_STANDARD    = 0 ;$/;"	f	class:Prequest
MODE_SYNCHRONOUS	mpi/Prequest.java	/^  protected final static int MODE_SYNCHRONOUS = 2 ;$/;"	f	class:Prequest
MPI	mpi/MPI.java	/^public class MPI {$/;"	c
MPIException	mpi/MPIException.java	/^  public MPIException() {super() ;}$/;"	m	class:MPIException
MPIException	mpi/MPIException.java	/^  public MPIException(String message) {super(message) ;}$/;"	m	class:MPIException
MPIException	mpi/MPIException.java	/^public class MPIException extends Exception {$/;"	c
MPI_INC	mpi/Makefile	/^MPI_INC = -I\/usr\/pkg\/mpich2-1.0.7-x86_64\/include$/;"	m
MPI_LIB	mpi/Makefile	/^MPI_LIB = -L\/usr\/pkg\/mpich2-1.0.7-x86_64\/lib$/;"	m
MPItoThread	kstar/MPItoThread.java	/^	public MPItoThread(boolean mpiRun, int numThreads) {$/;"	m	class:MPItoThread
MPItoThread	kstar/MPItoThread.java	/^public class MPItoThread {$/;"	c
MSAStar	kstar/MSAStar.java	/^	MSAStar (int treeLevels, int numRotForRes[], ReducedEnergyMatrix arpMatrixRed, StericCheck stF, boolean[][] spFlags,$/;"	m	class:MSAStar
MSAStar	kstar/MSAStar.java	/^public class MSAStar {$/;"	c
MSMinBounds	kstar/MSMinBounds.java	/^	MSMinBounds(PairwiseEnergyMatrix arpMatrix, int numResMutable,$/;"	m	class:MSMinBounds
MSMinBounds	kstar/MSMinBounds.java	/^public class MSMinBounds extends DEE {$/;"	c
MSRotBounds	kstar/MSMinBounds.java	/^	private class MSRotBounds implements Comparable,RyanComparable {$/;"	c	class:MSMinBounds
MSet	BDAStar/BWMStarNode.java	/^    private Set<? extends Position> MSet;$/;"	f	class:BWMStarNode	file:
MSetFromArray	BDAStar/BWMSolutionSpace.java	/^    public Set<? extends Position> MSetFromArray (LinkedHashSet<Integer> m) {$/;"	m	class:BWMSolutionSpace
MSetFromArray	BDAStar/SolutionSpace.java	/^	public Set<? extends Position> MSetFromArray(LinkedHashSet<Integer> MSet);$/;"	m	interface:SolutionSpace
MSetFromArray	BDAStarTest/TestSolutionSpace.java	/^    public Set<? extends Position> MSetFromArray (LinkedHashSet<Integer> m) {$/;"	m	class:TestSolutionSpace
MV	mpi/Makefile	/^MV = mv$/;"	m
Map	mpi/Cartcomm.java	/^  public native int Map(int [] dims, boolean [] periods) throws MPIException ;$/;"	m	class:Cartcomm
Map	mpi/Graphcomm.java	/^  public native int Map(int [] index, int [] edges) throws MPIException ;$/;"	m	class:Graphcomm
MaxIndInt	kstar/BoundFlags.java	/^	private void MaxIndInt (int atPos){$/;"	m	class:BoundFlags	file:
MaxIndInt	kstar/DEEGoldsteinPairs.java	/^	private double MaxIndInt (int atPos){$/;"	m	class:DEEGoldsteinPairs	file:
MaxIndInt	kstar/MSMinBounds.java	/^	private void MaxIndInt (int atPos){$/;"	m	class:MSMinBounds	file:
MaxIndInt	kstar/MinDEEIntervals.java	/^	private double MaxIndInt (int atPos){$/;"	m	class:MinDEEIntervals	file:
MaxPairInt	kstar/BoundFlags.java	/^	private void MaxPairInt (int atPos1, int atPos2){$/;"	m	class:BoundFlags	file:
MaxPairInt	kstar/DEEGoldsteinPairs.java	/^	private double MaxPairInt (int atPos1, int atPos2){$/;"	m	class:DEEGoldsteinPairs	file:
MaxPairInt	kstar/MSMinBounds.java	/^	private void MaxPairInt (int atPos1, int atPos2){$/;"	m	class:MSMinBounds	file:
MaxPairInt	kstar/MinDEEIntervals.java	/^	private double MaxPairInt (int atPos1, int atPos2){$/;"	m	class:MinDEEIntervals	file:
MaxTrans	kstar/SimpleMinimizer.java	/^	double MaxTrans = 1.2;$/;"	f	class:SimpleMinimizer
Maxloc	mpi/MPI.java	/^class Maxloc extends User_function{$/;"	c
Merge	mpi/Intercomm.java	/^  public Intracomm Merge(boolean high) throws MPIException {$/;"	m	class:Intercomm
MinDEEIntervals	kstar/MinDEEIntervals.java	/^	MinDEEIntervals(PairwiseEnergyMatrix arpMatrix, PairwiseEnergyMatrix arpMatrixMax, int numResMutable,$/;"	m	class:MinDEEIntervals
MinDEEIntervals	kstar/MinDEEIntervals.java	/^public class MinDEEIntervals extends DEE {$/;"	c
MinVertexCut	BranchDecomposition/MinVertexCut.java	/^	MinVertexCut(){$/;"	m	class:MinVertexCut
MinVertexCut	BranchDecomposition/MinVertexCut.java	/^public class MinVertexCut {$/;"	c
Minloc	mpi/MPI.java	/^class Minloc extends User_function{$/;"	c
Miscellany	Miscellany/ComputeKStarScore.java	/^package Miscellany;$/;"	p
MolParameters	kstar/KSParser.java	/^	private class MolParameters{$/;"	c	class:KSParser
Molecule	kstar/Molecule.java	/^	Molecule(){$/;"	m	class:Molecule
Molecule	kstar/Molecule.java	/^public class Molecule implements Serializable{$/;"	c
MutationManager	kstar/MutationManager.java	/^	MutationManager(String logName, OneMutation mArray[], boolean PEMcomputation) {$/;"	m	class:MutationManager
MutationManager	kstar/MutationManager.java	/^public class MutationManager$/;"	c
NB_INCREMENT_SIZE	kstar/Molecule.java	/^	public static final int NB_INCREMENT_SIZE = 82000;$/;"	f	class:Molecule
NBeval	kstar/Amber96ext.java	/^	int halfNBeval[], NBeval[];$/;"	f	class:Amber96ext
NULL	kstar/ThreadMessage.java	/^	  final static int NULL      =  0 ;$/;"	f	class:ThreadMessage
NULL	mpi/Datatype.java	/^  private final static int NULL      =  0 ;$/;"	f	class:Datatype	file:
NULL	mpi/Op.java	/^  private final static int NULL  = 0;$/;"	f	class:Op	file:
NULL	mpi/Request.java	/^  protected final static int NULL = 0;$/;"	f	class:Request
NULL_POSITION	BDAStar/Position.java	/^    public static final Position NULL_POSITION = new Position(-1);$/;"	f	class:Position
Neighbours	mpi/Graphcomm.java	/^  public native int [] Neighbours(int rank) throws MPIException ;$/;"	m	class:Graphcomm
OBJECT	kstar/ThreadMessage.java	/^	  final static int OBJECT    = 12 ;$/;"	f	class:ThreadMessage
OBJECT	mpi/Datatype.java	/^  private final static int OBJECT    = 12 ;$/;"	f	class:Datatype	file:
OBJECT	mpi/MPI.java	/^    INT, LONG, FLOAT, DOUBLE, PACKED, LB, UB, OBJECT;$/;"	f	class:MPI
OP_RECV	mpi/Request.java	/^  protected final static int OP_RECV     = 1;$/;"	f	class:Request
OP_SEND	mpi/Request.java	/^  protected final static int OP_SEND     = 0;$/;"	f	class:Request
Object_Deserialize	mpi/Comm.java	/^  public void Object_Deserialize(Object   buf,$/;"	m	class:Comm
Object_Serialize	mpi/Comm.java	/^  public byte[] Object_Serialize(Object   buf,$/;"	m	class:Comm
OneMutation	kstar/OneMutation.java	/^	OneMutation() {$/;"	m	class:OneMutation
OneMutation	kstar/OneMutation.java	/^public class OneMutation implements RyanComparable, Comparable$/;"	c
Op	mpi/Op.java	/^  protected Op(int Type) { GetOp(Type);}$/;"	m	class:Op
Op	mpi/Op.java	/^  public Op(User_function function, boolean commute) throws MPIException {$/;"	m	class:Op
Op	mpi/Op.java	/^public class Op extends Freeable {$/;"	c
PACKED	kstar/ThreadMessage.java	/^	  final static int PACKED    =  9 ;$/;"	f	class:ThreadMessage
PACKED	mpi/Datatype.java	/^  private final static int PACKED    =  9 ;$/;"	f	class:Datatype	file:
PACKED	mpi/MPI.java	/^    INT, LONG, FLOAT, DOUBLE, PACKED, LB, UB, OBJECT;$/;"	f	class:MPI
PDBChemModel	kstar/PDBChemModel.java	/^	PDBChemModel (Molecule m, InputStream is) throws Exception {$/;"	m	class:PDBChemModel
PDBChemModel	kstar/PDBChemModel.java	/^class PDBChemModel {$/;"	c
PDBList	kstar/FullStructureSwitch.java	/^    String PDBList;\/\/List of alternate structures$/;"	f	class:FullStructureSwitch
PDBList	kstar/PartialStructureSwitch.java	/^    String PDBList[];$/;"	f	class:PartialStructureSwitch
PEMcomp	kstar/CommucObj.java	/^	boolean PEMcomp = false;$/;"	f	class:CommucObj
PEMcomp	kstar/MutationManager.java	/^	boolean PEMcomp = false; \/\/true if PEM computation is performed; false if mut search is performed$/;"	f	class:MutationManager
PFX	mpi/Makefile	/^PFX = $(TITLE)_$/;"	m
PKG	mpi/Makefile	/^PKG = $(TITLE).$/;"	m
PMinimizer	kstar/PMinimizer.java	/^	PMinimizer(boolean minPerts){$/;"	m	class:PMinimizer
PMinimizer	kstar/PMinimizer.java	/^public class PMinimizer extends SimpleMinimizer {$/;"	c
PRINT_LEVEL	kstar/SturmSolver.java	/^    final int PRINT_LEVEL=0;$/;"	f	class:SturmSolver
PROC_NULL	mpi/MPI.java	/^  static public int PROC_NULL;$/;"	f	class:MPI
PROD	mpi/MPI.java	/^  static public Op MAX, MIN, SUM, PROD, LAND, BAND,$/;"	f	class:MPI
PROD	mpi/Op.java	/^  private final static int PROD  = 4;$/;"	f	class:Op	file:
Pack	mpi/Comm.java	/^  public int Pack(Object   inbuf, $/;"	m	class:Comm
Pack_size	mpi/Comm.java	/^  public native int Pack_size(int incount, Datatype datatype)$/;"	m	class:Comm
PairInt	kstar/BoundFlags.java	/^	private void PairInt (int atPos1, int atAA1, int atRot1, int atPos2, int atAA2, int atRot2){$/;"	m	class:BoundFlags	file:
PairInt	kstar/DEEGoldsteinPairs.java	/^	private double PairInt (int atPos1, int atAA1, int atRot1, int atPos2, int atAA2, int atRot2){$/;"	m	class:DEEGoldsteinPairs	file:
PairInt	kstar/MSMinBounds.java	/^	private void PairInt (int atPos1, int atAA1, int atRot1, int atPos2, int atAA2, int atRot2){$/;"	m	class:MSMinBounds	file:
PairInt	kstar/MinDEEIntervals.java	/^	private double PairInt (int atPos1, int atAA1, int atRot1, int atPos2, int atAA2, int atRot2){$/;"	m	class:MinDEEIntervals	file:
PairwiseEnergyMatrix	kstar/PairwiseEnergyMatrix.java	/^	public PairwiseEnergyMatrix(int numMutable, int resMut[], int[][] strandMut,$/;"	m	class:PairwiseEnergyMatrix
PairwiseEnergyMatrix	kstar/PairwiseEnergyMatrix.java	/^        public PairwiseEnergyMatrix(){$/;"	m	class:PairwiseEnergyMatrix
PairwiseEnergyMatrix	kstar/PairwiseEnergyMatrix.java	/^public class PairwiseEnergyMatrix {$/;"	c
ParamSet	kstar/ParamSet.java	/^	ParamSet(){$/;"	m	class:ParamSet
ParamSet	kstar/ParamSet.java	/^public class ParamSet implements Serializable {$/;"	c
PartialStructureSwitch	kstar/PartialStructureSwitch.java	/^    PartialStructureSwitch(Molecule m, int resList[], BufferedReader br){$/;"	m	class:PartialStructureSwitch
PartialStructureSwitch	kstar/PartialStructureSwitch.java	/^public class PartialStructureSwitch extends Perturbation {$/;"	c
PertFileHandler	kstar/PertFileHandler.java	/^public class PertFileHandler {$/;"	c
Perturbation	kstar/Perturbation.java	/^public abstract class Perturbation {$/;"	c
PerturbationSelector	kstar/PerturbationSelector.java	/^    public PerturbationSelector(int numMut, int mutRes2Strand[], int mutRes2StrandMutIndex[], $/;"	m	class:PerturbationSelector
PerturbationSelector	kstar/PerturbationSelector.java	/^public class PerturbationSelector {$/;"	c
Playground	BDAStarTest/Playground.java	/^public class Playground {$/;"	c
Position	BDAStar/Position.java	/^    public Position(int i)$/;"	m	class:Position
Position	BDAStar/Position.java	/^public class Position implements Comparable<Position>{$/;"	c
Prequest	mpi/Prequest.java	/^  protected Prequest(Object buf, int offset, int count, Datatype type,$/;"	m	class:Prequest
Prequest	mpi/Prequest.java	/^  protected Prequest(int mode, $/;"	m	class:Prequest
Prequest	mpi/Prequest.java	/^public class Prequest extends Request {$/;"	c
Probe	kstar/MPItoThread.java	/^	public static Object Probe(int source, int tag) throws MPIException, InterruptedException{$/;"	m	class:MPItoThread
Probe	kstar/ThreadElement.java	/^	public ThreadStatus Probe(int source, int tag) throws InterruptedException{$/;"	m	class:ThreadElement
Probe	mpi/Comm.java	/^  private native Status Probe(int source, int tag,Status stat)$/;"	m	class:Comm	file:
Probe	mpi/Comm.java	/^  public Status Probe(int source, int tag) throws MPIException {$/;"	m	class:Comm
ProbeStericCheck	kstar/ProbeStericCheck.java	/^	ProbeStericCheck (){		$/;"	m	class:ProbeStericCheck
ProbeStericCheck	kstar/ProbeStericCheck.java	/^public class ProbeStericCheck {$/;"	c
ProlineFlip	kstar/ProlineFlip.java	/^    public ProlineFlip(Molecule molec,int resList[]){$/;"	m	class:ProlineFlip
ProlineFlip	kstar/ProlineFlip.java	/^public class ProlineFlip extends Perturbation {$/;"	c
ProteinChoice	BDAStar/ProteinChoice.java	/^    public ProteinChoice (int AA, int r) {$/;"	m	class:ProteinChoice
ProteinChoice	BDAStar/ProteinChoice.java	/^public class ProteinChoice extends Choice {$/;"	c
ProteinConformation	BDAStar/ProteinConformation.java	/^    public ProteinConformation(Conformation t, EnergyFunction e)$/;"	m	class:ProteinConformation
ProteinConformation	BDAStar/ProteinConformation.java	/^    public ProteinConformation(Conformation testConformation,$/;"	m	class:ProteinConformation
ProteinConformation	BDAStar/ProteinConformation.java	/^    public ProteinConformation(EnergyFunction e)$/;"	m	class:ProteinConformation
ProteinConformation	BDAStar/ProteinConformation.java	/^public class ProteinConformation extends AbstractConformation {$/;"	c
ProteinConformationMap	BDAStar/ProteinConformationMap.java	/^	public ProteinConformationMap(BWMSolutionSpace space, Position p)$/;"	m	class:ProteinConformationMap
ProteinConformationMap	BDAStar/ProteinConformationMap.java	/^public class ProteinConformationMap extends ConformationMap {$/;"	c
ProteinConformationTrie	BDAStar/ProteinConformationTrie.java	/^    public ProteinConformationTrie(SolutionSpace newSpace, ConformationMap map, Position p)$/;"	m	class:ProteinConformationTrie
ProteinConformationTrie	BDAStar/ProteinConformationTrie.java	/^public class ProteinConformationTrie {$/;"	c
ProteinConformationTrieTest	BDAStarTest/ProteinConformationTrieTest.java	/^public class ProteinConformationTrieTest {$/;"	c
ProteinPosition	BDAStar/ProteinPosition.java	/^    public ProteinPosition (int designInd, int strandNumber, int position) {$/;"	m	class:ProteinPosition
ProteinPosition	BDAStar/ProteinPosition.java	/^public class ProteinPosition extends Position {$/;"	c
PrunedRotIterator	kstar/PrunedRotamers.java	/^	  public PrunedRotIterator(T[][][] pr) {$/;"	m	class:PrunedRotIterator
PrunedRotIterator	kstar/PrunedRotamers.java	/^	  public PrunedRotIterator(T[][][] pr, int startPos) {$/;"	m	class:PrunedRotIterator
PrunedRotIterator	kstar/PrunedRotamers.java	/^class PrunedRotIterator<T> implements Iterator<RotInfo<T>> {$/;"	c
PrunedRotamers	kstar/PrunedRotamers.java	/^	private PrunedRotamers(T[][][] prunedRotMatrix, int[] strandOffsetIndexArray)$/;"	m	class:PrunedRotamers	file:
PrunedRotamers	kstar/PrunedRotamers.java	/^	public PrunedRotamers(PrunedRotamers<?> pr, Object initVal){$/;"	m	class:PrunedRotamers
PrunedRotamers	kstar/PrunedRotamers.java	/^	public PrunedRotamers(int numMutable, int[][] strandMut, RotamerSearch rs, T initVal){$/;"	m	class:PrunedRotamers
PrunedRotamers	kstar/PrunedRotamers.java	/^public class PrunedRotamers<T> implements Iterable<RotInfo<T>>, Serializable {$/;"	c
Q	kstar/TripeptideClosure.java	/^  double[][] Q = new double[5][17], R = new double[3][17];$/;"	f	class:TripeptideClosure
QueueNode	kstar/QueueNode.java	/^	QueueNode (int curNode, int curLevel, int curConf[], double fn) {$/;"	m	class:QueueNode
QueueNode	kstar/QueueNode.java	/^public class QueueNode implements Comparable {$/;"	c
R	kstar/TripeptideClosure.java	/^  double[][] Q = new double[5][17], R = new double[3][17];$/;"	f	class:TripeptideClosure
R2D	kstar/Amber96ext.java	/^	double R2D = 57.29577951308232090712;$/;"	f	class:Amber96ext
RCOffsets	kstar/StrandRCs.java	/^       private int RCOffsets[][];\/\/Cumulative sum of numRCs, first over the residue number and then the AA type dimension,$/;"	f	class:StrandRCs	file:
RCPertStates	kstar/StrandRCs.java	/^       int RCPertStates[][][];\/\/Perturbation state for each RC$/;"	f	class:StrandRCs
RCRots	kstar/StrandRCs.java	/^       int RCRots[][][];\/\/Rotameric state for each RC.  -2 denotes the wild-type rotamer (only allowed for the WT residue type)$/;"	f	class:StrandRCs
RELERROR	kstar/SturmSolver.java	/^    double RELERROR;$/;"	f	class:SturmSolver
REQUEST_NULL	mpi/MPI.java	/^  static public Request REQUEST_NULL;$/;"	f	class:MPI
RETURN	mpi/Errhandler.java	/^  public final static int RETURN = 0;$/;"	f	class:Errhandler
RM	mpi/Makefile	/^RM = rm$/;"	m
RS_CheckAllSterics	kstar/RotamerSearch.java	/^		private boolean RS_CheckAllSterics(int strandNum, int resNum, int excludeList[][]) {$/;"	m	class:RotamerSearch	file:
RS_CheckAllSterics	kstar/StericCheck.java	/^	private boolean RS_CheckAllSterics(int strandNum, int resNum) {$/;"	m	class:StericCheck	file:
RTMToPrefix	kstar/TreeEdge.java	/^    private String RTMToPrefix (RotTypeMap[] bestPosAARot) {$/;"	m	class:TreeEdge	file:
RTMToPrefixLambda	kstar/TreeEdge.java	/^    private String RTMToPrefixLambda (RotTypeMap[] bestPosAARot) {$/;"	m	class:TreeEdge	file:
RTMToString	kstar/TreeEdge.java	/^    private static String RTMToString(RotTypeMap[] rtm)$/;"	m	class:TreeEdge	file:
RamachandranChecker	kstar/RamachandranChecker.java	/^    private RamachandranChecker() {$/;"	m	class:RamachandranChecker	file:
RamachandranChecker	kstar/RamachandranChecker.java	/^public class RamachandranChecker {$/;"	c
RamachandranCheckerHolder	kstar/RamachandranChecker.java	/^    private static class RamachandranCheckerHolder {$/;"	c	class:RamachandranChecker
Range_excl	mpi/Group.java	/^  public Group Range_excl(int [][] ranges) throws MPIException {$/;"	m	class:Group
Range_incl	mpi/Group.java	/^  public Group Range_incl(int [][] ranges) throws MPIException {$/;"	m	class:Group
Rank	kstar/MPItoThread.java	/^	public static int Rank() throws MPIException{$/;"	m	class:MPItoThread
Rank	mpi/Cartcomm.java	/^  public native int Rank(int[] coords) throws MPIException ;$/;"	m	class:Cartcomm
Rank	mpi/Comm.java	/^  public native int Rank() throws MPIException ;$/;"	m	class:Comm
Rank	mpi/Group.java	/^  public native int Rank() throws MPIException ;$/;"	m	class:Group
Recv	kstar/MPItoThread.java	/^	public static Object Recv(Object buf, int offset, int count, int type,$/;"	m	class:MPItoThread
Recv	kstar/ThreadElement.java	/^	public ThreadStatus Recv(Object buf, int offset, int count, int type,$/;"	m	class:ThreadElement
Recv	mpi/Comm.java	/^  private native Status Recv(Object   buf, $/;"	m	class:Comm	file:
Recv	mpi/Comm.java	/^  public Status Recv(Object   buf, $/;"	m	class:Comm
Recv_init	mpi/Comm.java	/^  public Prequest Recv_init(Object   buf, $/;"	m	class:Comm
RedEmat	kstar/ReducedEnergyMatrix.java	/^    private float RedEmat[][];$/;"	f	class:ReducedEnergyMatrix	file:
Reduce	mpi/Intracomm.java	/^  public void Reduce(Object sendbuf, int sendoffset,$/;"	m	class:Intracomm
Reduce_scatter	mpi/Intracomm.java	/^  public void Reduce_scatter(Object sendbuf, int sendoffset,$/;"	m	class:Intracomm
ReducedEnergyMatrix	kstar/ReducedEnergyMatrix.java	/^    public ReducedEnergyMatrix(float[][] a){$/;"	m	class:ReducedEnergyMatrix
ReducedEnergyMatrix	kstar/ReducedEnergyMatrix.java	/^    public ReducedEnergyMatrix(float[][] a, boolean sparse, InteractionGraph g, int[] rotindex){$/;"	m	class:ReducedEnergyMatrix
ReducedEnergyMatrix	kstar/ReducedEnergyMatrix.java	/^public class ReducedEnergyMatrix {$/;"	c
Remote_group	mpi/Intercomm.java	/^  public Group Remote_group() throws MPIException {$/;"	m	class:Intercomm
Remote_size	mpi/Intercomm.java	/^  public native int Remote_size() throws MPIException ;$/;"	m	class:Intercomm
Request	mpi/Request.java	/^  protected Request() {}$/;"	m	class:Request
Request	mpi/Request.java	/^  protected Request(Object buf, int offset, int count, Datatype type,$/;"	m	class:Request
Request	mpi/Request.java	/^  protected Request(Request hdrReq) {$/;"	m	class:Request
Request	mpi/Request.java	/^  protected Request(int Type) { GetReq(Type); }$/;"	m	class:Request
Request	mpi/Request.java	/^public class Request {$/;"	c
ResSymmetry	kstar/ResSymmetry.java	/^public class ResSymmetry {$/;"	c
Residue	kstar/Residue.java	/^	Residue(){$/;"	m	class:Residue
Residue	kstar/Residue.java	/^	Residue(String resname){$/;"	m	class:Residue
Residue	kstar/Residue.java	/^public class Residue implements Serializable {$/;"	c
RightConf	kstar/TreeEdge.java	/^        public RightConf(RotTypeMap[] fullRightConf, double e)$/;"	m	class:TreeEdge.RightConf
RightConf	kstar/TreeEdge.java	/^    private class RightConf$/;"	c	class:TreeEdge
RotInfo	kstar/RotInfo.java	/^	public RotInfo(int curPos, int curAA, int curRot, T s) {$/;"	m	class:RotInfo
RotInfo	kstar/RotInfo.java	/^public class RotInfo<T>{$/;"	c
RotMatrix	kstar/RotMatrix.java	/^	RotMatrix()$/;"	m	class:RotMatrix
RotMatrix	kstar/RotMatrix.java	/^public class RotMatrix$/;"	c
RotPosIndex	kstar/ReducedEnergyMatrix.java	/^      private int RotPosIndex[] = null; \/\/ corresponds to the residue position of the particular rotamer$/;"	f	class:ReducedEnergyMatrix	file:
RotStep	kstar/SimpleMinimizer.java	/^	float RotStep = 0.25f;$/;"	f	class:SimpleMinimizer
RotTypeMap	kstar/RotTypeMap.java	/^	public RotTypeMap(int p, int a, int r){$/;"	m	class:RotTypeMap
RotTypeMap	kstar/RotTypeMap.java	/^public class RotTypeMap {$/;"	c
RotamerLibrary	kstar/RotamerLibrary.java	/^	RotamerLibrary(String rotFilename, boolean isProtein) {		$/;"	m	class:RotamerLibrary
RotamerLibrary	kstar/RotamerLibrary.java	/^public class RotamerLibrary implements Serializable {$/;"	c
RotamerSearch	kstar/RotamerSearch.java	/^	RotamerSearch(Molecule theMolec, int numMut,int strandsPresent, boolean hE, $/;"	m	class:RotamerSearch
RotamerSearch	kstar/RotamerSearch.java	/^public class RotamerSearch implements Serializable$/;"	c
Rsend	mpi/Comm.java	/^  public void Rsend(Object   buf, $/;"	m	class:Comm
Rsend_init	mpi/Comm.java	/^  public Prequest Rsend_init(Object   buf, $/;"	m	class:Comm
Rset	BranchDecomposition/MinVertexCut.java	/^	private LinkedHashSet<String> Rset = null;$/;"	f	class:MinVertexCut	file:
RyanComparable	kstar/RyanComparable.java	/^public interface RyanComparable$/;"	i
RyanQuickSort	kstar/RyanQuickSort.java	/^	RyanQuickSort() {}$/;"	m	class:RyanQuickSort
RyanQuickSort	kstar/RyanQuickSort.java	/^public class RyanQuickSort$/;"	c
SELF	mpi/Comm.java	/^  protected final static int SELF  = 1;$/;"	f	class:Comm
SHEET	kstar/Residue.java	/^        final static int SHEET = 1;$/;"	f	class:Residue
SHELL	mpi/Makefile	/^SHELL       = \/bin\/sh$/;"	m
SHORT	kstar/ThreadMessage.java	/^	  final static int SHORT     =  3 ;$/;"	f	class:ThreadMessage
SHORT	mpi/Datatype.java	/^  private final static int SHORT     =  3 ;$/;"	f	class:Datatype	file:
SHORT	mpi/MPI.java	/^  static public Datatype BYTE, CHAR, SHORT, BOOLEAN, $/;"	f	class:MPI
SHORT2	mpi/MPI.java	/^  static public Datatype SHORT2, INT2, LONG2, FLOAT2, DOUBLE2;$/;"	f	class:MPI
SIMILAR	mpi/MPI.java	/^  static public int IDENT, CONGRUENT, SIMILAR, UNEQUAL;$/;"	f	class:MPI
SMALL_ENOUGH	kstar/SturmSolver.java	/^    final double SMALL_ENOUGH=1.0e-18;$/;"	f	class:SturmSolver
SUM	mpi/MPI.java	/^  static public Op MAX, MIN, SUM, PROD, LAND, BAND,$/;"	f	class:MPI
SUM	mpi/Op.java	/^  private final static int SUM   = 3;$/;"	f	class:Op	file:
SamplingEEntries	kstar/SamplingEEntries.java	/^	SamplingEEntries(){};$/;"	m	class:SamplingEEntries
SamplingEEntries	kstar/SamplingEEntries.java	/^public class SamplingEEntries implements Serializable {$/;"	c
SaveMolecule	kstar/SaveMolecule.java	/^	SaveMolecule (Molecule inM, PrintStream pw, Hashtable params) throws Exception {$/;"	m	class:SaveMolecule
SaveMolecule	kstar/SaveMolecule.java	/^class SaveMolecule {$/;"	c
Scan	mpi/Intracomm.java	/^  public void Scan(Object sendbuf, int sendoffset,$/;"	m	class:Intracomm
Scatter	mpi/Intracomm.java	/^  public void Scatter(Object   sendbuf, $/;"	m	class:Intracomm
Scatterv	mpi/Intracomm.java	/^  public void Scatterv(Object   sendbuf, $/;"	m	class:Intracomm
Send	kstar/MPItoThread.java	/^	public static void Send(Object buf, int offset, int count, int type,$/;"	m	class:MPItoThread
Send	kstar/ThreadElement.java	/^	public void Send(Object buf, int offset, int count, int type,$/;"	m	class:ThreadElement
Send	mpi/Comm.java	/^  public void Send(Object   buf,$/;"	m	class:Comm
Send_init	mpi/Comm.java	/^  public Prequest Send_init(Object   buf, $/;"	m	class:Comm
Sendrecv	mpi/Comm.java	/^  private native Status Sendrecv(Object   sbuf, $/;"	m	class:Comm	file:
Sendrecv	mpi/Comm.java	/^  public Status Sendrecv(Object   sendbuf, $/;"	m	class:Comm
Sendrecv_replace	mpi/Comm.java	/^  private native Status Sendrecv_replace(Object   buf, $/;"	m	class:Comm	file:
Sendrecv_replace	mpi/Comm.java	/^  public Status Sendrecv_replace(Object   buf, $/;"	m	class:Comm
SetConstant	mpi/MPI.java	/^  static private native void SetConstant();$/;"	m	class:MPI	file:
Shear	kstar/Shear.java	/^    public Shear(Molecule molec,int resList[]){$/;"	m	class:Shear
Shear	kstar/Shear.java	/^public class Shear extends Perturbation {$/;"	c
Shift	mpi/Cartcomm.java	/^  public native ShiftParms Shift(int direction, int disp) throws MPIException ;$/;"	m	class:Cartcomm
ShiftParms	mpi/ShiftParms.java	/^public class ShiftParms {$/;"	c
SimpleMinimizer	kstar/SimpleMinimizer.java	/^	SimpleMinimizer(){$/;"	m	class:SimpleMinimizer
SimpleMinimizer	kstar/SimpleMinimizer.java	/^public class SimpleMinimizer implements Serializable {$/;"	c
Size	kstar/MPItoThread.java	/^	public static int Size() throws MPIException{$/;"	m	class:MPItoThread
Size	mpi/Comm.java	/^  public native int Size() throws MPIException ;$/;"	m	class:Comm
Size	mpi/Datatype.java	/^  public int Size() throws MPIException {$/;"	m	class:Datatype
Size	mpi/Group.java	/^  public native int Size() throws MPIException ;$/;"	m	class:Group
SolutionSpace	BDAStar/SolutionSpace.java	/^public interface SolutionSpace {$/;"	i
Sort	kstar/RyanQuickSort.java	/^	public void Sort(Object[] a) {$/;"	m	class:RyanQuickSort
Split	mpi/Intracomm.java	/^  public Intracomm Split(int colour, int key) throws MPIException {$/;"	m	class:Intracomm
Ssend	mpi/Comm.java	/^  public void Ssend(Object   buf, $/;"	m	class:Comm
Ssend_init	mpi/Comm.java	/^  public Prequest Ssend_init(Object   buf, $/;"	m	class:Comm
Start	mpi/Prequest.java	/^  public void Start() throws MPIException {$/;"	m	class:Prequest
Startall	mpi/Prequest.java	/^  public static void Startall(Prequest [] array_of_request)$/;"	m	class:Prequest
Status	mpi/Status.java	/^  public Status() {alloc() ;}$/;"	m	class:Status
Status	mpi/Status.java	/^public class Status extends Freeable {$/;"	c
StericCheck	kstar/StericCheck.java	/^	StericCheck (int curAANumP[],\/*int curResToASMapP[],*\/int strandMutP[][],boolean eliminatedRotAtPosRedP[],$/;"	m	class:StericCheck
StericCheck	kstar/StericCheck.java	/^public class StericCheck {	$/;"	c
Strand	kstar/Strand.java	/^	Strand(){$/;"	m	class:Strand
Strand	kstar/Strand.java	/^	Strand(Residue firstResidue){$/;"	m	class:Strand
Strand	kstar/Strand.java	/^	Strand(String strandName){$/;"	m	class:Strand
Strand	kstar/Strand.java	/^public class Strand implements Serializable{$/;"	c
StrandRCs	kstar/StrandRCs.java	/^	StrandRCs(RotamerLibrary rlP, Strand s) {$/;"	m	class:StrandRCs
StrandRCs	kstar/StrandRCs.java	/^public class StrandRCs extends StrandRotamers {$/;"	c
StrandRotamers	kstar/StrandRotamers.java	/^	StrandRotamers(RotamerLibrary rotLib, Strand s) {$/;"	m	class:StrandRotamers
StrandRotamers	kstar/StrandRotamers.java	/^	StrandRotamers(String rotFilename, Strand s) {$/;"	m	class:StrandRotamers
StrandRotamers	kstar/StrandRotamers.java	/^public class StrandRotamers implements Serializable {$/;"	c
Struct	mpi/Datatype.java	/^  public static Datatype Struct(int[] array_of_blocklengths,   $/;"	m	class:Datatype
SturmSolver	kstar/SturmSolver.java	/^    SturmSolver(double tol_secant, int max_iter_sturm, int max_iter_secant)$/;"	m	class:SturmSolver
SturmSolver	kstar/SturmSolver.java	/^public class SturmSolver {$/;"	c
Sub	mpi/Cartcomm.java	/^  public Cartcomm Sub(boolean [] remain_dims) throws MPIException {$/;"	m	class:Cartcomm
SumMaxIndInt	kstar/BoundFlags.java	/^	private void SumMaxIndInt (int withoutPos1, int withoutPos2){$/;"	m	class:BoundFlags	file:
SumMaxIndInt	kstar/DEEGoldsteinPairs.java	/^	private double SumMaxIndInt (int withoutPos1, int withoutPos2){$/;"	m	class:DEEGoldsteinPairs	file:
SumMaxIndInt	kstar/MSMinBounds.java	/^	private void SumMaxIndInt (int withoutPos){$/;"	m	class:MSMinBounds	file:
SumMaxIndInt	kstar/MinDEEIntervals.java	/^	private double SumMaxIndInt (int withoutPos){$/;"	m	class:MinDEEIntervals	file:
SumMinDiffPVE	kstar/BoundFlags.java	/^	private void SumMinDiffPVE (int atPos1, int withAA1, int withRot1, int atPos2, int withAA2, int withRot2){		$/;"	m	class:BoundFlags	file:
SumMinDiffPVE	kstar/DEEGoldstein.java	/^	private double SumMinDiffPVE (int atPos, int withAA1, int withRot1, int withAA2, int withRot2){$/;"	m	class:DEEGoldstein	file:
SumMinDiffPVE	kstar/DEEGoldsteinPairs.java	/^	private double SumMinDiffPVE (int atPos1, int withAA1, int withRot1, int altAA1, int altRot1,$/;"	m	class:DEEGoldsteinPairs	file:
SumMinDiffPVE	kstar/DEESplit1f.java	/^	private double SumMinDiffPVE (int atPos, int withAA1, int withRot1, int withAA2, int withRot2, int splitPos){$/;"	m	class:DEESplit1f	file:
SumMinDiffPVE	kstar/DEESplit2f.java	/^	private double SumMinDiffPVE (int atPos, int withAA1, int withRot1, int withAA2, int withRot2, int splitPos1, int splitPos2){$/;"	m	class:DEESplit2f	file:
SumMinDiffPVE	kstar/MSMinBounds.java	/^	private void SumMinDiffPVE (int atPos, int withAA, int withRot1){		$/;"	m	class:MSMinBounds	file:
SumSumMaxPairInt	kstar/BoundFlags.java	/^	private void SumSumMaxPairInt(int withoutPos1, int withoutPos2){$/;"	m	class:BoundFlags	file:
SumSumMaxPairInt	kstar/DEEGoldsteinPairs.java	/^	private double SumSumMaxPairInt(int withoutPos1, int withoutPos2){$/;"	m	class:DEEGoldsteinPairs	file:
SumSumMaxPairInt	kstar/MSMinBounds.java	/^	private void SumSumMaxPairInt(int withoutPos){$/;"	m	class:MSMinBounds	file:
SumSumMaxPairInt	kstar/MinDEEIntervals.java	/^	private double SumSumMaxPairInt(int withoutPos){$/;"	m	class:MinDEEIntervals	file:
SystemTime	BranchDecomposition/BranchDecompositionH.java	/^	public long SystemTime(){$/;"	m	class:BranchDecompositionH
TAG_UB	mpi/MPI.java	/^  static public int TAG_UB, HOST, IO;$/;"	f	class:MPI
TITLE	mpi/Makefile	/^TITLE = mpi$/;"	m
TYPE_NORMAL	mpi/Request.java	/^  protected final static int TYPE_NORMAL = 0;$/;"	f	class:Request
TYPE_OBJECT	mpi/Request.java	/^  protected final static int TYPE_OBJECT = 1;$/;"	f	class:Request
Test	mpi/Request.java	/^  private native Status Test(Status stat);$/;"	m	class:Request	file:
Test	mpi/Request.java	/^  public Status Test() throws MPIException {$/;"	m	class:Request
TestConformation	BDAStarTest/TestConformation.java	/^    public TestConformation()$/;"	m	class:TestConformation
TestConformation	BDAStarTest/TestConformation.java	/^    public TestConformation(Conformation t)$/;"	m	class:TestConformation
TestConformation	BDAStarTest/TestConformation.java	/^    public TestConformation(Conformation testConformation,$/;"	m	class:TestConformation
TestConformation	BDAStarTest/TestConformation.java	/^public class TestConformation extends AbstractConformation {$/;"	c
TestConformationMap	BDAStarTest/TestConformationMap.java	/^	public TestConformationMap(int numChoices)$/;"	m	class:TestConformationMap
TestConformationMap	BDAStarTest/TestConformationMap.java	/^public class TestConformationMap extends ConformationMap {$/;"	c
TestProteinConformation	BDAStarTest/TestProteinConformation.java	/^    public TestProteinConformation(Conformation t, EnergyFunction e)$/;"	m	class:TestProteinConformation
TestProteinConformation	BDAStarTest/TestProteinConformation.java	/^    public TestProteinConformation(Conformation testConformation,$/;"	m	class:TestProteinConformation
TestProteinConformation	BDAStarTest/TestProteinConformation.java	/^    public TestProteinConformation(EnergyFunction e)$/;"	m	class:TestProteinConformation
TestProteinConformation	BDAStarTest/TestProteinConformation.java	/^public class TestProteinConformation extends ProteinConformation {$/;"	c
TestSolutionSpace	BDAStarTest/TestSolutionSpace.java	/^    public TestSolutionSpace(int numPositions, int numChoices)$/;"	m	class:TestSolutionSpace
TestSolutionSpace	BDAStarTest/TestSolutionSpace.java	/^public class TestSolutionSpace implements SolutionSpace {$/;"	c
Test_cancelled	mpi/Status.java	/^  public native boolean Test_cancelled() throws MPIException ;$/;"	m	class:Status
Test_inter	mpi/Comm.java	/^  public native boolean Test_inter() throws MPIException ;$/;"	m	class:Comm
Testall	mpi/Request.java	/^  public static Status[] Testall(Request [] array_of_request)$/;"	m	class:Request
Testany	mpi/Request.java	/^  private static native Status Testany(Request [] array_of_request, $/;"	m	class:Request	file:
Testany	mpi/Request.java	/^  public static Status Testany(Request [] array_of_request)$/;"	m	class:Request
Tests	Tests/EnergyMatrixComparison.java	/^package Tests;$/;"	p
Testsome	mpi/Request.java	/^  public static Status[] Testsome(Request [] array_of_request)$/;"	m	class:Request
ThreadElement	kstar/ThreadElement.java	/^	public ThreadElement(int rank) {$/;"	m	class:ThreadElement
ThreadElement	kstar/ThreadElement.java	/^public class ThreadElement {$/;"	c
ThreadMessage	kstar/ThreadMessage.java	/^	public ThreadMessage(Object obj, int dataType, int source, int tag) {$/;"	m	class:ThreadMessage
ThreadMessage	kstar/ThreadMessage.java	/^public class ThreadMessage {$/;"	c
ThreadStatus	kstar/ThreadElement.java	/^		public ThreadStatus(){$/;"	m	class:ThreadElement.ThreadStatus
ThreadStatus	kstar/ThreadElement.java	/^	public class ThreadStatus {$/;"	c	class:ThreadElement
Topo_test	mpi/Comm.java	/^  public native int Topo_test() throws MPIException ;$/;"	m	class:Comm
TransStep	kstar/SimpleMinimizer.java	/^	float TransStep = 0.10f;$/;"	f	class:SimpleMinimizer
Translate_ranks	mpi/Group.java	/^  public static native int [] Translate_ranks(Group group1,int [] ranks1,$/;"	m	class:Group
TreeEdge	kstar/TreeEdge.java	/^    public TreeEdge(int eNodeName1, int eNodeName2, LinkedHashSet<Integer> teM,$/;"	m	class:TreeEdge
TreeEdge	kstar/TreeEdge.java	/^public class TreeEdge implements Serializable{$/;"	c
TreeNode	kstar/TreeNode.java	/^	public TreeNode(int tName, boolean tIsLeaf, int v1, int v2){$/;"	m	class:TreeNode
TreeNode	kstar/TreeNode.java	/^public class TreeNode implements Serializable {$/;"	c
TripeptideClosure	kstar/TripeptideClosure.java	/^  TripeptideClosure( Molecule m, int res[] ){$/;"	m	class:TripeptideClosure
TripeptideClosure	kstar/TripeptideClosure.java	/^public class TripeptideClosure {$/;"	c
UB	kstar/ThreadMessage.java	/^	  final static int UB        = 11 ;$/;"	f	class:ThreadMessage
UB	mpi/Datatype.java	/^  private final static int UB        = 11 ;$/;"	f	class:Datatype	file:
UB	mpi/MPI.java	/^    INT, LONG, FLOAT, DOUBLE, PACKED, LB, UB, OBJECT;$/;"	f	class:MPI
UNDEFINED	kstar/ThreadMessage.java	/^	  final static int UNDEFINED = -1 ;$/;"	f	class:ThreadMessage
UNDEFINED	mpi/Datatype.java	/^  private final static int UNDEFINED = -1 ;$/;"	f	class:Datatype	file:
UNDEFINED	mpi/MPI.java	/^  static public int UNDEFINED;$/;"	f	class:MPI
UNEQUAL	mpi/MPI.java	/^  static public int IDENT, CONGRUENT, SIMILAR, UNEQUAL;$/;"	f	class:MPI
UP	kstar/ProlineFlip.java	/^    static boolean UP = true;$/;"	f	class:ProlineFlip
Ub	mpi/Datatype.java	/^  public int Ub() throws MPIException {$/;"	m	class:Datatype
Union	mpi/Group.java	/^  public static Group Union(Group group1, Group group2) throws MPIException {$/;"	m	class:Group
Unpack	mpi/Comm.java	/^  public int Unpack(byte[]   inbuf, $/;"	m	class:Comm
UserTime	BranchDecomposition/BranchDecompositionH.java	/^	public long UserTime(){$/;"	m	class:BranchDecompositionH
User_function	mpi/User_function.java	/^public abstract class User_function{$/;"	c
VPATH	mpi/Makefile	/^VPATH = .:${srcdir}$/;"	m
Vector	mpi/Datatype.java	/^  public static Datatype Vector(int      count, $/;"	m	class:Datatype
VolModule	kstar/VolModule.java	/^	VolModule(Molecule mol) {$/;"	m	class:VolModule
VolModule	kstar/VolModule.java	/^public class VolModule$/;"	c
WORLD	mpi/Comm.java	/^  protected final static int WORLD = 2;$/;"	f	class:Comm
WTGenChi1	kstar/StrandRCs.java	/^       private double[] WTGenChi1;\/\/Generalized chi1 angles (as in Perturbation.java) for restoration of WT rotamers$/;"	f	class:StrandRCs	file:
WTRes	kstar/StrandRCs.java	/^       private Residue[] WTRes;\/\/Wild-type residues for restoration of WT rotamers$/;"	f	class:StrandRCs	file:
Wait	mpi/Request.java	/^  private native Status Wait(Status stat);$/;"	m	class:Request	file:
Wait	mpi/Request.java	/^  public Status Wait() throws MPIException {$/;"	m	class:Request
Waitall	mpi/Request.java	/^  public static Status[] Waitall (Request [] array_of_request)$/;"	m	class:Request
Waitany	mpi/Request.java	/^  private static native Status Waitany(Request [] array_of_request, $/;"	m	class:Request	file:
Waitany	mpi/Request.java	/^  public static Status Waitany(Request [] array_of_request)$/;"	m	class:Request
Waitsome	mpi/Request.java	/^  public static Status[] Waitsome(Request [] array_of_request)$/;"	m	class:Request
Wtick	mpi/MPI.java	/^  static public native double Wtick();$/;"	m	class:MPI
Wtime	mpi/MPI.java	/^  static public native double Wtime();$/;"	m	class:MPI
a96ff	kstar/BBMinimizer.java	/^	Amber96ext a96ff = null;$/;"	f	class:BBMinimizer
a96ff	kstar/BackrubMinimizer.java	/^	Amber96ext a96ff = null;$/;"	f	class:BackrubMinimizer
a96ff	kstar/RotamerSearch.java	/^	Amber96ext a96ff;	\/\/ the forcefield and energy function to use for energy evaluation etc...$/;"	f	class:RotamerSearch
a96ff	kstar/SimpleMinimizer.java	/^	Amber96ext a96ff = null;$/;"	f	class:SimpleMinimizer
aa	kstar/DEESplit2f.java	/^		int aa;$/;"	f	class:DEESplit2f.ArrayIndex
aa	kstar/PrunedRotamers.java	/^	int aa;$/;"	f	class:Index3
aa	kstar/RotTypeMap.java	/^	public int aa = -1;$/;"	f	class:RotTypeMap
aa13_max_sqr	kstar/TripeptideClosure.java	/^  double aa13_min_sqr, aa13_max_sqr;$/;"	f	class:TripeptideClosure
aa13_min_sqr	kstar/TripeptideClosure.java	/^  double aa13_min_sqr, aa13_max_sqr;$/;"	f	class:TripeptideClosure
aaCTFilename	kstar/AminoAcidTemplates.java	/^	String aaCTFilename = "";$/;"	f	class:AminoAcidTemplates
aaCTResidues	kstar/AminoAcidTemplates.java	/^	Residue aaCTResidues[];$/;"	f	class:AminoAcidTemplates
aaCoordsFilename	kstar/AminoAcidTemplates.java	/^	String aaCoordsFilename = "all_amino_coords.in";$/;"	f	class:AminoAcidTemplates
aaFilename	kstar/AminoAcidTemplates.java	/^	String aaFilename = "";$/;"	f	class:AminoAcidTemplates
aaNTFilename	kstar/AminoAcidTemplates.java	/^	String aaNTFilename = "";$/;"	f	class:AminoAcidTemplates
aaNTResidues	kstar/AminoAcidTemplates.java	/^	Residue aaNTResidues[];$/;"	f	class:AminoAcidTemplates
aaNames	kstar/RotamerLibrary.java	/^	String aaNames[];       \/\/ Array of amino-acid names$/;"	f	class:RotamerLibrary
aaResidues	kstar/AminoAcidTemplates.java	/^	Residue aaResidues[];   \/\/ arrays of residues$/;"	f	class:AminoAcidTemplates
aaRotLib	kstar/EnvironmentVars.java	/^	public static RotamerLibrary aaRotLib;$/;"	f	class:EnvironmentVars
aat	kstar/Amber96PolyPeptideResidue.java	/^	AminoAcidTemplates aat = null;$/;"	f	class:Amber96PolyPeptideResidue
aat	kstar/Amber96ext.java	/^	AminoAcidTemplates aat = null;$/;"	f	class:Amber96ext
actualCoordinates	kstar/Molecule.java	/^	float	actualCoordinates[] = null;		\/\/ Local copy of atom coordinates$/;"	f	class:Molecule
add	kstar/RotMatrix.java	/^        double[] add(double[] vec1,double[] vec2){$/;"	m	class:RotMatrix
add	kstar/RotMatrix.java	/^        float[] add(float[] vec1,float[] vec2){$/;"	m	class:RotMatrix
addAtom	kstar/Molecule.java	/^	public int addAtom(int moleculeResidueNumber, Atom newAtom){$/;"	m	class:Molecule
addAtom	kstar/Molecule.java	/^	public int addAtom(int strandNumber, int strandResidueNumber, Atom newAtom){$/;"	m	class:Molecule
addAtom	kstar/Residue.java	/^	public int addAtom(Atom newAtom){$/;"	m	class:Residue
addAtom	kstar/Strand.java	/^	public int addAtom(int residueNumber, Atom newAtom){$/;"	m	class:Strand
addBackboneBonds	kstar/Amber96PolyPeptideResidue.java	/^	public void addBackboneBonds(){$/;"	m	class:Amber96PolyPeptideResidue
addBond	kstar/Atom.java	/^	public void addBond(int j){$/;"	m	class:Atom
addBond	kstar/Atom.java	/^	public void addBond(int j, int k){$/;"	m	class:Atom
addBond	kstar/Atom.java	/^	public void addBond(int j, int k, int l){$/;"	m	class:Atom
addBond	kstar/Atom.java	/^	public void addBond(int j, int k, int l, int m){$/;"	m	class:Atom
addBondBetween	kstar/Molecule.java	/^	public void addBondBetween(int atomi, int atomj){$/;"	m	class:Molecule
addBranches	BDAStar/BWMAStarNode.java	/^    private void addBranches(PriorityQueue<BWMAStarNode> leftChild,  PriorityQueue<BWMAStarNode> rightChild)$/;"	m	class:BWMAStarNode	file:
addBranches	BDAStar/CopyOfBWMAStarNode.java	/^    private void addBranches(CopyOfBWMAStarNode leftChild, CopyOfBWMAStarNode rightChild)$/;"	m	class:CopyOfBWMAStarNode	file:
addChild	BDAStar/BWMAStarNode.java	/^    public void addChild(Conformation conf)$/;"	m	class:BWMAStarNode
addDistEner	kstar/InteractionGraph.java	/^	public void addDistEner (int x, int y, float dist, float ener){$/;"	m	class:InteractionGraph
addEdge	BranchDecomposition/BranchNode.java	/^	public void addEdge(){		$/;"	m	class:BranchNode
addEdge	BranchDecomposition/BranchTree.java	/^	public int addEdge(int i1, int i2){$/;"	m	class:BranchTree
addEdge	kstar/InteractionGraph.java	/^	public void addEdge (int x, int y){$/;"	m	class:InteractionGraph
addEntropyTerm	kstar/RotamerSearch.java	/^	public void addEntropyTerm(boolean doMinimize, int[][] strandMut){$/;"	m	class:RotamerSearch
addEref	kstar/RotamerSearch.java	/^	public void addEref(float eRef[][], boolean doMinimize, int strandMut[][]){$/;"	m	class:RotamerSearch
addHydrogens	kstar/RotamerSearch.java	/^	boolean addHydrogens = true;$/;"	f	class:RotamerSearch
addM	BranchDecomposition/BranchEdge.java	/^	public void addM(String v){$/;"	m	class:BranchEdge
addNode	BranchDecomposition/BranchTree.java	/^	public void addNode(BranchNode tn){$/;"	m	class:BranchTree
addOrigRots	kstar/CommucObj.java	/^	public boolean addOrigRots = false;$/;"	f	class:CommucObj
addOrigRots	kstar/MutationManager.java	/^	private boolean addOrigRots = false;$/;"	f	class:MutationManager	file:
addOrigRots	kstar/RotamerLibrary.java	/^	public static void addOrigRots(int[][] strandMut,RotamerLibrary rl, Molecule m){$/;"	m	class:RotamerLibrary
addOrigRots	kstar/StrandRotamers.java	/^	public void addOrigRots(int[][] strandMut,RotamerLibrary rl, Molecule m){$/;"	m	class:StrandRotamers
addParamsFromFile	kstar/ParamSet.java	/^	public void addParamsFromFile(String fName){$/;"	m	class:ParamSet
addResidue	kstar/Molecule.java	/^	public void addResidue(int strandNumber, Residue newResidue){$/;"	m	class:Molecule
addResidue	kstar/Molecule.java	/^	public void addResidue(int strandNumber, Residue newResidue, boolean updateBonds){$/;"	m	class:Molecule
addResidue	kstar/Strand.java	/^	public int addResidue(Residue newResidue){$/;"	m	class:Strand
addRotamer	kstar/RotamerLibrary.java	/^	public void addRotamer(String AAname, int[] dihedVals){$/;"	m	class:RotamerLibrary
addSSEnd	kstar/LoopClosureAdjustment.java	/^    boolean addSSEnd = false;$/;"	f	class:LoopClosureAdjustment
addSSStart	kstar/LoopClosureAdjustment.java	/^    boolean addSSStart = false;$/;"	f	class:LoopClosureAdjustment
addStrand	kstar/Molecule.java	/^	public int addStrand(){$/;"	m	class:Molecule
addStrand	kstar/Molecule.java	/^	public int addStrand(Strand stnd) {$/;"	m	class:Molecule
addStrand	kstar/Molecule.java	/^	public int addStrand(String strandName){$/;"	m	class:Molecule
addToIntraE	kstar/PairwiseEnergyMatrix.java	/^        public void addToIntraE(int res1, int AA1, int rot1, float val){$/;"	m	class:PairwiseEnergyMatrix
addToLset	BranchDecomposition/MinVertexCut.java	/^	public void addToLset(String s){$/;"	m	class:MinVertexCut
addToPairwiseE	kstar/PairwiseEnergyMatrix.java	/^        public void addToPairwiseE(int res1, int AA1, int rot1, int res2, int AA2, int rot2, float val){$/;"	m	class:PairwiseEnergyMatrix
addToRset	BranchDecomposition/MinVertexCut.java	/^	public void addToRset(String s){$/;"	m	class:MinVertexCut
addToShellRotE	kstar/PairwiseEnergyMatrix.java	/^        public void addToShellRotE(int pos, int AANum, int rot, float val){$/;"	m	class:PairwiseEnergyMatrix
addUnperturbedRCs	kstar/StrandRCs.java	/^        public void addUnperturbedRCs(boolean addWTRot){$/;"	m	class:StrandRCs
addV	BranchDecomposition/GraphVertices.java	/^	public boolean addV(String name){$/;"	m	class:GraphVertices
addV	kstar/InteractionGraph.java	/^	public void addV(int molResNum){$/;"	m	class:InteractionGraph
addWTRot	kstar/CommucObj.java	/^        boolean addWTRot;$/;"	f	class:CommucObj
addWTRot	kstar/MutationManager.java	/^        boolean addWTRot;$/;"	f	class:MutationManager
addWTRot	kstar/PerturbationSelector.java	/^    boolean addWTRot;\/\/Should the wild-type "rotamers" be considered?$/;"	f	class:PerturbationSelector
addedRotamers	kstar/RotamerLibrary.java	/^	private boolean addedRotamers = false;$/;"	f	class:RotamerLibrary	file:
adj	BranchDecomposition/BreadthFirstSearch.java	/^	private int adj[][] = null; \/\/the list of adjacent nodes for each node (the direction of edges is taken into account)$/;"	f	class:BreadthFirstSearch	file:
affectedPerts	kstar/Residue.java	/^        int affectedPerts[] = null;\/\/Perturbations affected by the conformation of this residue$/;"	f	class:Residue
algOption	kstar/CommucObj.java	/^	int algOption = 0;$/;"	f	class:CommucObj
algOption	kstar/MutationManager.java	/^	int algOption = 0;$/;"	f	class:MutationManager
alignCBNewGly	kstar/StrandRotamers.java	/^	private void alignCBNewGly(Atom CBOld, Atom CBNew, Atom CAOld, Atom CANew, Atom NOld, Residue r, Residue localResidue){$/;"	m	class:StrandRotamers	file:
alignCBOldGly	kstar/StrandRotamers.java	/^	private void alignCBOldGly(Atom CBOld, Atom CBNew, Atom CAOld, Atom CANew, Atom NOld, Residue r){$/;"	m	class:StrandRotamers	file:
allBRforCurRotPruned	kstar/BackrubMinimizer.java	/^	private boolean allBRforCurRotPruned(boolean useBRforCurRot[][]){$/;"	m	class:BackrubMinimizer	file:
allPruned	kstar/CommucObj.java	/^	boolean allPruned[] = null;$/;"	f	class:CommucObj
allPruned	kstar/RotamerSearch.java	/^	boolean allPruned = false;	\/\/ determines if all the rotamers for a given residue have been pruned by MinDEE;$/;"	f	class:RotamerSearch
allZeros	BDAStar/BWMAStarNode.java	/^    private boolean allZeros(Conformation c)$/;"	m	class:BWMAStarNode	file:
allgather	mpi/Intracomm.java	/^  private native void allgather(Object   sendbuf, $/;"	m	class:Intracomm	file:
allgatherv	mpi/Intracomm.java	/^  private native void allgatherv(Object   sendbuf, $/;"	m	class:Intracomm	file:
alloc	mpi/Status.java	/^  private native void alloc() ;$/;"	m	class:Status	file:
allowableAAs	kstar/StrandRotamers.java	/^	private int allowableAAs[][];		\/\/ Which AA types are allowable at each position$/;"	f	class:StrandRotamers	file:
allreduce	mpi/Intracomm.java	/^  private native void allreduce(Object sendbuf, int sendoffset, $/;"	m	class:Intracomm	file:
alltoall	mpi/Intracomm.java	/^  private native void alltoall(Object   sendbuf, $/;"	m	class:Intracomm	file:
alltoallv	mpi/Intracomm.java	/^  private native void alltoallv(Object   sendbuf, $/;"	m	class:Intracomm	file:
alpha	kstar/TripeptideClosure.java	/^          alpha = new double[3], theta = new double[3];$/;"	f	class:TripeptideClosure
amberDatInFile	kstar/Amber96ext.java	/^	String amberDatInFile = "";$/;"	f	class:Amber96ext
aminoAcid	BDAStar/ProteinChoice.java	/^    public int aminoAcid;$/;"	f	class:ProteinChoice
aminoAcidNames	BDAStar/ProteinChoice.java	/^    public String[] aminoAcidNames = {$/;"	f	class:ProteinChoice
anchor	kstar/PartialStructureSwitch.java	/^        Atom anchor[];\/\/We can place the section by aligning these three atoms with their equivalents in their target structures$/;"	f	class:PartialStructureSwitch.ChainSection
anchor2	kstar/PartialStructureSwitch.java	/^        Atom anchor2[] = null;$/;"	f	class:PartialStructureSwitch.ChainSection
anchorDiffTol	kstar/PartialStructureSwitch.java	/^    float anchorDiffTol = 0.2f;\/\/Maximum distance allowed between transformed coordinates based on 2 different anchors$/;"	f	class:PartialStructureSwitch
angle	kstar/Atom.java	/^	public double angle(Atom atom1, Atom atom2){	$/;"	m	class:Atom
angleAboutXAxis	kstar/Atom.java	/^	public double angleAboutXAxis(){$/;"	m	class:Atom
angleAboutYAxis	kstar/Atom.java	/^	public double angleAboutYAxis(){$/;"	m	class:Atom
angleAboutZAxis	kstar/Atom.java	/^	public double angleAboutZAxis(){$/;"	m	class:Atom
angleAtomType1	kstar/Amber96ext.java	/^	int[]		angleAtomType1 = null;$/;"	f	class:Amber96ext
angleAtomType2	kstar/Amber96ext.java	/^	int[]		angleAtomType2 = null;$/;"	f	class:Amber96ext
angleAtomType3	kstar/Amber96ext.java	/^	int[]		angleAtomType3 = null;$/;"	f	class:Amber96ext
angleBendTerms	kstar/Amber96ext.java	/^	double bondStretchTerms[], angleBendTerms[], dihedralAngleTerms[];$/;"	f	class:Amber96ext
angleEBA	kstar/Amber96ext.java	/^	float[] angleEBA = null; \/\/ Equilibrium Bond Angle$/;"	f	class:Amber96ext
angleHFC	kstar/Amber96ext.java	/^	float[] angleHFC = null; \/\/ Harmonic Force Constant$/;"	f	class:Amber96ext
angleInRadians	kstar/Atom.java	/^	public double angleInRadians(Atom atom1, Atom atom2){	$/;"	m	class:Atom
append	BDAStar/AbstractConformation.java	/^    public void append(Position p, Choice c) {$/;"	m	class:AbstractConformation
append	BDAStar/Conformation.java	/^    public void append (Position p, Choice c);$/;"	m	interface:Conformation
append	BDAStar/ProteinConformation.java	/^    public void append (Choice c) $/;"	m	class:ProteinConformation
append	BDAStarTest/TestProteinConformation.java	/^    public void append (Choice c) $/;"	m	class:TestProteinConformation
appendResidue	kstar/Molecule.java	/^	public void appendResidue(){$/;"	m	class:Molecule
applyBackrub	kstar/Backrubs.java	/^	public float[] applyBackrub(Molecule m, int strandNum, int resNum, float theta1, boolean computeSmallRot, float theta2, float theta3){$/;"	m	class:Backrubs
applyDihedStep	kstar/SimpleMinimizer.java	/^	protected void applyDihedStep(int diAtArray[], int atomList[], int alSize,$/;"	m	class:SimpleMinimizer
applyDihedrals	kstar/CloseLoop.java	/^	private void applyDihedrals(double[][] dihedrals, boolean CToN)$/;"	m	class:CloseLoop	file:
applyFiPsi	kstar/Backbone.java	/^	public void applyFiPsi(Molecule m, int strandNum, int resNum, double alpha, int angleType){$/;"	m	class:Backbone
applyForwardDihedral	kstar/CloseLoop.java	/^	private void applyForwardDihedral(double[][] dihedrals, boolean CToN,$/;"	m	class:CloseLoop	file:
applyMaxBackrub	kstar/BackrubMinimizer.java	/^	public void applyMaxBackrub(){$/;"	m	class:BackrubMinimizer
applyPertState	kstar/StrandRCs.java	/^        public boolean applyPertState(Molecule m, int resNum, int pertState){$/;"	m	class:StrandRCs
applyPerturbation	kstar/FullStructureSwitch.java	/^    public boolean applyPerturbation(float param){$/;"	m	class:FullStructureSwitch
applyPerturbation	kstar/Perturbation.java	/^    public boolean applyPerturbation(float param){$/;"	m	class:Perturbation
applyRC	kstar/StrandRCs.java	/^	public boolean applyRC(Molecule m, int resNum, int RCNum) {$/;"	m	class:StrandRCs
applyReverseDihedral	kstar/CloseLoop.java	/^	private void applyReverseDihedral(double[][] dihedrals, boolean CToN,$/;"	m	class:CloseLoop	file:
applyRotMatrix	kstar/RotMatrix.java	/^        double[] applyRotMatrix(double[][] rm, double[] vec){\/\/Apply rotation matrix rm to vector vec, i.e. compute rm*vec$/;"	m	class:RotMatrix
applyRotMatrix	kstar/RotMatrix.java	/^        float[] applyRotMatrix(float[][] rm, float[] vec){\/\/Apply rotation matrix rm to vector vec, i.e. compute rm*vec$/;"	m	class:RotMatrix
applyRotamer	kstar/StrandRotamers.java	/^	public boolean applyRotamer(Molecule m, int resNum, int rotNum) {$/;"	m	class:StrandRotamers
applyRotamers	kstar/RotamerSearch.java	/^	public void applyRotamers(int[][] strandMut, int[] conf) {$/;"	m	class:RotamerSearch
applySSChanges	kstar/LoopClosureAdjustment.java	/^    public void applySSChanges(){$/;"	m	class:LoopClosureAdjustment
applySolution	kstar/CloseLoop.java	/^	public void applySolution(int solutionNumber)$/;"	m	class:CloseLoop
applyStrTorqueTrans	kstar/SimpleMinimizer.java	/^	private void applyStrTorqueTrans(int strNumber, double strTorque[], double RotStep,$/;"	m	class:SimpleMinimizer	file:
applyTransRot	kstar/Backrub.java	/^    public void applyTransRot(float rm[][][]){$/;"	m	class:Backrub
applyTransRot	kstar/Shear.java	/^    public void applyTransRot(float rm[][][], float tr[][]){$/;"	m	class:Shear
applyTripeptideRot	kstar/LoopClosureAdjustment.java	/^    public void applyTripeptideRot(float rm[][][], int res[]){$/;"	m	class:LoopClosureAdjustment
approxMinGMEC	kstar/CommucObj.java	/^	boolean approxMinGMEC = false;$/;"	f	class:CommucObj
approxMinGMEC	kstar/MutationManager.java	/^	boolean approxMinGMEC = false;$/;"	f	class:MutationManager
are12connected	kstar/Molecule.java	/^	public boolean are12connected(int atom1, int atom2){$/;"	m	class:Molecule
are13connected	kstar/Molecule.java	/^	public boolean are13connected(int atom1, int atom2){$/;"	m	class:Molecule
areNonBonded	kstar/Molecule.java	/^	public boolean areNonBonded(int atom1, int atom2){$/;"	m	class:Molecule
areNonBondedSteric	kstar/ProbeStericCheck.java	/^	private boolean areNonBondedSteric(Molecule m, Atom a1, Atom a2){$/;"	m	class:ProbeStericCheck	file:
arePertStatesIncompatible	kstar/PerturbationSelector.java	/^    public boolean arePertStatesIncompatible(Residue firstRes, int pertState1, Residue secondRes, int pertState2 ){$/;"	m	class:PerturbationSelector
argmax	kstar/DEEGoldsteinTriples.java	/^        private int argmax(float[] x){$/;"	m	class:DEEGoldsteinTriples	file:
arpFilenameMax	kstar/CommucObj.java	/^	String arpFilenameMax = null;$/;"	f	class:CommucObj
arpFilenameMax	kstar/MutationManager.java	/^	String arpFilenameMax = null;$/;"	f	class:MutationManager
arpFilenameMin	kstar/CommucObj.java	/^	String arpFilenameMin = null;$/;"	f	class:CommucObj
arpFilenameMin	kstar/MutationManager.java	/^	String arpFilenameMin = null;$/;"	f	class:MutationManager
arpMatrix	kstar/RotamerSearch.java	/^	private PairwiseEnergyMatrix arpMatrix = null;$/;"	f	class:RotamerSearch	file:
arpMatrixMax	kstar/RotamerSearch.java	/^	private PairwiseEnergyMatrix arpMatrixMax = null;$/;"	f	class:RotamerSearch	file:
asDist	kstar/CommucObj.java	/^	boolean asDist[] = null;$/;"	f	class:CommucObj
asDist	kstar/MutationManager.java	/^	boolean asDist[][] = null;$/;"	f	class:MutationManager
asResDist	kstar/MinDEEIntervals.java	/^	float asResDist[][] = null;$/;"	f	class:MinDEEIntervals
asasE	kstar/MutationManager.java	/^	float asasE[][][][] = null;$/;"	f	class:MutationManager
assignAA	kstar/Amber96ext.java	/^	public boolean assignAA(Molecule m, int nr) {$/;"	m	class:Amber96ext
assignAANums	kstar/RotamerSearch.java	/^	private void assignAANums(int strandMut[][]) {$/;"	m	class:RotamerSearch	file:
assignAffectedPerts	kstar/Molecule.java	/^    public void assignAffectedPerts( Residue res ){$/;"	m	class:Molecule
assignGR	kstar/Amber96ext.java	/^	public boolean assignGR(Molecule m, int nr) {$/;"	m	class:Amber96ext
assignNumericalType	kstar/Amber96ext.java	/^	public void assignNumericalType(Atom theAtom, String atomName){$/;"	m	class:Amber96ext
assignPucker	kstar/PDBChemModel.java	/^        static public void assignPucker(Molecule m, Residue res){$/;"	m	class:PDBChemModel
assignRightConformations	BDAStar/BWMAStarNode.java	/^    private void assignRightConformations(Conformation c)$/;"	m	class:BWMAStarNode	file:
assignScore	BDAStar/AbstractConformation.java	/^    public void assignScore(double s)$/;"	m	class:AbstractConformation
assignScore	BDAStar/Conformation.java	/^    public void assignScore (double score);$/;"	m	interface:Conformation
assignScore	BDAStar/ProteinConformation.java	/^    public void assignScore(double s)$/;"	m	class:ProteinConformation
assignScore	BDAStarTest/TestProteinConformation.java	/^    public void assignScore(double s)$/;"	m	class:TestProteinConformation
assignSecStruct	kstar/PDBChemModel.java	/^        public void assignSecStruct(Molecule m, ArrayList<Integer> helixStarts, ArrayList<Integer> helixEnds,$/;"	m	class:PDBChemModel
atEEF1Vol	kstar/EEF1.java	/^	float atEEF1Vol[] = new float[numAtTypesEEF1];$/;"	f	class:EEF1
atTypeEEF1names	kstar/EEF1.java	/^	String atTypeEEF1names[] = new String[numAtTypesEEF1];$/;"	f	class:EEF1
atom	kstar/Molecule.java	/^	Atom atom[] = null;					\/\/ Array of atoms in this molecule$/;"	f	class:Molecule
atom	kstar/Residue.java	/^	Atom	atom[];					\/\/ Array of atoms in this residue$/;"	f	class:Residue
atomAtomicMasses	kstar/Amber96ext.java	/^	float[] atomAtomicMasses = null;$/;"	f	class:Amber96ext
atomBuckets	kstar/VolModule.java	/^	Hashtable atomBuckets;	\/\/ Will become a hashtable of Vectors of atoms $/;"	f	class:VolModule
atomList	kstar/CloseLoop.java	/^	int[][] atomList;$/;"	f	class:CloseLoop
atomTypeNames	kstar/Amber96ext.java	/^	String[] atomTypeNames = null;$/;"	f	class:Amber96ext
atomTypeToInt	kstar/Amber96ext.java	/^	private int atomTypeToInt(String s) {$/;"	m	class:Amber96ext	file:
atomTypeX	kstar/Amber96ext.java	/^	final int atomTypeX = -2; \/\/the atom type number for the X wildcard atom type$/;"	f	class:Amber96ext
autoFix	kstar/EnvironmentVars.java	/^        public static boolean autoFix;\/\/Should structures being read in be autofixed?$/;"	f	class:EnvironmentVars
average	kstar/RotMatrix.java	/^         public float[] average(float v1[], float v2[]){\/\/Average two vectors$/;"	m	class:RotMatrix
axisRotate	kstar/RotMatrix.java	/^	public void axisRotate(float ax, float ay, float az, float thetaDeg,$/;"	m	class:RotMatrix
bTrack	kstar/TreeEdge.java	/^    private float bTrack(int curState[]){		$/;"	m	class:TreeEdge	file:
bTrackBestConf	kstar/TreeEdge.java	/^    public void bTrackBestConf (RotTypeMap bestPosAARot[], int bestState[])$/;"	m	class:TreeEdge
b_a1a3	kstar/TripeptideClosure.java	/^  double[] b_a1a3 = new double[3], b_a1n1 = new double[3], b_a3c3 = new double[3];$/;"	f	class:TripeptideClosure
b_a1n1	kstar/TripeptideClosure.java	/^  double[] b_a1a3 = new double[3], b_a1n1 = new double[3], b_a3c3 = new double[3];$/;"	f	class:TripeptideClosure
b_a3c3	kstar/TripeptideClosure.java	/^  double[] b_a1a3 = new double[3], b_a1n1 = new double[3], b_a3c3 = new double[3];$/;"	f	class:TripeptideClosure
backbones	kstar/PartialStructureSwitch.java	/^        ArrayList< HashMap < String, float[]>> backbones = new ArrayList< HashMap <String, float[]>>();\/\/Backbone coordinates, taken directly from the alternate structure$/;"	f	class:PartialStructureSwitch.ChainSection
backrubFile	kstar/BackrubMinimizer.java	/^	String backrubFile = null; \/\/the file in which the allowed backrub angles are stored$/;"	f	class:BackrubMinimizer
backrubFile	kstar/CommucObj.java	/^	String backrubFile = null;$/;"	f	class:CommucObj
backrubFile	kstar/MutationManager.java	/^	String backrubFile = null;$/;"	f	class:MutationManager
backupAtomCoord	kstar/Molecule.java	/^	public void backupAtomCoord (){$/;"	m	class:Molecule
backupCoord	kstar/Molecule.java	/^	private void backupCoord(Atom updateAtom){$/;"	m	class:Molecule	file:
backupCoordinates	kstar/Molecule.java	/^	float backupCoordinates[] = null;	\/\/ Backup of atom coordinates$/;"	f	class:Molecule
backupStrCoord	kstar/SimpleMinimizer.java	/^	private float [] backupStrCoord(int strNumber){$/;"	m	class:SimpleMinimizer	file:
baseSize	mpi/Datatype.java	/^  protected int baseSize ;  \/\/ or private$/;"	f	class:Datatype
baseType	mpi/Datatype.java	/^  public int baseType ;$/;"	f	class:Datatype
baseTypeSave	mpi/Request.java	/^  protected int baseTypeSave ;$/;"	f	class:Request
bbMin	kstar/RotamerSearch.java	/^	BBMinimizer bbMin = null;	\/\/the backbone minimizer$/;"	f	class:RotamerSearch
bbScale	kstar/VolModule.java	/^	double bbScale;					\/\/ The bounding box range. If this was 80% of full$/;"	f	class:VolModule
bcast	mpi/Intracomm.java	/^  private native void bcast(Object   buf, $/;"	m	class:Intracomm	file:
be	BranchDecomposition/BranchTree.java	/^	private BranchEdge be[] = null; \/\/the edges in the tree$/;"	f	class:BranchTree	file:
bestE	kstar/CommucObj.java	/^	double bestE[] = null;$/;"	f	class:CommucObj
bestEMin	kstar/CommucObj.java	/^	double bestEMin[] = null;$/;"	f	class:CommucObj
bestEMin	kstar/RotamerSearch.java	/^	float bestEMin = 9999999.0f; \/\/this should ONLY be accessed\/modified using the synchronized methods below$/;"	f	class:RotamerSearch
bestEUnMin	kstar/RotamerSearch.java	/^	float bestEUnMin = 9999999.0f;$/;"	f	class:RotamerSearch
bestScore	kstar/CommucObj.java	/^	BigDecimal bestScore = new BigDecimal(0.0);$/;"	f	class:CommucObj
bestScore	kstar/MutationManager.java	/^	BigDecimal bestScore = new BigDecimal("0.0");$/;"	f	class:MutationManager
bigE	kstar/BackrubMinimizer.java	/^	private double bigE = Math.pow(10, 38);$/;"	f	class:BackrubMinimizer	file:
bigE	kstar/DEE.java	/^	protected float bigE = (float)Math.pow(10,38);$/;"	f	class:DEE
binSearchRotStep	kstar/BBMinimizer.java	/^	private float binSearchRotStep(double coord[], float axisToRot[], double center[], float origTheta, int resNum){$/;"	m	class:BBMinimizer	file:
black	BranchDecomposition/BreadthFirstSearch.java	/^	private final String black = "b";$/;"	f	class:BreadthFirstSearch	file:
bn	BranchDecomposition/BranchTree.java	/^	private BranchNode bn[] = null; \/\/the nodes in the tree	$/;"	f	class:BranchTree	file:
bond	kstar/Atom.java	/^	int	bond[];		\/\/ arrays of indices for bonded atoms$/;"	f	class:Atom
bondAngle0	kstar/TripeptideClosure.java	/^  double[] len0 = new double[6], bondAngle0 = new double[7], t_ang0 = new double[2];$/;"	f	class:TripeptideClosure
bondAtomType1	kstar/Amber96ext.java	/^	int[]   bondAtomType1 = null;$/;"	f	class:Amber96ext
bondAtomType2	kstar/Amber96ext.java	/^	int[]   bondAtomType2 = null;$/;"	f	class:Amber96ext
bondEBL	kstar/Amber96ext.java	/^	float[] bondEBL = null; \/\/ Equilibrium Bond Length$/;"	f	class:Amber96ext
bondHFC	kstar/Amber96ext.java	/^	float[] bondHFC = null; \/\/ Harmonic Force Constant$/;"	f	class:Amber96ext
bondStretchTerms	kstar/Amber96ext.java	/^	double bondStretchTerms[], angleBendTerms[], dihedralAngleTerms[];$/;"	f	class:Amber96ext
bondedMatrix	kstar/Molecule.java	/^	boolean bondedMatrix[][] = null;$/;"	f	class:Molecule
bondedMatrixSize	kstar/Molecule.java	/^	int bondedMatrixSize = 0;$/;"	f	class:Molecule
bondedTo	kstar/Atom.java	/^	public boolean bondedTo(int j){$/;"	m	class:Atom
boundForPartition	kstar/RotamerSearch.java	/^	private double boundForPartition = stericE; \/\/a lower bound on the conformational energy for a given partition (used by DACS)$/;"	f	class:RotamerSearch	file:
boundKStar	kstar/MSMinBounds.java	/^	boolean boundKStar = false;$/;"	f	class:MSMinBounds
br	kstar/BackrubMinimizer.java	/^	Backrubs br = null; \/\/handles the application of the backrub motions$/;"	f	class:BackrubMinimizer
brMin	kstar/RotamerSearch.java	/^	BackrubMinimizer brMin = null;	\/\/the backrub minimizer$/;"	f	class:RotamerSearch
brSamples	kstar/BackrubMinimizer.java	/^	float brSamples[][] = null; \/\/the backrub samples (for the big rotation) for each flexible residue (in the system strand only)$/;"	f	class:BackrubMinimizer
branching	BDAStar/BWMAStarNode.java	/^    boolean branching = false;$/;"	f	class:BWMAStarNode
branching	BDAStar/CopyOfBWMAStarNode.java	/^    boolean branching = false;$/;"	f	class:CopyOfBWMAStarNode
bsend	mpi/Comm.java	/^  private native void bsend(Object   buf, $/;"	m	class:Comm	file:
bt	BranchDecomposition/BranchDecompositionH.java	/^	private BranchTree bt = null; \/\/the branch decomposition tree$/;"	f	class:BranchDecompositionH	file:
bucketResolution	kstar/VolModule.java	/^	double bucketResolution;		\/\/ Resolution of buckets datastructure$/;"	f	class:VolModule
buf	mpi/Request.java	/^  protected Object buf;$/;"	f	class:Request
bufSave	mpi/Request.java	/^  protected Object bufSave ;$/;"	f	class:Request
bufbaseSave	mpi/Request.java	/^  protected long bufbaseSave, bufptrSave ;$/;"	f	class:Request
buffer	mpi/MPI.java	/^  private static byte [] buffer = null ;$/;"	f	class:MPI	file:
bufptrSave	mpi/Request.java	/^  protected long bufbaseSave, bufptrSave ;$/;"	f	class:Request
buildAllSolutions	BDAStarTest/BDAStarTest.java	/^    public static void buildAllSolutions(HashSet<String> out, Conformation current, int index, int positions, int choices)$/;"	m	class:BDAStarTest
buildAllSolutions	BDAStarTest/BWMStarNodeTest.java	/^    public static void buildAllSolutions(HashSet<String> out, Conformation current, int index, int positions, int choices)$/;"	m	class:BWMStarNodeTest
buildRootedTreeHelper	kstar/BranchTree.java	/^	private void buildRootedTreeHelper(TreeNode r, TreeEdge te[], TreeNode tn[]){$/;"	m	class:BranchTree	file:
buildsturm	kstar/SturmSolver.java	/^    int buildsturm(int ord, poly sseq[])$/;"	m	class:SturmSolver
c	kstar/TreeEdge.java	/^    private TreeNode c = null; \/\/the child node incident to the edge in the rooted tree$/;"	f	class:TreeEdge	file:
cObj	kstar/KSParser.java	/^		private CommucObj cObj = null;$/;"	f	class:KSParser.DACSthread	file:
cObjArray	kstar/MutationManager.java	/^    CommucObj cObjArray[] = null;$/;"	f	class:MutationManager
cOfEdge	kstar/TreeNode.java	/^	private TreeEdge cOfEdge = null; \/\/child of which tree edge is this node (the other end of this edge is adjacent to the parent 'p' of this node)$/;"	f	class:TreeNode	file:
calcNext	kstar/PrunedRotamers.java	/^	  public void calcNext(RotInfo<T> curItem) {$/;"	m	class:PrunedRotIterator
calcSolns	kstar/LoopClosureAdjustment.java	/^    public int calcSolns(){\/\/Solve the loop closure equations given the current state of predecessor perturbations$/;"	m	class:LoopClosureAdjustment
calcTotalSnapshotEnergy	kstar/RotamerSearch.java	/^	private float calcTotalSnapshotEnergy(){$/;"	m	class:RotamerSearch	file:
calcTransRot	kstar/Backrub.java	/^    public void calcTransRot(float param, float rm[][][]){\/\/calculate rotation matrices for a given perturbation parameter, put them in rm$/;"	m	class:Backrub
calcTransRot	kstar/Shear.java	/^    public void calcTransRot(float param, float rm[][][], float tr[][]){\/\/calculate rotation matrices and translation vectors for a given perturbation parameter, put them in rm and tr$/;"	m	class:Shear
calc_dih_ang	kstar/TripeptideClosure.java	/^public double calc_dih_ang(double r1[], double r2[], double r3[])$/;"	m	class:TripeptideClosure
calc_t1	kstar/TripeptideClosure.java	/^double calc_t1(double t0, double t2)$/;"	m	class:TripeptideClosure
calc_t2	kstar/TripeptideClosure.java	/^double calc_t2(double t0)$/;"	m	class:TripeptideClosure
calculateEVEnergy	kstar/Amber96ext.java	/^	private void calculateEVEnergy(float coordinates[], int curIndex, double energyTerms[]){$/;"	m	class:Amber96ext	file:
calculateEVGradient	kstar/Amber96ext.java	/^	private void calculateEVGradient(int curIndex){$/;"	m	class:Amber96ext	file:
calculateGradient	kstar/Amber96ext.java	/^	public void calculateGradient(){$/;"	m	class:Amber96ext
calculateGradient	kstar/Amber96ext.java	/^	public void calculateGradient(int curIndex){$/;"	m	class:Amber96ext
calculateGradient	kstar/ForceField.java	/^	void calculateGradient();$/;"	m	interface:ForceField
calculateOneAAWithTemplates	kstar/Amber96ext.java	/^	public boolean calculateOneAAWithTemplates(Residue res){$/;"	m	class:Amber96ext
calculateOneGRWithTemplates	kstar/Amber96ext.java	/^	public boolean calculateOneGRWithTemplates(Residue res){$/;"	m	class:Amber96ext
calculateSolvationEnergy	kstar/Amber96ext.java	/^	private void calculateSolvationEnergy(float coordinates[], int curIndex, double energyTerms[]){$/;"	m	class:Amber96ext	file:
calculateSolvationEnergyFull	kstar/Amber96ext.java	/^	private void calculateSolvationEnergyFull(float coordinates[], double energyTerms[]){$/;"	m	class:Amber96ext	file:
calculateSolvationEnergyPart	kstar/Amber96ext.java	/^	private void calculateSolvationEnergyPart(float coordinates[], int curIndex, double energyTerms[]){$/;"	m	class:Amber96ext	file:
calculateSolvationGradient	kstar/Amber96ext.java	/^	private void calculateSolvationGradient(int curIndex) {$/;"	m	class:Amber96ext	file:
calculateTotalEnergy	kstar/Amber96ext.java	/^	public double [] calculateTotalEnergy(float coordinates[], int curIndex){$/;"	m	class:Amber96ext
calculateTypes	kstar/Amber96ext.java	/^	public void calculateTypes(){$/;"	m	class:Amber96ext
calculateTypes	kstar/ForceField.java	/^	void calculateTypes();$/;"	m	interface:ForceField
calculateTypesWithTemplates	kstar/Amber96ext.java	/^	public void calculateTypesWithTemplates() {$/;"	m	class:Amber96ext
calculateVolumes	kstar/CommucObj.java	/^	boolean calculateVolumes = true;$/;"	f	class:CommucObj
calculateVolumes	kstar/MutationManager.java	/^	boolean calculateVolumes = true;$/;"	f	class:MutationManager
canEliminateUsing	kstar/DEEGoldsteinTriples.java	/^        private boolean canEliminateUsing (int pos1, int r1AA, int r1Rot, int t1AA, int t1Rot,$/;"	m	class:DEEGoldsteinTriples	file:
canEliminateUsing	kstar/DEEIndirect.java	/^        private boolean canEliminateUsing (int pos1, int r1AA, int r1Rot, int t1AA, int t1Rot,$/;"	m	class:DEEIndirect	file:
canMutate	kstar/RotamerLibrary.java	/^	private boolean canMutate = false;$/;"	f	class:RotamerLibrary	file:
center	kstar/Molecule.java	/^	public void center(){$/;"	m	class:Molecule
centerByMass	kstar/Molecule.java	/^	public void centerByMass(){$/;"	m	class:Molecule
cfgName	kstar/KSParser.java	/^		String cfgName = "KStar.cfg";$/;"	f	class:KSParser
changePerturbationParameter	kstar/Perturbation.java	/^    public void changePerturbationParameter(float param){$/;"	m	class:Perturbation
changeResidueType	kstar/StrandRCs.java	/^        public void changeResidueType(Molecule m, int resNum, String newResType, boolean addHydrogens, boolean connectResidue, boolean useOldBBatoms) {$/;"	m	class:StrandRCs
changeResidueType	kstar/StrandRotamers.java	/^	public void changeResidueType(Molecule m, int resNum, String newResType, boolean addHydrogens) {$/;"	m	class:StrandRotamers
changeResidueType	kstar/StrandRotamers.java	/^	public void changeResidueType(Molecule m, int resNum, String newResType, boolean addHydrogens, boolean connectResidue) {$/;"	m	class:StrandRotamers
changeResidueType	kstar/StrandRotamers.java	/^	public void changeResidueType(Molecule m, int resNum, String newResType, boolean addHydrogens, boolean connectResidue, boolean useOldBBatoms) {$/;"	m	class:StrandRotamers
changeTorsion	kstar/Molecule.java	/^	public void changeTorsion(int a1num, int a2num, int a3num, int a4num, double deltaTorsion,$/;"	m	class:Molecule
changeType	kstar/Atom.java	/^	public void changeType(String newName){$/;"	m	class:Atom
charge	kstar/Atom.java	/^	float	charge=0.0f;	\/\/ atomic charge$/;"	f	class:Atom
checkAAType	kstar/Amber96ext.java	/^	private int checkAAType(Molecule m, Residue templateRes, Residue res, int[] atArray) { $/;"	m	class:Amber96ext	file:
checkAllStericsBBonly	kstar/RotamerSearch.java	/^	private boolean checkAllStericsBBonly(int strandNum, int resNum) {$/;"	m	class:RotamerSearch	file:
checkAllowable	kstar/StrandRotamers.java	/^	public boolean checkAllowable(int resNum, String name) {$/;"	m	class:StrandRotamers
checkAllowedSteric	kstar/StericCheck.java	/^	public boolean checkAllowedSteric (int curTopLevel, int curConf[], int curNode){		$/;"	m	class:StericCheck
checkAllowedTaus	kstar/BackrubMinimizer.java	/^	private boolean checkAllowedTaus(Molecule m, int strNum, int resNum, float initTaus[]){$/;"	m	class:BackrubMinimizer	file:
checkAngles	kstar/RamachandranChecker.java	/^    public boolean checkAngles(float phi, float psi, int plotNum){$/;"	m	class:RamachandranChecker
checkByAAType	kstar/RamachandranChecker.java	/^    public boolean[] checkByAAType(Molecule m, int resNum){$/;"	m	class:RamachandranChecker
checkCAallRes	kstar/BBMinimizer.java	/^	public boolean checkCAallRes(int strandNum){$/;"	m	class:BBMinimizer
checkCBonded	kstar/Molecule.java	/^    public boolean checkCBonded(int molResNum){$/;"	m	class:Molecule
checkConf	kstar/ExpansionQueue.java	/^	private boolean checkConf(QueueNode node1, QueueNode node2){$/;"	m	class:ExpansionQueue	file:
checkConf	kstar/QueueNode.java	/^	private boolean checkConf(QueueNode node1, QueueNode node2){$/;"	m	class:QueueNode	file:
checkCumulativePerturbation	kstar/PMinimizer.java	/^        private void checkCumulativePerturbation(int pertNum){\/\/,double maxPertParam,double minPertParam$/;"	m	class:PMinimizer	file:
checkGRType	kstar/Amber96ext.java	/^	private int checkGRType(Molecule m, Residue templateRes, Residue res, int[] atArray) { $/;"	m	class:Amber96ext	file:
checkHbondTypes	kstar/ProbeStericCheck.java	/^	private boolean checkHbondTypes(Atom a1, Atom a2){$/;"	m	class:ProbeStericCheck	file:
checkHeap	kstar/TreeEdge.java	/^    private void checkHeap(PriorityQueue<Conf> heap)$/;"	m	class:TreeEdge	file:
checkMPI	kstar/KSParser.java	/^	public void checkMPI(String[] args) {$/;"	m	class:KSParser
checkMolecule	kstar/Molecule.java	/^	public int checkMolecule(int level, int vlevel){$/;"	m	class:Molecule
checkMonotonic	kstar/PMinimizer.java	/^        boolean checkMonotonic = false;\/\/This activates an alternate stopping condition that detects when the minimization stops improving$/;"	f	class:PMinimizer
checkNBonded	kstar/Molecule.java	/^    public boolean checkNBonded(int molResNum){$/;"	m	class:Molecule
checkPrePro	kstar/RamachandranChecker.java	/^    public boolean checkPrePro(Molecule m, int resNum){$/;"	m	class:RamachandranChecker
checkRotProbConvEntropy	kstar/KSParser.java	/^	private float checkRotProbConvEntropy(float rotProb[][], float oldProb[][], String strandDefault[][], boolean prunedRot[][],Molecule m){$/;"	m	class:KSParser	file:
checkSterics	kstar/BackrubMinimizer.java	/^	private boolean checkSterics(Molecule m, int strNum, int resNum, int excludeList[][], boolean useResSC){$/;"	m	class:BackrubMinimizer	file:
checkStericsBBonly	kstar/RotamerSearch.java	/^	private boolean checkStericsBBonly(int strandNum, int resNum) {$/;"	m	class:RotamerSearch	file:
checkWT	kstar/KSParser.java	/^	private void checkWT(String[][] strandDefault,boolean[] strandPresent, ParamSet sParams) {$/;"	m	class:KSParser	file:
checkedn1	BranchDecomposition/BranchEdge.java	/^	private boolean checkedn1 = false; \/\/determines if this edge has been checked for pushing toward node n1$/;"	f	class:BranchEdge	file:
checkedn2	BranchDecomposition/BranchEdge.java	/^	private boolean checkedn2 = false; \/\/determines if this edge has been checked for pushing toward node n2$/;"	f	class:BranchEdge	file:
child	BDAStar/BWMStarNode.java	/^    private BWMStarNode child;$/;"	f	class:BWMStarNode	file:
childMap	BDAStar/BDAStarNode.java	/^    private Map<Choice, BDAStarNode> childMap;$/;"	f	class:BDAStarNode	file:
children	BDAStar/BDAStarNode.java	/^    private PriorityQueue<BDAStarNode> children;$/;"	f	class:BDAStarNode	file:
children	BDAStar/BWMAStarNode.java	/^    private PriorityQueue<BWMAStarNode> children;$/;"	f	class:BWMAStarNode	file:
children	BDAStar/CopyOfBWMAStarNode.java	/^    private PriorityQueue<CopyOfBWMAStarNode> children;$/;"	f	class:CopyOfBWMAStarNode	file:
children	BDAStar/ProteinConformationTrie.java	/^    private ConformationMap children;$/;"	f	class:ProteinConformationTrie	file:
childrenMap	BDAStar/BWMAStarNode.java	/^    private Map<String, BWMAStarNode> childrenMap;$/;"	f	class:BWMAStarNode	file:
choice	BDAStar/BDAStarNode.java	/^    private Choice choice;$/;"	f	class:BDAStarNode	file:
choice	BDAStar/Choice.java	/^    public int choice;$/;"	f	class:Choice
choices	BDAStar/BWMSolutionSpace.java	/^    private Map<Position, Collection<ProteinChoice>> choices;$/;"	f	class:BWMSolutionSpace	file:
choices	BDAStarTest/TestSolutionSpace.java	/^    private Map<Position, Collection<ProteinChoice>> choices;$/;"	f	class:TestSolutionSpace	file:
chooseSplitPos	kstar/KSParser.java	/^	private int chooseSplitPos(int numMutable, PrunedRotamers<Boolean> prunedRotAtRes, int numRotForRes[],$/;"	m	class:KSParser	file:
chooseSplitPosRandom	kstar/KSParser.java	/^	private int chooseSplitPosRandom(int numMutable){		$/;"	m	class:KSParser	file:
cleanNode	kstar/TreeEdge.java	/^        private T cleanNode;$/;"	f	class:TreeEdge.LazyHeap	file:
cleanUpNodes	kstar/KSParser.java	/^	public static void cleanUpNodes(){$/;"	m	class:KSParser
clear	BDAStar/ConformationMap.java	/^	public void clear() {$/;"	m	class:ConformationMap
clear	BDAStar/ProteinConformationMap.java	/^	public void clear() {$/;"	m	class:ProteinConformationMap
clear	BDAStarTest/TestConformationMap.java	/^	public void clear() {$/;"	m	class:TestConformationMap
clearAllowable	kstar/RotamerSearch.java	/^	public void clearAllowable(int resNum, int strandNum) {$/;"	m	class:RotamerSearch
clearAllowable	kstar/StrandRotamers.java	/^	public void clearAllowable(int resNum) {$/;"	m	class:StrandRotamers
clearFreeList	mpi/MPI.java	/^  synchronized static void clearFreeList() {$/;"	m	class:MPI
clearMolGradient	kstar/SimpleMinimizer.java	/^	protected void clearMolGradient() {$/;"	m	class:SimpleMinimizer
clone	mpi/Cartcomm.java	/^  public Object clone() {$/;"	m	class:Cartcomm
clone	mpi/Comm.java	/^  public Object clone() {$/;"	m	class:Comm
clone	mpi/Graphcomm.java	/^  public Object clone() {$/;"	m	class:Graphcomm
clone	mpi/Intercomm.java	/^  public Object clone() {$/;"	m	class:Intercomm
clone	mpi/Intracomm.java	/^  public Object clone() {$/;"	m	class:Intracomm
closeAnchor	kstar/KSParser.java	/^	private void closeAnchor(MolParameters mp, int triple, int NAnchor, int CAnchor)$/;"	m	class:KSParser	file:
closeCAnchor	kstar/KSParser.java	/^	private void closeCAnchor(MolParameters mp, int triple, int CAnchor)$/;"	m	class:KSParser	file:
closeLog	kstar/MutationManager.java	/^	public void closeLog() {$/;"	m	class:MutationManager
closeLoop	kstar/KSParser.java	/^	public void closeLoop(String s, ParamSet sParams)$/;"	m	class:KSParser
closeNAnchor	kstar/KSParser.java	/^	private void closeNAnchor(MolParameters mp, int triple, int NAnchor)$/;"	m	class:KSParser	file:
coef	kstar/SturmSolver.java	/^        double[] coef = new double[MAX_ORDER+1];$/;"	f	class:SturmSolver.poly
cofactor	kstar/Residue.java	/^	public boolean cofactor = false;$/;"	f	class:Residue
color	BranchDecomposition/BreadthFirstSearch.java	/^	private String color[] = null; \/\/the color of each node (w, g, or b)	$/;"	f	class:BreadthFirstSearch	file:
comm	mpi/Request.java	/^  protected Comm comm;$/;"	f	class:Request
commSave	mpi/Request.java	/^  protected long commSave, typeSave ;$/;"	f	class:Request
commit	mpi/Datatype.java	/^  private native void commit();$/;"	m	class:Datatype	file:
compASdist	kstar/CommucObj.java	/^	boolean compASdist = false;$/;"	f	class:CommucObj
compASdist	kstar/MutationManager.java	/^	boolean compASdist = false;$/;"	f	class:MutationManager
compEE	kstar/CommucObj.java	/^	SamplingEEntries compEE[] = null;\/\/initialized by the slave node, not by the master$/;"	f	class:CommucObj
compEref	kstar/KSParser.java	/^	private float [] compEref(float intraEnergies[][][][][][], StrandRotamers strandRot[], int strandMut[][], float intraEnergiesEntropy[][], int numRes,$/;"	m	class:KSParser	file:
compFiPsi	kstar/BBMinimizer.java	/^	private float compFiPsi(int resNum, int strandNum, int angleType, float fiPsiStep, Backbone bb, boolean pemComp){$/;"	m	class:BBMinimizer	file:
compLlambda	kstar/TreeEdge.java	/^    public void compLlambda(){$/;"	m	class:TreeEdge
compLlambda	kstar/TreeEdge.java	/^    public void compLlambda(boolean initMatrices){$/;"	m	class:TreeEdge
compMLRsets	BranchDecomposition/BranchDecompositionH.java	/^	private void compMLRsets(BranchEdge e, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy){$/;"	m	class:BranchDecompositionH	file:
compMinCut	BranchDecomposition/MinVertexCut.java	/^	private void compMinCut(BranchTree dH, int s, int t, LinkedHashSet<Integer> S1, LinkedHashSet<Integer> S2, int splitV[]){$/;"	m	class:MinVertexCut	file:
compMinDEEIntervals	kstar/MinDEEIntervals.java	/^	public void compMinDEEIntervals(){$/;"	m	class:MinDEEIntervals
compNumRotForRes	kstar/DEE.java	/^	protected void compNumRotForRes(){$/;"	m	class:DEE
compNumRotForRes	kstar/KSParser.java	/^	private int [] compNumRotForRes(int numberMutable, RotamerSearch rs, int strandMut[][],int mutRes2Strand[],int mutRes2StrandMutIndex[]){$/;"	m	class:KSParser	file:
compNumUnprunedConfs	kstar/KSParser.java	/^	private BigInteger compNumUnprunedConfs(int numMutable, PrunedRotamers<Boolean> prunedRotAtRes, int numRotForRes[]) {$/;"	m	class:KSParser	file:
compPrunedConfsByRot	kstar/RotamerSearch.java	/^	private BigInteger compPrunedConfsByRot(int numRotForRes[], int numRes, int curLevel){$/;"	m	class:RotamerSearch	file:
compRot	kstar/BBMinimizer.java	/^	private float compRot(int resNums[], int numRes, float rotStep, double center[], float axisToRot[], int AAnum){		$/;"	m	class:BBMinimizer	file:
compRot	kstar/BackrubMinimizer.java	/^	private float compRot(int resNums[], float rotStep, double center[], float axisToRot[]){		$/;"	m	class:BackrubMinimizer	file:
compRotProbSCMF	kstar/KSParser.java	/^	private float[][] compRotProbSCMF(int numRes, float intraEnergies[][],$/;"	m	class:KSParser	file:
compTrans	kstar/BBMinimizer.java	/^	private float compTrans(int resNums[], int numRes, int coord, float transStep, int AAnum){$/;"	m	class:BBMinimizer	file:
compTrans	kstar/BackrubMinimizer.java	/^	private float compTrans(int resNums[], int numRes, int coord, float transStep){$/;"	m	class:BackrubMinimizer	file:
compactTree	kstar/TreeEdge.java	/^    public void compactTree()$/;"	m	class:TreeEdge
comparator	kstar/TreeEdge.java	/^    private static ConformationComparator comparator;$/;"	f	class:TreeEdge	file:
compare	Tests/EnergyMatrixComparison.java	/^	static void compare(float[][][][][][] m1, float[][][][][][] m2)$/;"	m	class:EnergyMatrixComparison
compare	kstar/TreeEdge.java	/^        public int compare (Conf arg0, Conf arg1) {$/;"	m	class:TreeEdge.ConformationComparator
compareKStarScores	Miscellany/ComputeKStarScore.java	/^	public static String compareKStarScores(String sequence, String AStarFileName, String BWMStarFileName)$/;"	m	class:ComputeKStarScore
compareTo	BDAStar/BDAStarNode.java	/^    public int compareTo (BDAStarNode arg0) {$/;"	m	class:BDAStarNode
compareTo	BDAStar/BWMAStarNode.java	/^    public int compareTo(BWMAStarNode node)$/;"	m	class:BWMAStarNode
compareTo	BDAStar/CopyOfBWMAStarNode.java	/^    public int compareTo(CopyOfBWMAStarNode node)$/;"	m	class:CopyOfBWMAStarNode
compareTo	BDAStar/Position.java	/^    public int compareTo(Position p)$/;"	m	class:Position
compareTo	kstar/ConfPair.java	/^	public int compareTo(Object o) throws ClassCastException {$/;"	m	class:ConfPair
compareTo	kstar/MSMinBounds.java	/^		public int compareTo(Object otherObject) {$/;"	m	class:MSMinBounds.MSRotBounds
compareTo	kstar/OneMutation.java	/^	public int compareTo(Object otherObject){$/;"	m	class:OneMutation
compareTo	kstar/PrunedRotamers.java	/^	public int compareTo(Index3 o) {$/;"	m	class:Index3
compareTo	kstar/QueueNode.java	/^	public int compareTo(Object otherObject) throws ClassCastException{$/;"	m	class:QueueNode
compareTo	kstar/RyanComparable.java	/^	int compareTo(Object other);$/;"	m	interface:RyanComparable
compareTo	kstar/TreeEdge.java	/^        public int compareTo(Conf c) {$/;"	m	class:TreeEdge.Conf
complete	mpi/Request.java	/^  private Status complete(Status status) throws MPIException {$/;"	m	class:Request	file:
completeBonds	kstar/Amber96PolyPeptideResidue.java	/^	public void completeBonds() {$/;"	m	class:Amber96PolyPeptideResidue
completeBonds	kstar/Molecule.java	/^	public void completeBonds(int resnum) {$/;"	m	class:Molecule
completeXY	BranchDecomposition/BranchDecompositionH.java	/^	private void completeXY(LinkedHashSet<String> Lset, LinkedHashSet<String> Rset, BranchEdge D[],$/;"	m	class:BranchDecompositionH	file:
computeA	kstar/TreeEdge.java	/^    public void computeA(StrandRotamers sysLR, StrandRotamers ligRot, Molecule m, RotamerLibrary rl, RotamerLibrary grl, $/;"	m	class:TreeEdge
computeAAVolumes	kstar/RotamerLibrary.java	/^	public void computeAAVolumes(String volFileName) {$/;"	m	class:RotamerLibrary
computeAhelper	kstar/TreeEdge.java	/^    private void computeAhelper(int depth, int maxDepth, Object arrayM[], Object arrayLambda[], StrandRotamers sysLR, StrandRotamers ligRot,$/;"	m	class:TreeEdge	file:
computeBestRotEnergyBound	kstar/RotamerSearch.java	/^	public float computeBestRotEnergyBound(\/*int numTotalRotamers, int rotamerIndexOffset[]*\/) {$/;"	m	class:RotamerSearch
computeDihedDiff	kstar/SimpleMinimizer.java	/^	protected float computeDihedDiff(int diAtArray[], int atomList[],$/;"	m	class:SimpleMinimizer
computeDihedEnergy	kstar/SimpleMinimizer.java	/^	public double computeDihedEnergy() {$/;"	m	class:SimpleMinimizer
computeEVEnergy	kstar/CommucObj.java	/^	boolean computeEVEnergy = true;$/;"	f	class:CommucObj
computeEVEnergy	kstar/MutationManager.java	/^	boolean computeEVEnergy = true;$/;"	f	class:MutationManager
computeEVEnergy	kstar/RotamerSearch.java	/^	boolean computeEVEnergy = false;$/;"	f	class:RotamerSearch
computeEforState	BDAStar/EnergyFunction.java	/^    private double computeEforState(ProteinConformation c)$/;"	m	class:EnergyFunction	file:
computeEforState	kstar/TreeEdge.java	/^    private void computeEforState(int curState[],PairwiseEnergyMatrix eMatrix,Molecule m, InteractionGraph G, float en[]){$/;"	m	class:TreeEdge	file:
computeEnergyOfConformations	kstar/KSParser.java	/^	public void computeEnergyOfConformations(String s)$/;"	m	class:KSParser
computeEnergyOfOnlyRes	kstar/RotamerSearch.java	/^	private float computeEnergyOfOnlyRes(int molResNum, int pos, int[][] strandMut, Amber96ext resA96ff) {$/;"	m	class:RotamerSearch	file:
computeEnergyOfOnlyTemplate	kstar/RotamerSearch.java	/^	private float computeEnergyOfOnlyTemplate(int strandMut[][]) {$/;"	m	class:RotamerSearch	file:
computeEntropyEmatrixMaster	kstar/KSParser.java	/^	private void computeEntropyEmatrixMaster(int numRes, String runName, String matrixName, ParamSet sParams, boolean doMinimize, boolean minimizeBB, boolean doBackrubs, String backrubFile,$/;"	m	class:KSParser	file:
computeFset	kstar/TreeEdge.java	/^    public void computeFset(TreeNode tn){$/;"	m	class:TreeEdge
computeIndexInA	kstar/TreeEdge.java	/^    public int computeIndexInA(int curState[]){$/;"	m	class:TreeEdge
computeIntraRotEnergies	kstar/RotamerSearch.java	/^	private void computeIntraRotEnergies(int strandMut[][],	PairwiseEnergyMatrix retEMatrixMin,$/;"	m	class:RotamerSearch	file:
computeIntraRotEnergiesHelper	kstar/RotamerSearch.java	/^	private void computeIntraRotEnergiesHelper(int curPos\/*mutation residue specific*\/, int strResNum, int curAA, int curRot, int curStr, int totRotForCur, $/;"	m	class:RotamerSearch	file:
computeLambdaSets	kstar/BranchTree.java	/^	public void computeLambdaSets(TreeNode node)$/;"	m	class:BranchTree
computeLambdaSets	kstar/BranchTree.java	/^	public void computeLambdaSets(TreeNode node, boolean initMatrices)$/;"	m	class:BranchTree
computeOneDihedEnergyDiff	kstar/SimpleMinimizer.java	/^	public double computeOneDihedEnergyDiff(int strNumber, int dihedNumForCur, double dihedChange){$/;"	m	class:SimpleMinimizer
computeOneDihedEnergyDiffHelper	kstar/SimpleMinimizer.java	/^	public double computeOneDihedEnergyDiffHelper(int[] DNum, double[] DChange){$/;"	m	class:SimpleMinimizer
computeStrTorqueTrans	kstar/SimpleMinimizer.java	/^	public void computeStrTorqueTrans(int strNumber, double strTorque[], double strTrans[]){$/;"	m	class:SimpleMinimizer
computeTESS	kstar/TreeEdge.java	/^	public long computeTESS()$/;"	m	class:TreeEdge
computeTorque	kstar/SimpleMinimizer.java	/^	public double[] computeTorque(int diArray[]){$/;"	m	class:SimpleMinimizer
concatenateArrays	kstar/CloseLoop.java	/^    private int[] concatenateArrays(int[]... toMerge){$/;"	m	class:CloseLoop	file:
concatenateArrays	kstar/LoopClosureAdjustment.java	/^    private int[] concatenateArrays(int[]... toMerge){$/;"	m	class:LoopClosureAdjustment	file:
conf	kstar/ConfPair.java	/^	int[] conf;$/;"	f	class:ConfPair
conf	kstar/TreeEdge.java	/^        RotTypeMap[] conf;$/;"	f	class:TreeEdge.Conf
confSeq	kstar/CommucObj.java	/^	ConfInfo confSeq[] = null;$/;"	f	class:CommucObj
confSoFar	kstar/QueueNode.java	/^	public int confSoFar[];$/;"	f	class:QueueNode
conformation	kstar/TreeEdge.java	/^        int[] conformation;$/;"	f	class:TreeEdge.Conf
conformationTrees	BDAStar/BWMStarNode.java	/^    private ProteinConformationTrie conformationTrees;$/;"	f	class:BWMStarNode	file:
confsEnumerated	kstar/TreeEdge.java	/^    HashMap<String, Integer> confsEnumerated = new HashMap<String, Integer>();$/;"	f	class:TreeEdge
connect	kstar/Molecule.java	/^	private void connect(int atom1, int atom2){$/;"	m	class:Molecule	file:
connect12	kstar/Molecule.java	/^	private void connect12(int atom1, int atom2){$/;"	m	class:Molecule	file:
connect13	kstar/Molecule.java	/^	private void connect13(int atom1, int atom2, int atom3){$/;"	m	class:Molecule	file:
connect14	kstar/Molecule.java	/^	private void connect14(int atom1, int atom2, int atom3, int atom4){$/;"	m	class:Molecule	file:
connectResidues	kstar/Molecule.java	/^	public void connectResidues(int residueA, String atomAName, int residueB, String atomBName){$/;"	m	class:Molecule
connectResidues	kstar/RotamerSearch.java	/^	boolean connectResidues = true;$/;"	f	class:RotamerSearch
connected	kstar/Molecule.java	/^	int	connected[][] = null;		\/\/ 2D array of connected atoms$/;"	f	class:Molecule
connected12	kstar/Molecule.java	/^	int	connected12[] = null;		\/\/ 1D array of atoms directly connected$/;"	f	class:Molecule
connected13	kstar/Molecule.java	/^	int	connected13[] = null;		\/\/ 1D array of atoms 1-3 connected (1 atom between)$/;"	f	class:Molecule
connected14	kstar/Molecule.java	/^	int	connected14[] = null;		\/\/ 1D array of atoms 1-4 connected (2 atoms between)$/;"	f	class:Molecule
connectivity12Valid	kstar/Molecule.java	/^	boolean connectivity12Valid = false;	\/\/ Are connected and connected12 up to date$/;"	f	class:Molecule
connectivityValid	kstar/Molecule.java	/^	boolean connectivityValid = false;	\/\/ Are the connectivity arrays up to date$/;"	f	class:Molecule
constCoulomb	kstar/Amber96ext.java	/^	final double constCoulomb = 332.0;$/;"	f	class:Amber96ext
constRT	kstar/KSParser.java	/^		final double constRT = 1.9891\/1000.0 * 298.15;   \/\/ in kCal \/ kelvin-mole (the T value here should be consistent with T in EEF1)$/;"	f	class:KSParser
constRT	kstar/MutationManager.java	/^    final double constRT = 1.9891\/1000.0 * 298.15;   \/\/ in kCal \/ kelvin-mole (the T value here should be consistent with T in EEF1)$/;"	f	class:MutationManager
constRT	kstar/RotamerSearch.java	/^	public final static double constRT = 1.9891\/1000.0 * 298.15;   \/\/ in kCal \/ kelvin-mole (the T value here should be consistent with T in EEF1)$/;"	f	class:RotamerSearch
constructGraphH	BranchDecomposition/BranchDecompositionH.java	/^	private BranchTree constructGraphH(Object Sa[], BranchEdge D[]){$/;"	m	class:BranchDecompositionH	file:
constructStarGraph	BranchDecomposition/BranchDecompositionH.java	/^	private void constructStarGraph(LinkedHashSet<String> gvDup){$/;"	m	class:BranchDecompositionH	file:
containsKey	BDAStar/ConformationMap.java	/^	public boolean containsKey(Object key) {$/;"	m	class:ConformationMap
containsKey	BDAStar/ProteinConformationMap.java	/^	public boolean containsKey(Object key) {$/;"	m	class:ProteinConformationMap
containsKey	BDAStarTest/TestConformationMap.java	/^	public boolean containsKey(Object key) {$/;"	m	class:TestConformationMap
containsValue	BDAStar/ConformationMap.java	/^	public boolean containsValue(Object value) {$/;"	m	class:ConformationMap
containsValue	BDAStar/ProteinConformationMap.java	/^	public boolean containsValue(Object value) {$/;"	m	class:ProteinConformationMap
containsValue	BDAStarTest/TestConformationMap.java	/^	public boolean containsValue(Object value) {$/;"	m	class:TestConformationMap
contractV	BranchDecomposition/BranchDecompositionH.java	/^	private BranchTree contractV(BranchTree h, BranchNode v, BranchNode x, Object vNa[], BranchNode w, BranchNode y, Object wNa[], int xyInd[]){$/;"	m	class:BranchDecompositionH	file:
contractV	BranchDecomposition/BranchDecompositionH.java	/^	private BranchTree contractV(BranchTree h, BranchNode v, BranchNode x, Object vNa[], int xyInd[], BranchNode ln){$/;"	m	class:BranchDecompositionH	file:
coord	kstar/Atom.java	/^	float	coord[] = new float[3];		\/\/ atomic coordinates$/;"	f	class:Atom
coord	kstar/PartialStructureSwitch.java	/^        float coord[] = null;\/\/If this is not protein, all the coordinates are stored here.  Currently only the ligand can be handled this way.$/;"	f	class:PartialStructureSwitch.ChainSection
coord_from_poly_roots	kstar/TripeptideClosure.java	/^void coord_from_poly_roots(double roots[], double r_n1[], double r_a1[], double r_a3[], double r_c3[], double r_soln_n[][][], double r_soln_a[][][], double r_soln_c[][][])$/;"	m	class:TripeptideClosure
coordinate	kstar/SaveMolecule.java	/^	private String coordinate(float coord){$/;"	m	class:SaveMolecule	file:
coords	mpi/CartParms.java	/^	public int [] coords;$/;"	f	class:CartParms
copy	BDAStar/Conformation.java	/^	public Conformation copy();$/;"	m	interface:Conformation
copy	BDAStar/ProteinConformation.java	/^    public Conformation copy() {$/;"	m	class:ProteinConformation
copy	BDAStarTest/TestConformation.java	/^	public Conformation copy() {$/;"	m	class:TestConformation
copy	BDAStarTest/TestProteinConformation.java	/^    public Conformation copy() {$/;"	m	class:TestProteinConformation
copy	kstar/Atom.java	/^	public Atom copy(){$/;"	m	class:Atom
copy	kstar/PairwiseEnergyMatrix.java	/^	public PairwiseEnergyMatrix copy(){$/;"	m	class:PairwiseEnergyMatrix
copy	kstar/TreeEdge.java	/^        public Conf copy()$/;"	m	class:TreeEdge.Conf
copyBuffer	mpi/Intracomm.java	/^  private void copyBuffer(Object inbuf,$/;"	m	class:Intracomm	file:
copyParentRTM	kstar/TreeEdge.java	/^    private void copyParentRTM () {$/;"	m	class:TreeEdge	file:
copyPositionSet	BDAStar/AbstractConformation.java	/^    private Set<Position> copyPositionSet()$/;"	m	class:AbstractConformation	file:
correctSwitchedTemplates	kstar/RotamerSearch.java	/^        private void correctSwitchedTemplates(int strandMut[][], PairwiseEnergyMatrix retEMatrixMin, PairwiseEnergyMatrix retEMatrixMax){$/;"	m	class:RotamerSearch	file:
cos_alpha	kstar/TripeptideClosure.java	/^  double[] cos_alpha = new double[3], sin_alpha = new double[3], cos_theta = new double[3],$/;"	f	class:TripeptideClosure
cos_delta	kstar/TripeptideClosure.java	/^  double[] cos_delta = new double[4], sin_delta = new double[4];$/;"	f	class:TripeptideClosure
cos_eta	kstar/TripeptideClosure.java	/^  double[] cos_xi = new double[3], cos_eta = new double[3], sin_xi = new double[3], sin_eta = new double[3];$/;"	f	class:TripeptideClosure
cos_theta	kstar/TripeptideClosure.java	/^  double[] cos_alpha = new double[3], sin_alpha = new double[3], cos_theta = new double[3],$/;"	f	class:TripeptideClosure
cos_xi	kstar/TripeptideClosure.java	/^  double[] cos_xi = new double[3], cos_eta = new double[3], sin_xi = new double[3], sin_eta = new double[3];$/;"	f	class:TripeptideClosure
count	mpi/Request.java	/^  protected int count;$/;"	f	class:Request
countConfs	kstar/RotamerSearch.java	/^	private int countConfs(int numMutable, int numRes, \/*boolean ligPresent,*\/ $/;"	m	class:RotamerSearch	file:
countPrunedByMinDEESteric	kstar/RotamerSearch.java	/^	private BigInteger countPrunedByMinDEESteric(int numMutable, int numRes, \/*boolean ligPresent,*\/ $/;"	m	class:RotamerSearch	file:
countPrunedPairs	kstar/KSParser.java	/^	private int countPrunedPairs(boolean prunedPairs[][][][][][]){$/;"	m	class:KSParser	file:
countPrunedRot	kstar/KSParser.java	/^	private int countPrunedRot(PrunedRotamers<Boolean> prunedRot){$/;"	m	class:KSParser	file:
countRCs	kstar/StrandRCs.java	/^        public void countRCs(){\/\/Set up numRCs and RCOffsets$/;"	m	class:StrandRCs
countSave	mpi/Request.java	/^  protected int countSave, offsetSave ;$/;"	f	class:Request
countTrue	kstar/PerturbationSelector.java	/^    private int countTrue(boolean[] x){\/\/Count how many values in the boolean array are true$/;"	m	class:PerturbationSelector	file:
creat	mpi/Intracomm.java	/^  private native long creat(Group group);$/;"	m	class:Intracomm	file:
createAtomBuckets	kstar/VolModule.java	/^	private void createAtomBuckets() {$/;"	m	class:VolModule	file:
createConformationMap	BDAStar/BWMSolutionSpace.java	/^	public ConformationMap createConformationMap(Position p) {$/;"	m	class:BWMSolutionSpace
createConformationMap	BDAStar/SolutionSpace.java	/^	public ConformationMap createConformationMap(Position p);$/;"	m	interface:SolutionSpace
createConformationMap	BDAStarTest/TestSolutionSpace.java	/^	public ConformationMap createConformationMap(Position p) {$/;"	m	class:TestSolutionSpace
createConformationTrie	BDAStar/BWMStarNode.java	/^    private static void createConformationTrie(TreeNode node, BWMStarNode root, SolutionSpace space)$/;"	m	class:BWMStarNode	file:
createFromArray	BDAStar/BWMSolutionSpace.java	/^    public Conformation createFromArray (int[] curState, RotTypeMap[][] rtm) {$/;"	m	class:BWMSolutionSpace
createFromFiles	kstar/PrunedRotamers.java	/^	public static PrunedRotamers<Boolean> createFromFiles(String fileHeader)$/;"	m	class:PrunedRotamers
createResidue	kstar/Amber96PolyPeptideResidue.java	/^	public void createResidue( String residueName, int numberOfResidueAtoms ){$/;"	m	class:Amber96PolyPeptideResidue
createTrie	BDAStar/ProteinConformationTrie.java	/^    public static ProteinConformationTrie createTrie(SolutionSpace space, Position[] MSet, int index)$/;"	m	class:ProteinConformationTrie
cross	kstar/RotMatrix.java	/^        double[] cross(double[] vec1,double[] vec2){$/;"	m	class:RotMatrix
cross	kstar/RotMatrix.java	/^        float[] cross(float[] vec1,float[] vec2){$/;"	m	class:RotMatrix
crossProduct	kstar/SimpleMinimizer.java	/^	public double[] crossProduct(double a[], double b[]){$/;"	m	class:SimpleMinimizer
cterm	kstar/Residue.java	/^	boolean cterm =  false; \/\/Is a cterminal residue$/;"	f	class:Residue
curAA	kstar/RotInfo.java	/^	public int curAA;$/;"	f	class:RotInfo
curAANum	kstar/RotamerSearch.java	/^	int curAANum[] = null;	\/\/ for each residue in the system strand, the$/;"	f	class:RotamerSearch
curAANum	kstar/StericCheck.java	/^	int curAANum[] = null;$/;"	f	class:StericCheck
curAAType	kstar/StrandRotamers.java	/^	private String curAAType[] = null;    \/\/the three-letter code currently assumed by each residue in the strand$/;"	f	class:StrandRotamers	file:
curConf	kstar/MSAStar.java	/^	private int curConf[] = null;$/;"	f	class:MSAStar	file:
curConf	kstar/RotamerSearch.java	/^	int curConf[] = null;		\/\/ the current conformation returned by A*$/;"	f	class:RotamerSearch
curConfNum	kstar/RotamerSearch.java	/^	int curConfNum = 0;$/;"	f	class:RotamerSearch
curEc	kstar/BoundFlags.java	/^	double curEc;$/;"	f	class:BoundFlags
curEc	kstar/MSMinBounds.java	/^	double curEc;$/;"	f	class:MSMinBounds
curEw	kstar/DEE.java	/^	protected float curEw = 0.0f;	\/\/the max allowable difference from the GMEC (checkSum<=curEw should not be pruned)$/;"	f	class:DEE
curExpansion	kstar/MSAStar.java	/^	private ExpansionQueue curExpansion;$/;"	f	class:MSAStar	file:
curFront	kstar/ExpansionQueue.java	/^	public QueueNode curFront;$/;"	f	class:ExpansionQueue
curMaxE	kstar/MutationManager.java	/^	float curMaxE = -(float)Math.pow(10,30);$/;"	f	class:MutationManager
curMut	kstar/CommucObj.java	/^	public int curMut = -1;$/;"	f	class:CommucObj
curNum	kstar/ParamSet.java	/^	private int curNum = 0; \/\/the number of used positions in the arrays$/;"	f	class:ParamSet	file:
curParam	kstar/Perturbation.java	/^    float curParam = 0;\/\/The current parameter value of the perturbation.  This is changed by applyPerturbation and may be only implemented in the actualCoordinates$/;"	f	class:Perturbation
curPertState	kstar/StrandRCs.java	/^       private int curPertState[];\/\/Which perturbation state each residue is in$/;"	f	class:StrandRCs	file:
curPos	kstar/RotInfo.java	/^	public int curPos;$/;"	f	class:RotInfo
curRC	kstar/StrandRCs.java	/^       private int curRC[];\/\/Which RC each residue is in$/;"	f	class:StrandRCs	file:
curRot	kstar/RotInfo.java	/^	public int curRot;$/;"	f	class:RotInfo
curRotNum	kstar/StrandRotamers.java	/^	protected int curRotNum[] = null;     \/\/the rotamer number currently assumed by each residue in the strand$/;"	f	class:StrandRotamers
curState	kstar/Perturbation.java	/^    int curState = 0;\/\/The current state of the perturbation (index in minParams, maxParams)$/;"	f	class:Perturbation
curStrForMatrix	kstar/CommucObj.java	/^	public int curStrForMatrix;$/;"	f	class:CommucObj
curStrForMatrix	kstar/MutationManager.java	/^	private int curStrForMatrix;$/;"	f	class:MutationManager	file:
curStrRotNum	kstar/RotamerSearch.java	/^	int curStrRotNum[] = null;$/;"	f	class:RotamerSearch
currentMutation	kstar/CommucObj.java	/^	String currentMutation[] = null;$/;"	f	class:CommucObj
cutSet	BranchDecomposition/MinVertexCut.java	/^	private LinkedHashSet<String> cutSet = null;$/;"	f	class:MinVertexCut	file:
d	BranchDecomposition/BreadthFirstSearch.java	/^	private int d[] = null; \/\/the depth of each node$/;"	f	class:BreadthFirstSearch	file:
dArray	kstar/RyanQuickSort.java	/^	Object dArray[] = null;$/;"	f	class:RyanQuickSort
dCpiRef	kstar/EEF1.java	/^	float dCpiRef[] = new float[numAtTypesEEF1];$/;"	f	class:EEF1
dGiFree	kstar/EEF1.java	/^	float dGiFree[] = new float[numAtTypesEEF1];$/;"	f	class:EEF1
dGiRef	kstar/EEF1.java	/^	float dGiRef[] = new float[numAtTypesEEF1];$/;"	f	class:EEF1
dHiRef	kstar/EEF1.java	/^	float dHiRef[] = new float[numAtTypesEEF1];$/;"	f	class:EEF1
dataDir	kstar/EnvironmentVars.java	/^	static String dataDir = ".\/";$/;"	f	class:EnvironmentVars
dataType	kstar/ThreadMessage.java	/^	public int dataType; $/;"	f	class:ThreadMessage
debug	BranchDecomposition/BranchDecompositionH.java	/^	private static final boolean debug = false;$/;"	f	class:BranchDecompositionH	file:
debug	kstar/Amber96ext.java	/^	public static final boolean debug = false;$/;"	f	class:Amber96ext
debug	kstar/Molecule.java	/^	public static final boolean debug = false;$/;"	f	class:Molecule
debug	kstar/RotamerLibrary.java	/^	public static final boolean debug = false;$/;"	f	class:RotamerLibrary
debug	kstar/RotamerSearch.java	/^	public static final boolean debug = true;$/;"	f	class:RotamerSearch
debug	kstar/SimpleMinimizer.java	/^	boolean debug = false;$/;"	f	class:SimpleMinimizer
debug	kstar/StrandRotamers.java	/^	public static final boolean debug = false;$/;"	f	class:StrandRotamers
debugPrint	kstar/TreeEdge.java	/^    private void debugPrint(Object s)$/;"	m	class:TreeEdge	file:
debugWriter	kstar/CloseLoop.java	/^	public KSParser debugWriter = null;$/;"	f	class:CloseLoop
deepCopy	BranchDecomposition/BranchTree.java	/^	public BranchTree deepCopy(){$/;"	m	class:BranchTree
deepCopy	kstar/KSParser.java	/^	static public Object deepCopy(Object oldObj) throws Exception {$/;"	m	class:KSParser
deepCopy	kstar/MPItoThread.java	/^	static public Object deepCopy(Object oldObj) throws Exception {$/;"	m	class:MPItoThread
deepCopy	kstar/TreeEdge.java	/^    public TreeEdge deepCopy(){$/;"	m	class:TreeEdge
defaultMaxParams	kstar/Backrub.java	/^    static float defaultMaxParams[] = {2.5f};$/;"	f	class:Backrub
defaultMaxParams	kstar/Shear.java	/^    static float defaultMaxParams[] = {2.5f};$/;"	f	class:Shear
defaultMinParams	kstar/Backrub.java	/^    static float defaultMinParams[] = {-2.5f};$/;"	f	class:Backrub
defaultMinParams	kstar/Shear.java	/^    static float defaultMinParams[] = {-2.5f};$/;"	f	class:Shear
deg2rad	kstar/TripeptideClosure.java	/^  double deg2rad = pi\/180;$/;"	f	class:TripeptideClosure
deg_pol	kstar/TripeptideClosure.java	/^  int deg_pol = 16;$/;"	f	class:TripeptideClosure
delete	BDAStar/AbstractConformation.java	/^    public void delete (Position p) {$/;"	m	class:AbstractConformation
delete	BDAStar/Conformation.java	/^    public void delete (Position p);$/;"	m	interface:Conformation
delete	kstar/ExpansionQueue.java	/^	 public void delete(QueueNode delNode){$/;"	m	class:ExpansionQueue
deleteAtom	kstar/Molecule.java	/^	public int deleteAtom(String atomName, int moleculeResidueNumber){$/;"	m	class:Molecule
deleteAtom	kstar/Molecule.java	/^	public int deleteAtom(int moleculeAtomNumber){$/;"	m	class:Molecule
deleteAtom	kstar/Molecule.java	/^	public int deleteAtom(int moleculeResidueNumber, int residueAtomNumber){$/;"	m	class:Molecule
deleteAtom	kstar/Molecule.java	/^	public int deleteAtom(int strandNumber, int strandResidueNumber, int residueAtomNumber){$/;"	m	class:Molecule
deleteAtom	kstar/Residue.java	/^	public int deleteAtom(int atomNumber){$/;"	m	class:Residue
deleteAtom	kstar/Strand.java	/^	public int deleteAtom(int residueNumber, int atomNumber){$/;"	m	class:Strand
deleteBond	kstar/Atom.java	/^	public void deleteBond(int j){$/;"	m	class:Atom
deleteBondBetween	kstar/Molecule.java	/^	public void deleteBondBetween(int atomi, int atomj){$/;"	m	class:Molecule
deleteBondTo	kstar/Atom.java	/^	public void deleteBondTo(int atomj){$/;"	m	class:Atom
deleteConformation	BDAStar/BDAStarNode.java	/^    private void deleteConformation(Conformation c, Position[] positions, int index)$/;"	m	class:BDAStarNode	file:
deleteConformation	BDAStar/BDAStarNode.java	/^    public void deleteConformation(Conformation c)$/;"	m	class:BDAStarNode
deleteEdge	BranchDecomposition/BranchNode.java	/^	public void deleteEdge(){$/;"	m	class:BranchNode
deleteEdge	BranchDecomposition/BranchTree.java	/^	public void deleteEdge(int index){$/;"	m	class:BranchTree
deleteEdge	kstar/InteractionGraph.java	/^	public void deleteEdge (int x, int y){$/;"	m	class:InteractionGraph
deleteEdges	BranchDecomposition/BranchTree.java	/^	private void deleteEdges(int index){$/;"	m	class:BranchTree	file:
deleteFile	kstar/MutationManager.java	/^	private void deleteFile(String file) {$/;"	m	class:MutationManager	file:
deleteLast	BDAStar/AbstractConformation.java	/^    public void deleteLast () {$/;"	m	class:AbstractConformation
deleteLast	BDAStar/Conformation.java	/^    public void deleteLast();$/;"	m	interface:Conformation
deleteNode	BranchDecomposition/BranchTree.java	/^	public void deleteNode(int index){$/;"	m	class:BranchTree
deletePositions	BDAStar/AbstractConformation.java	/^    public Conformation deletePositions(Collection<Position> toDelete)$/;"	m	class:AbstractConformation
deletePositions	BDAStar/Conformation.java	/^	public Conformation deletePositions(Collection<Position> toDelete);$/;"	m	interface:Conformation
deleteResidue	kstar/Molecule.java	/^	public int deleteResidue(int moleculeResidueNumber){$/;"	m	class:Molecule
deleteResidue	kstar/Strand.java	/^	public int deleteResidue(int residueNumber){$/;"	m	class:Strand
deleteStrand	kstar/Molecule.java	/^	public int deleteStrand(int strandNumber){$/;"	m	class:Molecule
delta	kstar/TripeptideClosure.java	/^  double[] delta = new double[4], xi = new double[3], eta = new double [3],$/;"	f	class:TripeptideClosure
denCutoff	kstar/RamachandranChecker.java	/^    static float denCutoff = 0.02f;\/\/Cutoff density for being allowed$/;"	f	class:RamachandranChecker
designIndex	BDAStar/ProteinPosition.java	/^	public int designIndex;$/;"	f	class:ProteinPosition
designIndexToStrandIndex	BDAStar/BWMSolutionSpace.java	/^    private int[] designIndexToStrandIndex;$/;"	f	class:BWMSolutionSpace	file:
designIndexToStrandResidueIndex	BDAStar/BWMSolutionSpace.java	/^    private int[] designIndexToStrandResidueIndex;$/;"	f	class:BWMSolutionSpace	file:
dest	mpi/Request.java	/^  protected int dest;$/;"	f	class:Request
determineBonds	kstar/Molecule.java	/^	public void determineBonds(){$/;"	m	class:Molecule
determineObj	kstar/ThreadMessage.java	/^	public Object determineObj(Object obj, int dataType, int offset, int count){$/;"	m	class:ThreadMessage
dielectConst	kstar/CommucObj.java	/^	double dielectConst = 1.0;$/;"	f	class:CommucObj
dielectConst	kstar/KSParser.java	/^		double dielectConst = 1.0;$/;"	f	class:KSParser
dielectConst	kstar/MutationManager.java	/^	double dielectConst = 1.0;$/;"	f	class:MutationManager
dielectConst	kstar/RotamerSearch.java	/^	double dielectConst = 1.0; \/\/the dielectric constant$/;"	f	class:RotamerSearch
dielectric	kstar/Amber96ext.java	/^	double dielectric = 1.0;	$/;"	f	class:Amber96ext
diffFact	kstar/CommucObj.java	/^	int diffFact = -1;$/;"	f	class:CommucObj
diffFact	kstar/MutationManager.java	/^	int diffFact = -1;$/;"	f	class:MutationManager
difference	mpi/Group.java	/^  private static native long difference(Group group1, Group group2) ;$/;"	m	class:Group	file:
dihedAtomType1	kstar/Amber96ext.java	/^	int[]		dihedAtomType1 = null;$/;"	f	class:Amber96ext
dihedAtomType2	kstar/Amber96ext.java	/^	int[]		dihedAtomType2 = null;$/;"	f	class:Amber96ext
dihedAtomType3	kstar/Amber96ext.java	/^	int[]		dihedAtomType3 = null;$/;"	f	class:Amber96ext
dihedAtomType4	kstar/Amber96ext.java	/^	int[]		dihedAtomType4 = null;$/;"	f	class:Amber96ext
dihedPN	kstar/Amber96ext.java	/^	int[] dihedPN = null; \/\/ Periodicity$/;"	f	class:Amber96ext
dihedPhase	kstar/Amber96ext.java	/^	float[] dihedPhase = null; \/\/ Phase$/;"	f	class:Amber96ext
dihedTerm1	kstar/Amber96ext.java	/^	float[] dihedTerm1 = null; \/\/ (PK\/IDIVF)$/;"	f	class:Amber96ext
dihedralAngleTerms	kstar/Amber96ext.java	/^	double bondStretchTerms[], angleBendTerms[], dihedralAngleTerms[];$/;"	f	class:Amber96ext
dihedralAtomNames	kstar/RotamerLibrary.java	/^	private String dihedralAtomNames[][][];  \/\/ Names of atoms involved in the dihedrals for each amino acid$/;"	f	class:RotamerLibrary	file:
dihedrals_from_poly_roots	kstar/TripeptideClosure.java	/^void dihedrals_from_poly_roots(double roots[], double r_n1[], double r_a1[], double r_a3[], double r_c3[], double r_soln_n[][][], double r_soln_a[][][], double r_soln_c[][][])$/;"	m	class:TripeptideClosure
dims	mpi/CartParms.java	/^	public int [] dims;$/;"	f	class:CartParms
dirty	kstar/TreeEdge.java	/^        private boolean dirty = false;$/;"	f	class:TreeEdge.LazyHeap	file:
displacements	mpi/Datatype.java	/^  protected int displacements[] ;$/;"	f	class:Datatype
dist	kstar/CommucObj.java	/^	float dist = 0.0f;$/;"	f	class:CommucObj
dist	kstar/MutationManager.java	/^	float dist = 0.0f;$/;"	f	class:MutationManager
distDepDielect	kstar/Amber96ext.java	/^	boolean distDepDielect = true;$/;"	f	class:Amber96ext
distDepDielect	kstar/CommucObj.java	/^	boolean distDepDielect = true;$/;"	f	class:CommucObj
distDepDielect	kstar/KSParser.java	/^		boolean distDepDielect = true;$/;"	f	class:KSParser
distDepDielect	kstar/MutationManager.java	/^	boolean distDepDielect = true;$/;"	f	class:MutationManager
distDepDielect	kstar/RotamerSearch.java	/^	boolean distDepDielect = true; \/\/distance-dependent dielectric$/;"	f	class:RotamerSearch
distance	kstar/Atom.java	/^	public double distance(Atom atom){$/;"	m	class:Atom
distrDACS	kstar/CommucObj.java	/^	boolean distrDACS = false;$/;"	f	class:CommucObj
distrDACS	kstar/MutationManager.java	/^	boolean distrDACS = false;$/;"	f	class:MutationManager
distrDEE	kstar/CommucObj.java	/^	boolean distrDEE = false;$/;"	f	class:CommucObj
distrDEE	kstar/DEE.java	/^	boolean distrDEE = false;$/;"	f	class:DEE
distrDEE	kstar/MutationManager.java	/^	boolean distrDEE = false;$/;"	f	class:MutationManager
doAStar	kstar/MSAStar.java	/^	public int[] doAStar (boolean run1, int numMaxChanges, int nodesDefault[], boolean prunedNodes[],$/;"	m	class:MSAStar
doAStarGMEC	kstar/RotamerSearch.java	/^	public float doAStarGMEC(String fileName, boolean searchComputeEVEnergy, $/;"	m	class:RotamerSearch
doAStarGMECHelper	kstar/RotamerSearch.java	/^	private float doAStarGMECHelper(int numMutable, int strandMut[][], String fileName, $/;"	m	class:RotamerSearch	file:
doBackrubs	kstar/CommucObj.java	/^	boolean doBackrubs = false;$/;"	f	class:CommucObj
doBackrubs	kstar/MutationManager.java	/^	boolean doBackrubs = false;$/;"	f	class:MutationManager
doCompDistSC	kstar/RotamerSearch.java	/^	private float[][] doCompDistSC(int numMutable, int strandMut[][]){$/;"	m	class:RotamerSearch	file:
doCompMinDEEIntervals	kstar/RotamerSearch.java	/^	public void doCompMinDEEIntervals(int numMutable, int strandMut[][], PrunedRotamers<Boolean> prunedRotAtRes,$/;"	m	class:RotamerSearch
doDACS	kstar/KSParser.java	/^	private void doDACS(int numMutable, RotamerSearch rs, int strandMut[][],$/;"	m	class:KSParser	file:
doDihedE	kstar/CommucObj.java	/^	boolean doDihedE = false;$/;"	f	class:CommucObj
doDihedE	kstar/KSParser.java	/^		boolean doDihedE = false;$/;"	f	class:KSParser
doDihedE	kstar/MutationManager.java	/^	boolean doDihedE = false;$/;"	f	class:MutationManager
doDihedE	kstar/RotamerSearch.java	/^	boolean doDihedE = false; 		\/\/ if true dihedral energies are computed and used$/;"	f	class:RotamerSearch
doDihedEnergy	kstar/SimpleMinimizer.java	/^	boolean doDihedEnergy = false;$/;"	f	class:SimpleMinimizer
doDistrDACSMaster	kstar/KSParser.java	/^	private void doDistrDACSMaster(String runName, int numMutable, RotamerSearch rs, int strandMut[][],$/;"	m	class:KSParser	file:
doDistrDACSSlave	kstar/KSParser.java	/^	private CommucObj doDistrDACSSlave(CommucObj cObj) {$/;"	m	class:KSParser	file:
doDistrDEEMaster	kstar/KSParser.java	/^	private void doDistrDEEMaster(int numMutable, int strandMut[][],$/;"	m	class:KSParser	file:
doDistrDEESlave	kstar/KSParser.java	/^	private CommucObj doDistrDEESlave(CommucObj cObj) {$/;"	m	class:KSParser	file:
doEigen	BranchDecomposition/BranchDecompositionH.java	/^	private void doEigen(BranchNode pn, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy){$/;"	m	class:BranchDecompositionH	file:
doGenBackbones	kstar/RotamerSearch.java	/^	public void doGenBackbones(String runName, int numMutable, int strandMut[][], double theta, double alpha,$/;"	m	class:RotamerSearch
doGenBackbonesHelper	kstar/RotamerSearch.java	/^	private void doGenBackbonesHelper(String runName, int numMutable, int strandMut[][], double theta, double alpha, $/;"	m	class:RotamerSearch	file:
doGenBackbonesRandHelper	kstar/RotamerSearch.java	/^	private void doGenBackbonesRandHelper(String runName, int numMutable, int strandMut[][], double theta,$/;"	m	class:RotamerSearch	file:
doIMinDEE	kstar/DEE.java	/^	boolean doIMinDEE = false;$/;"	f	class:DEE
doMinimization	kstar/CommucObj.java	/^	boolean doMinimization = true;$/;"	f	class:CommucObj
doMinimization	kstar/MutationManager.java	/^	boolean doMinimization = true;$/;"	f	class:MutationManager
doMinimization	kstar/RotamerSearch.java	/^	boolean doMinimization = false;$/;"	f	class:RotamerSearch
doMinimize	kstar/DEE.java	/^	boolean doMinimize = false;$/;"	f	class:DEE
doPerturbationMotion	kstar/Backrub.java	/^    public boolean doPerturbationMotion(float param){\/\/Apply the perturbation$/;"	m	class:Backrub
doPerturbationMotion	kstar/FullStructureSwitch.java	/^    public boolean doPerturbationMotion(float param){$/;"	m	class:FullStructureSwitch
doPerturbationMotion	kstar/LoopClosureAdjustment.java	/^    public boolean doPerturbationMotion(float param){$/;"	m	class:LoopClosureAdjustment
doPerturbationMotion	kstar/PartialStructureSwitch.java	/^    public boolean doPerturbationMotion(float param){$/;"	m	class:PartialStructureSwitch
doPerturbationMotion	kstar/Perturbation.java	/^    abstract public boolean doPerturbationMotion(float param);$/;"	m	class:Perturbation
doPerturbationMotion	kstar/ProlineFlip.java	/^    public boolean doPerturbationMotion(float param){$/;"	m	class:ProlineFlip
doPerturbationMotion	kstar/Shear.java	/^    public boolean doPerturbationMotion(float param){\/\/Apply the perturbation$/;"	m	class:Shear
doPerturbationStep	kstar/PMinimizer.java	/^        private void doPerturbationStep (int pertNum, float stepSize){\/\/Calculates and applies the next perturbation parameter value in the steepest-descent minimization$/;"	m	class:PMinimizer	file:
doPerturbations	kstar/CommucObj.java	/^        boolean doPerturbations;$/;"	f	class:CommucObj
doPerturbations	kstar/DEE.java	/^        boolean doPerturbations = false;$/;"	f	class:DEE
doPerturbations	kstar/MSAStar.java	/^        boolean doPerturbations;$/;"	f	class:MSAStar
doPerturbations	kstar/MutationManager.java	/^        boolean doPerturbations;$/;"	f	class:MutationManager
doPerturbations	kstar/RotamerSearch.java	/^        boolean doPerturbations;\/\/Indicates DEEPer$/;"	f	class:RotamerSearch
doPerturbations	kstar/StericCheck.java	/^        boolean doPerturbations = false;$/;"	f	class:StericCheck
doSinglePairE	kstar/KSParser.java	/^	public void doSinglePairE(String s, ParamSet sParams) {$/;"	m	class:KSParser
doSolvationE	kstar/Amber96ext.java	/^	boolean doSolvationE = false; \/\/should solvation energies be computed$/;"	f	class:Amber96ext
doSolvationE	kstar/CommucObj.java	/^	boolean doSolvationE = false;$/;"	f	class:CommucObj
doSolvationE	kstar/KSParser.java	/^		boolean doSolvationE = false;$/;"	f	class:KSParser
doSolvationE	kstar/MutationManager.java	/^	boolean doSolvationE = false;$/;"	f	class:MutationManager
doSolvationE	kstar/RotamerSearch.java	/^	boolean doSolvationE = false; \/\/determines if solvation energies should be computed$/;"	f	class:RotamerSearch
doSparse	kstar/PairwiseEnergyMatrix.java	/^        boolean doSparse = false; \/\/ SJ, for keeping track of when to use sparse energies$/;"	f	class:PairwiseEnergyMatrix
doSparse	kstar/ReducedEnergyMatrix.java	/^      private boolean doSparse = false; \/\/SJ, added to keep track of sparse graphs$/;"	f	class:ReducedEnergyMatrix	file:
doStrTransRot	kstar/BackrubMinimizer.java	/^	private void doStrTransRot(int strNumber){$/;"	m	class:BackrubMinimizer	file:
doStrTransRot	kstar/SimpleMinimizer.java	/^	protected void doStrTransRot(int strNumber, double strTorque[], double strTrans[], double RotStep, double TransStep, double MaxTrans){$/;"	m	class:SimpleMinimizer
dot	kstar/RotMatrix.java	/^         double dot(double[] vec1, double[] vec2){$/;"	m	class:RotMatrix
dot	kstar/RotMatrix.java	/^        float dot(float[] vec1, float[] vec2){$/;"	m	class:RotMatrix
dotProduct	kstar/SimpleMinimizer.java	/^	public double dotProduct(double a[], double b[]){$/;"	m	class:SimpleMinimizer
doubleArraySize	kstar/Amber96ext.java	/^	private String [] doubleArraySize(String a[]){$/;"	m	class:Amber96ext	file:
doubleArraySize	kstar/Amber96ext.java	/^	private float [] doubleArraySize(float a[]){$/;"	m	class:Amber96ext	file:
doubleArraySize	kstar/Amber96ext.java	/^	private int [] doubleArraySize(int a[]){$/;"	m	class:Amber96ext	file:
doubleArraySize	kstar/Amber96ext.java	/^	private int [][] doubleArraySize(int a[][]){$/;"	m	class:Amber96ext	file:
doubleSize	BranchDecomposition/BranchTree.java	/^	private BranchEdge [] doubleSize(BranchEdge b[]){$/;"	m	class:BranchTree	file:
doubleSize	BranchDecomposition/BranchTree.java	/^	private BranchNode [] doubleSize(BranchNode b[]){$/;"	m	class:BranchTree	file:
dup	mpi/Comm.java	/^  protected native long dup();$/;"	m	class:Comm
e	kstar/InteractionGraph.java	/^	private boolean e[][] = null; \/\/the edge set$/;"	f	class:InteractionGraph	file:
eMatrix	BDAStar/EnergyFunction.java	/^    private PairwiseEnergyMatrix eMatrix;$/;"	f	class:EnergyFunction	file:
eMatrix	kstar/PairwiseEnergyMatrix.java	/^        public float eMatrix[][][][][][] = null;$/;"	f	class:PairwiseEnergyMatrix
eRef	kstar/CommucObj.java	/^	float eRef[][] = null;$/;"	f	class:CommucObj
eRef	kstar/MutationManager.java	/^	float[][] eRef = null;$/;"	f	class:MutationManager
eRefMatrix	kstar/MutationManager.java	/^	String eRefMatrix;$/;"	f	class:MutationManager
edgeExists	BranchDecomposition/BranchTree.java	/^	public boolean edgeExists(int i1, int i2){$/;"	m	class:BranchTree
edgeExists	kstar/InteractionGraph.java	/^	public boolean edgeExists(int x, int y){$/;"	m	class:InteractionGraph
edges	mpi/GraphParms.java	/^	public int [] edges;$/;"	f	class:GraphParms
eef1parms	kstar/Amber96ext.java	/^	EEF1 eef1parms = null;$/;"	f	class:Amber96ext
elapsedTime	kstar/CommucObj.java	/^	int elapsedTime = 0; \/\/ timing info (in seconds)$/;"	f	class:CommucObj
elementNumber	kstar/Atom.java	/^	int	elementNumber=0;					\/\/ element number$/;"	f	class:Atom
elementType	kstar/Atom.java	/^	String elementType="";		\/\/ the element symbol$/;"	f	class:Atom
elements	mpi/Status.java	/^  int elements; $/;"	f	class:Status
eliminatedRot	kstar/StericCheck.java	/^	boolean eliminatedRot[] = null;$/;"	f	class:StericCheck
eliminatedRotAtPos	kstar/DEE.java	/^	protected PrunedRotamers<Boolean> eliminatedRotAtPos = null;$/;"	f	class:DEE
eliminatedRotAtRes	kstar/RotamerSearch.java	/^	PrunedRotamers<Boolean> eliminatedRotAtRes = null;	\/\/ rotamers pruned by MinDEE$/;"	f	class:RotamerSearch
emptyConformation	BDAStar/BDAStarNode.java	/^    private Conformation emptyConformation;$/;"	f	class:BDAStarNode	file:
emptyConformation	BDAStar/BWMStarNode.java	/^    private Conformation emptyConformation;$/;"	f	class:BWMStarNode	file:
energy	kstar/ConfPair.java	/^	float[] energy;$/;"	f	class:ConfPair
energy	kstar/TreeEdge.java	/^        double energy;$/;"	f	class:TreeEdge.Conf
energy	kstar/TreeEdge.java	/^        double energy;$/;"	f	class:TreeEdge.RightConf
energy	kstar/TreeEdge.java	/^    private float energy[] = null; \/\/the computed energy for each state combination in A$/;"	f	class:TreeEdge	file:
energyEvalBB	kstar/Residue.java	/^	private boolean energyEvalBB = true;	\/\/ Should the residue backbone be included in computing energy$/;"	f	class:Residue	file:
energyEvalSC	kstar/Residue.java	/^	private boolean energyEvalSC = true;	\/\/ Should the residue side-chain be included in computing energy$/;"	f	class:Residue	file:
energyFunction	BDAStar/BWMSolutionSpace.java	/^    private EnergyFunction energyFunction;$/;"	f	class:BWMSolutionSpace	file:
energyFunction	BDAStar/ProteinConformation.java	/^    private static EnergyFunction energyFunction;$/;"	f	class:ProteinConformation	file:
energyFunction	BDAStarTest/TestProteinConformation.java	/^    private static EnergyFunction energyFunction;$/;"	f	class:TestProteinConformation	file:
energyMatrix	kstar/TreeEdge.java	/^    private static PairwiseEnergyMatrix energyMatrix;$/;"	f	class:TreeEdge	file:
energyTol	kstar/PMinimizer.java	/^        double energyTol = 0.01;\/\/This is about the roundoff energy in many cases...when we are getting energy changes less than this$/;"	f	class:PMinimizer
entropy	kstar/EnvironmentVars.java	/^	private static double[] entropy = null;$/;"	f	class:EnvironmentVars	file:
entropyComp	kstar/CommucObj.java	/^	boolean entropyComp = false; \/\/this *must* be false for the pairwise matrix energy computation$/;"	f	class:CommucObj
entropyComp	kstar/MutationManager.java	/^	boolean entropyComp = false; \/\/this *must* be false for the pairwise matrix energy computation$/;"	f	class:MutationManager
entropyScaling	kstar/EnvironmentVars.java	/^	public static double entropyScaling = 0;$/;"	f	class:EnvironmentVars
entrySet	BDAStar/ConformationMap.java	/^	public Set<java.util.Map.Entry<Choice, ProteinConformationTrie>> entrySet() {$/;"	m	class:ConformationMap
epsilon	kstar/CommucObj.java	/^	float epsilon = 0.03f;$/;"	f	class:CommucObj
epsilon	kstar/MutationManager.java	/^	float epsilon = 0.03f;  \/\/ The epsilon used in intra-mutation pruning$/;"	f	class:MutationManager
equals	BDAStar/Position.java	/^    public boolean equals(Object o)$/;"	m	class:Position
equals	BDAStar/ProteinChoice.java	/^    public boolean equals(Object o)$/;"	m	class:ProteinChoice
equals	BDAStar/ProteinConformation.java	/^    public boolean equals(Object o)$/;"	m	class:ProteinConformation
equals	BDAStar/ProteinPosition.java	/^    public boolean equals(Object o)$/;"	m	class:ProteinPosition
equals	BDAStarTest/TestConformation.java	/^    public boolean equals(Object o)$/;"	m	class:TestConformation
equals	BDAStarTest/TestProteinConformation.java	/^    public boolean equals(Object o)$/;"	m	class:TestProteinConformation
equals	kstar/RotTypeMap.java	/^	public boolean equals(Object o)$/;"	m	class:RotTypeMap
equals	kstar/TreeEdge.java	/^    public boolean equals (Conf other)$/;"	m	class:TreeEdge
equivAtoms	kstar/Amber96ext.java	/^	int[][] equivAtoms = null;$/;"	f	class:Amber96ext
errorhandler_get	mpi/Comm.java	/^  private native long errorhandler_get();$/;"	m	class:Comm	file:
establishConnectivity	kstar/Molecule.java	/^	public void establishConnectivity(boolean just12){$/;"	m	class:Molecule
eta	kstar/TripeptideClosure.java	/^  double[] delta = new double[4], xi = new double[3], eta = new double [3],$/;"	f	class:TripeptideClosure
evalpoly	kstar/SturmSolver.java	/^    double evalpoly(int ord, double coef[], double x)$/;"	m	class:SturmSolver
evaluateConformation	kstar/TreeEdge.java	/^    private double evaluateConformation(RotTypeMap[] curState, PairwiseEnergyMatrix energyMatrix)$/;"	m	class:TreeEdge	file:
excl	mpi/Group.java	/^  private native long excl(int [] ranks) ;$/;"	m	class:Group	file:
exe	kstar/MPItoThread.java	/^	static ExecutorService exe = null;$/;"	f	class:MPItoThread
exp	kstar/ExpFunction.java	/^	BigDecimal exp = new BigDecimal("2.71828182845904523536"); \/\/Euler's number to 20 decimal digits$/;"	f	class:ExpFunction
exp	kstar/ExpFunction.java	/^	public BigDecimal exp(double x){$/;"	m	class:ExpFunction
expandMolecule	kstar/Molecule.java	/^	private void expandMolecule(int numResidues, int numAtoms, int strandPos, int residuePos){$/;"	m	class:Molecule	file:
extent	mpi/Datatype.java	/^  private native int extent();$/;"	m	class:Datatype	file:
extract	BDAStar/AbstractConformation.java	/^    public Conformation extract(Set<? extends Position> target)$/;"	m	class:AbstractConformation
extract	BDAStar/Conformation.java	/^    public Conformation extract(Set<? extends Position> target);$/;"	m	interface:Conformation
fScore	kstar/QueueNode.java	/^	public double fScore;$/;"	f	class:QueueNode
factorial	kstar/KSParser.java	/^	public static BigInteger factorial(int n){$/;"	m	class:KSParser
ffAssigned	kstar/Residue.java	/^	boolean ffAssigned = false;	\/\/ Are forcefield types assigned for atoms in this residue$/;"	f	class:Residue
fillConf	kstar/TreeEdge.java	/^        public void fillConf(RotTypeMap[] bestPosAARot)$/;"	m	class:TreeEdge.Conf
fillRotTypeMap	kstar/TreeEdge.java	/^        public void fillRotTypeMap(RotTypeMap[] bestPosAARot)$/;"	m	class:TreeEdge.Conf
fillRotTypeMap	kstar/TreeEdge.java	/^        public void fillRotTypeMap(RotTypeMap[] bestPosAARot)$/;"	m	class:TreeEdge.RightConf
finalize	mpi/Datatype.java	/^  public void finalize() throws MPIException {$/;"	m	class:Datatype
finalize	mpi/Group.java	/^  public void finalize() throws MPIException {$/;"	m	class:Group
finalize	mpi/Op.java	/^  public void finalize() throws MPIException {$/;"	m	class:Op
finalize	mpi/Status.java	/^  public void finalize() throws MPIException {$/;"	m	class:Status
find23sepHelper	BranchDecomposition/BranchDecompositionH.java	/^	private boolean find23sepHelper(BranchTree H, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy, BranchEdge D[], boolean do2sep) {$/;"	m	class:BranchDecompositionH	file:
find2sep	BranchDecomposition/BranchDecompositionH.java	/^	private boolean find2sep(BranchNode pn, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy){$/;"	m	class:BranchDecompositionH	file:
find2sepHelper	BranchDecomposition/BranchDecompositionH.java	/^	private boolean find2sepHelper(BranchTree H, BranchNode v, BranchNode w, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy, BranchEdge D[], BranchEdge e){$/;"	m	class:BranchDecompositionH	file:
find3sep	BranchDecomposition/BranchDecompositionH.java	/^	private boolean find3sep(BranchNode pn, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy){$/;"	m	class:BranchDecompositionH	file:
findKsepPairV	BranchDecomposition/BranchDecompositionH.java	/^	private boolean findKsepPairV(BranchTree H, BranchNode v, BranchNode w, int k, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy, BranchEdge D[], BranchEdge e){$/;"	m	class:BranchDecompositionH	file:
findMagicBullets	kstar/DEEGoldsteinTriples.java	/^        private void findMagicBullets(int curPos1, int curPos2, int curPos3, int[][] magicBulletAA, int[][] magicBulletRot){$/;"	m	class:DEEGoldsteinTriples	file:
findMinVertexCut	BranchDecomposition/MinVertexCut.java	/^	public void findMinVertexCut(BranchTree H, int si, int ti){$/;"	m	class:MinVertexCut
findMutationIndex	kstar/KSParser.java	/^	public int findMutationIndex(OneMutation resumeResults[],$/;"	m	class:KSParser
findPerturbationSuccessors	kstar/Molecule.java	/^    public void findPerturbationSuccessors(){$/;"	m	class:Molecule
findPushNode	BranchDecomposition/BranchDecompositionH.java	/^	private BranchNode findPushNode(LinkedHashSet<BranchNode> bigNodes){$/;"	m	class:BranchDecompositionH	file:
findSolvGroup	kstar/EEF1.java	/^	private int findSolvGroup(String grName){$/;"	m	class:EEF1	file:
findVind	kstar/InteractionGraph.java	/^	private int findVind(int molResNum){$/;"	m	class:InteractionGraph	file:
firstRightEnergy	kstar/TreeEdge.java	/^    private double firstRightEnergy;$/;"	f	class:TreeEdge	file:
fitEparams	kstar/KSParser.java	/^	private void fitEparams(String s){$/;"	m	class:KSParser	file:
fixResidues	kstar/PDBChemModel.java	/^        public void fixResidues(Molecule m){$/;"	m	class:PDBChemModel
fixStruct	kstar/KSParser.java	/^        public void fixStruct(String s){$/;"	m	class:KSParser
flagMutType	kstar/CommucObj.java	/^	String flagMutType = null;	$/;"	f	class:CommucObj
flagMutType	kstar/OneMutation.java	/^	String flagMutType = null;$/;"	f	class:OneMutation
flexBB	kstar/FullStructureSwitch.java	/^    ArrayList< ArrayList < HashMap < String, float[]>>> flexBB = new ArrayList<ArrayList<HashMap<String,float[]>>>();\/\/Alternate flexible-residue backbones$/;"	f	class:FullStructureSwitch
flexBB	kstar/PartialStructureSwitch.java	/^    ArrayList< ArrayList < HashMap < String, float[]>>> flexBB = new ArrayList<ArrayList<HashMap<String,float[]>>>();$/;"	f	class:PartialStructureSwitch
flexMolResNum	kstar/PerturbationSelector.java	/^    int flexMolResNum[];\/\/Molecule residue numbers of flexible residues$/;"	f	class:PerturbationSelector
flexResAtomList	kstar/BBMinimizer.java	/^	int flexResAtomList[][] = new int[0][0]; $/;"	f	class:BBMinimizer
flexResAtomList	kstar/BackrubMinimizer.java	/^	int flexResAtomList[][] = new int[0][0]; $/;"	f	class:BackrubMinimizer
flexResAtomList	kstar/SimpleMinimizer.java	/^	int flexResAtomList[][] = new int[0][0];$/;"	f	class:SimpleMinimizer
flexResListSize	kstar/BBMinimizer.java	/^	int flexResListSize[] = new int[0]; \/\/ the number of valid elements in each row of flexResAtomList$/;"	f	class:BBMinimizer
flexResListSize	kstar/BackrubMinimizer.java	/^	int flexResListSize[] = new int[0]; \/\/ the number of valid elements in each row of flexResAtomList$/;"	f	class:BackrubMinimizer
flexResListSize	kstar/SimpleMinimizer.java	/^	int flexResListSize[] = new int[0];$/;"	f	class:SimpleMinimizer
flexResMap	kstar/PMinimizer.java	/^        int flexResMap[];\/\/Map from molecule residue number to index among flexible $/;"	f	class:PMinimizer
flexible	kstar/Residue.java	/^	boolean flexible = false;	\/\/ Is this residue flexible$/;"	f	class:Residue
forceFieldType	kstar/Atom.java	/^	String forceFieldType="";	\/\/ the force field type symbol$/;"	f	class:Atom
forcefld	kstar/EnvironmentVars.java	/^	static FORCEFIELD forcefld; $/;"	f	class:EnvironmentVars
formDACSpartitions	kstar/KSParser.java	/^	private OneMutation [] formDACSpartitions(int maxNumPartitions, int initDepth, Index3 indexMap[][], int numPartitions[],$/;"	m	class:KSParser	file:
formDACSpartitionsHelper	kstar/KSParser.java	/^	private void formDACSpartitionsHelper(int initDepth, Index3 indexMap[][], int numPartitions[],$/;"	m	class:KSParser	file:
free	mpi/Datatype.java	/^  native void free() ;$/;"	m	class:Datatype
free	mpi/Freeable.java	/^    abstract void free() ;$/;"	m	class:Freeable
free	mpi/Group.java	/^  native void free() ;$/;"	m	class:Group
free	mpi/Op.java	/^  native void free() ;$/;"	m	class:Op
free	mpi/Status.java	/^  native void free() ;$/;"	m	class:Status
freeList	mpi/MPI.java	/^  static LinkedList freeList = new LinkedList() ;$/;"	f	class:MPI
fullConformation	BDAStar/BWMAStarNode.java	/^    private Conformation fullConformation(Conformation out)$/;"	m	class:BWMAStarNode	file:
fullConformation	BDAStar/CopyOfBWMAStarNode.java	/^    private Conformation fullConformation(Conformation out)$/;"	m	class:CopyOfBWMAStarNode	file:
fullConformation	kstar/TreeEdge.java	/^        RotTypeMap[] fullConformation;$/;"	f	class:TreeEdge.RightConf
fullName	kstar/Residue.java	/^	String fullName = "";	\/\/ The long version of the residue name ie "GLU A  47"$/;"	f	class:Residue
gCompute	kstar/MSAStar.java	/^	private float gCompute (int dLevel,int conf[]){$/;"	m	class:MSAStar	file:
gSumMinPVE	kstar/MSAStar.java	/^	private float gSumMinPVE(int topLevel, int startLevel, int index1, int conf[]){$/;"	m	class:MSAStar	file:
gamma	kstar/CommucObj.java	/^	double gamma = 0.01;$/;"	f	class:CommucObj
gamma	kstar/MutationManager.java	/^	double gamma = 0.01;  \/\/ The gamma used in inter-mutation pruning$/;"	f	class:MutationManager
gather	mpi/Intracomm.java	/^  private native void gather(Object   sendbuf, $/;"	m	class:Intracomm	file:
gatherv	mpi/Intracomm.java	/^  private native void gatherv(Object   sendbuf, $/;"	m	class:Intracomm	file:
genComb	BranchDecomposition/BranchDecompositionH.java	/^	private int [][] genComb(int n){$/;"	m	class:BranchDecompositionH	file:
genCombHelper	BranchDecomposition/BranchDecompositionH.java	/^	private void genCombHelper(int n, int comb[][], int curNum[], int curComb[], int depth){$/;"	m	class:BranchDecompositionH	file:
genInteractionGraph	kstar/KSParser.java	/^	private double genInteractionGraph(int numMutable, RotamerSearch rs, PrunedRotamers<Boolean> prunedRotAtRes, String runName, int strandMut[][], float eInteractionCutoff, float distCutoff, Molecule m, $/;"	m	class:KSParser	file:
genPairComb	BranchDecomposition/BranchDecompositionH.java	/^	private int [][] genPairComb(int a[]) {$/;"	m	class:BranchDecompositionH	file:
generate	kstar/Perturbation.java	/^    public static Perturbation generate(String type, Molecule m,int resList[],BufferedReader br){\/\/Generates a perturbation of the indicated type, affecting units in unitList$/;"	m	class:Perturbation
generateAll	kstar/Perturbation.java	/^    public static Perturbation[] generateAll(String type, Molecule m, int flexMolResNum[], int resCount){$/;"	m	class:Perturbation
generateAll	kstar/ProlineFlip.java	/^    public static ProlineFlip[] generateAll( Molecule m, StrandRotamers strandRot[] ){$/;"	m	class:ProlineFlip
generateBackbones	kstar/KSParser.java	/^	public void generateBackbones(String s){$/;"	m	class:KSParser
generateCombHelper	kstar/KSParser.java	/^	private void generateCombHelper(int depth, int maxDepth, int curIndex[], int$/;"	m	class:KSParser	file:
generateCombinations	kstar/KSParser.java	/^	public void generateCombinations(int residueMutatable[][], int n, int m) {$/;"	m	class:KSParser
generateCompEE	kstar/PairwiseEnergyMatrix.java	/^	public SamplingEEntries [] generateCompEE(PairwiseEnergyMatrix maxM){$/;"	m	class:PairwiseEnergyMatrix
generateConformations	BDAStar/BWMStarNode.java	/^    private void generateConformations(Integer[] MSet, Integer[] lambda, int index, SolutionSpace space,$/;"	m	class:BWMStarNode	file:
generateExcludeListSteric	kstar/BackrubMinimizer.java	/^	private int [][] generateExcludeListSteric(Molecule m, int strandMut[][], int aboveInd, boolean shellRun, boolean templateOnly){$/;"	m	class:BackrubMinimizer	file:
generateMSets	BDAStarTest/ProteinConformationTrieTest.java	/^	private static void generateMSets(Set<Conformation> set, TestSolutionSpace space, $/;"	m	class:ProteinConformationTrieTest	file:
generatePerturbations	kstar/PerturbationSelector.java	/^    public void generatePerturbations(Molecule m){$/;"	m	class:PerturbationSelector
generateRandConfs	kstar/KSParser.java	/^	public void generateRandConfs(String s){$/;"	m	class:KSParser
generateSpace	kstar/VolModule.java	/^	public void generateSpace() {$/;"	m	class:VolModule
get	BDAStar/ConformationMap.java	/^	public ProteinConformationTrie get(Object key) {$/;"	m	class:ConformationMap
get	BDAStar/ProteinConformationMap.java	/^	public ProteinConformationTrie get(Object key) {$/;"	m	class:ProteinConformationMap
get	BDAStarTest/TestConformationMap.java	/^	public ProteinConformationTrie get(Object key) {$/;"	m	class:TestConformationMap
get	kstar/PrunedRotamers.java	/^	public T get(Index3 i){$/;"	m	class:PrunedRotamers
get	kstar/PrunedRotamers.java	/^	public T get(RotInfo<?> ri){$/;"	m	class:PrunedRotamers
get	kstar/PrunedRotamers.java	/^	public T get(int curPos, int curAA, int curRot){$/;"	m	class:PrunedRotamers
get	kstar/PrunedRotamers.java	/^	public T get(int strand, int curPos, int curAA, int curRot){$/;"	m	class:PrunedRotamers
get4thPoint	kstar/RotMatrix.java	/^    public float[] get4thPoint(float[] a, float[] b, float[] c, float len, float ang, float dihe)$/;"	m	class:RotMatrix
getA	kstar/TreeEdge.java	/^    public int [][] getA(){$/;"	m	class:TreeEdge
getAAIndex	kstar/MSAStar.java	/^	private int getAAIndex(int rotIndex, int curRes, String strandDefault[][], StrandRotamers strandRot[], int strandMut[][], int mutRes2Strand[], int mutRes2MutIndex[]){$/;"	m	class:MSAStar	file:
getAAIndex	kstar/RotamerSearch.java	/^	private int getAAIndex(int rotIndex, int curRes, String strandDefault[][], int strandMut[][]){$/;"	m	class:RotamerSearch	file:
getAAName	kstar/RotamerLibrary.java	/^	public String getAAName(int aaIndex){$/;"	m	class:RotamerLibrary
getAARotamerIndex	kstar/RotamerLibrary.java	/^	public int getAARotamerIndex(String aaName) {$/;"	m	class:RotamerLibrary
getAAindFromRotNum	kstar/KSParser.java	/^	private int getAAindFromRotNum(int rotNum, RotamerLibrary rotLib){$/;"	m	class:KSParser	file:
getAAtypesAllowed	kstar/RotamerLibrary.java	/^	public String [] getAAtypesAllowed(){$/;"	m	class:RotamerLibrary
getASASMolEntropy	kstar/KSParser.java	/^	private Molecule getASASMolEntropy (Molecule m, int strandMap[]){$/;"	m	class:KSParser	file:
getASdistMatrix	kstar/MutationManager.java	/^	public boolean [][] getASdistMatrix(){$/;"	m	class:MutationManager
getAStarRoot	BDAStar/ProteinConformationTrie.java	/^    private BDAStarNode getAStarRoot (Conformation partial, Position[] positions,$/;"	m	class:ProteinConformationTrie	file:
getAStarRoot	BDAStar/ProteinConformationTrie.java	/^    private BDAStarNode getAStarRoot (Conformation partial, int index)$/;"	m	class:ProteinConformationTrie	file:
getAStarRoot	BDAStar/ProteinConformationTrie.java	/^    public BDAStarNode getAStarRoot(Conformation partial)$/;"	m	class:ProteinConformationTrie
getActualConf	kstar/RotamerSearch.java	/^	private int [] getActualConf(int curConf[], boolean eliminatedRotAtPosRed[], $/;"	m	class:RotamerSearch	file:
getActualCoord	kstar/Backrubs.java	/^	private float [] getActualCoord(Molecule m, Atom a){$/;"	m	class:Backrubs	file:
getActualCoord	kstar/Molecule.java	/^	public float [] getActualCoord(int atomNum){$/;"	m	class:Molecule
getActualCoords	kstar/Molecule.java	/^	public float [] getActualCoords(){$/;"	m	class:Molecule
getAllV	kstar/InteractionGraph.java	/^	public LinkedHashSet<Integer> getAllV(){$/;"	m	class:InteractionGraph
getAminoAcidsAtPosition	BDAStar/BWMSolutionSpace.java	/^    public int getAminoAcidsAtPosition (Position p) {$/;"	m	class:BWMSolutionSpace
getAngle	kstar/RotMatrix.java	/^        double getAngle(double vec1[], double vec2[]){\/\/Get the angle, in radians, between two vectors$/;"	m	class:RotMatrix
getAngle	kstar/RotMatrix.java	/^        float getAngle(float A[], float B[], float C[]){\/\/Get the angle ABC$/;"	m	class:RotMatrix
getAngle	kstar/RotMatrix.java	/^        float getAngle(float vec1[], float vec2[]){\/\/Get the angle, in radians, between two vectors$/;"	m	class:RotMatrix
getAtForRes	kstar/Backrubs.java	/^	private Atom getAtForRes (String atName, Residue res){$/;"	m	class:Backrubs	file:
getAtforRes	kstar/Backbone.java	/^	private void getAtforRes (String atName, Residue res, Atom at[], int ind){$/;"	m	class:Backbone	file:
getAtomByName	kstar/Residue.java	/^	public Atom getAtomByName(String n){$/;"	m	class:Residue
getAtomField	kstar/SaveMolecule.java	/^	private String getAtomField(Atom at){$/;"	m	class:SaveMolecule	file:
getAtomList	kstar/Residue.java	/^        public int[] getAtomList(boolean includeAmide, boolean includeSC,$/;"	m	class:Residue
getAtomNameToMolnum	kstar/Residue.java	/^	public int getAtomNameToMolnum(String n){$/;"	m	class:Residue
getAtoms	kstar/CloseLoop.java	/^	private int[] getAtoms(int resNumber, int angleIndex, boolean CToN)$/;"	m	class:CloseLoop	file:
getAtomsMoreDistal	kstar/StrandRotamers.java	/^	public void getAtomsMoreDistal(Molecule m, int resNum, Atom at2, int atomList[]) {$/;"	m	class:StrandRotamers
getAtomsToRotate	kstar/Backbone.java	/^	private void getAtomsToRotate(Molecule m, int strandNum, Atom atAtom, int atomList[], int angleType){$/;"	m	class:Backbone	file:
getAtomsToRotateHelper	kstar/Backbone.java	/^	private void getAtomsToRotateHelper(Molecule m, int curRes, Atom atAtom, int atomList[]){$/;"	m	class:Backbone	file:
getBBatoms	kstar/StrandRotamers.java	/^	private Atom [] getBBatoms(Residue res){$/;"	m	class:StrandRotamers	file:
getBendParameters	kstar/Amber96ext.java	/^	public boolean getBendParameters(int atomType1, int atomType2, int atomType3, $/;"	m	class:Amber96ext
getBendParameters	kstar/ForceField.java	/^	boolean getBendParameters(int a1, int a2, int a3, double f[], double eqD[]);$/;"	m	interface:ForceField
getBestE	kstar/RotamerSearch.java	/^	public synchronized float getBestE(){$/;"	m	class:RotamerSearch
getBoundForPartition	kstar/MSMinBounds.java	/^	public double getBoundForPartition(){$/;"	m	class:MSMinBounds
getBoundForPartition	kstar/RotamerSearch.java	/^	public double getBoundForPartition(){$/;"	m	class:RotamerSearch
getBoundingBox	kstar/VolModule.java	/^	private double[] getBoundingBox(double scale) {$/;"	m	class:VolModule	file:
getCAcoord	kstar/BBMinimizer.java	/^	public double [] getCAcoord(int resNum){$/;"	m	class:BBMinimizer
getCAcoord	kstar/BackrubMinimizer.java	/^	public double [] getCAcoord(int resNum){$/;"	m	class:BackrubMinimizer
getCenter	kstar/Molecule.java	/^	public float[] getCenter(){$/;"	m	class:Molecule
getCenterOfMass	kstar/Molecule.java	/^	public float[] getCenterOfMass(){$/;"	m	class:Molecule
getCenterOfMass	kstar/Strand.java	/^	public float[] getCenterOfMass(){$/;"	m	class:Strand
getChildren	BDAStar/BWMAStarNode.java	/^    public PriorityQueue<BWMAStarNode> getChildren()$/;"	m	class:BWMAStarNode
getChildrenOfNode	kstar/BranchTree.java	/^	private void getChildrenOfNode(TreeNode r, TreeEdge te[], int cNames[], TreeEdge ce[]){$/;"	m	class:BranchTree	file:
getChoiceAt	BDAStar/AbstractConformation.java	/^    public Choice getChoiceAt(Position p) {$/;"	m	class:AbstractConformation
getChoiceAt	BDAStar/Conformation.java	/^	public Choice getChoiceAt(Position p);$/;"	m	interface:Conformation
getChoices	BDAStar/BWMSolutionSpace.java	/^    public Collection<ProteinChoice> getChoices (Position p){$/;"	m	class:BWMSolutionSpace
getChoices	BDAStar/SolutionSpace.java	/^    public Collection<? extends Choice> getChoices (Position p);$/;"	m	interface:SolutionSpace
getChoices	BDAStarTest/TestSolutionSpace.java	/^    public Collection<Choice> getChoices (Position p){$/;"	m	class:TestSolutionSpace
getClosestPoint	kstar/Backrubs.java	/^	public Atom getClosestPoint (Atom c, Atom p1, Atom q1){$/;"	m	class:Backrubs
getCofEdge	kstar/TreeNode.java	/^	public TreeEdge getCofEdge(){$/;"	m	class:TreeNode
getColumnCopy	BranchDecomposition/BranchDecompositionH.java	/^	private double [] getColumnCopy(double a[][], int cInd){$/;"	m	class:BranchDecompositionH	file:
getConformation	BDAStar/BDAStarNode.java	/^    public Conformation getConformation()$/;"	m	class:BDAStarNode
getCtermRes	kstar/StrandRotamers.java	/^	private Residue getCtermRes(final Residue r, final Residue localResidue){$/;"	m	class:StrandRotamers	file:
getCurAllowableVolume	kstar/StrandRotamers.java	/^	public float getCurAllowableVolume(){$/;"	m	class:StrandRotamers
getCurNum	kstar/ParamSet.java	/^	public int getCurNum(){$/;"	m	class:ParamSet
getCurPertState	kstar/StrandRCs.java	/^        public int getCurPertState(int resNum){$/;"	m	class:StrandRCs
getCurRotNum	kstar/StrandRotamers.java	/^	public int getCurRotNum(int strResPos){$/;"	m	class:StrandRotamers
getCurRotType	kstar/StrandRotamers.java	/^	public String getCurRotType(int strResPos){$/;"	m	class:StrandRotamers
getCurrentMutOffset	kstar/KSParser.java	/^	int[] getCurrentMutOffset(int[][] origStrandMut, int[][] currStrandMut, boolean[] strandPresent, boolean[] oldStrandPresent){$/;"	m	class:KSParser
getCutSet	BranchDecomposition/MinVertexCut.java	/^	public LinkedHashSet<String> getCutSet(){$/;"	m	class:MinVertexCut
getDashedToken	kstar/Amber96ext.java	/^	private String getDashedToken(String s, int x) {$/;"	m	class:Amber96ext	file:
getDataDir	kstar/EnvironmentVars.java	/^	public static String getDataDir() {$/;"	m	class:EnvironmentVars
getDatatype	kstar/MPItoThread.java	/^	public static Datatype getDatatype(int type){$/;"	m	class:MPItoThread
getDihedralAtomNames	kstar/RotamerLibrary.java	/^	public String getDihedralAtomNames(int i, int j, int k){$/;"	m	class:RotamerLibrary
getDihedralInfo	kstar/RotamerLibrary.java	/^	public int[] getDihedralInfo(Molecule m, int strNum, int resNum, int dihedNum){$/;"	m	class:RotamerLibrary
getDihedrals	kstar/CloseLoop.java	/^	private double[][] getDihedrals()$/;"	m	class:CloseLoop	file:
getDir	kstar/BBMinimizer.java	/^	private float getDir(double e1, double e2, double e3, float step){$/;"	m	class:BBMinimizer	file:
getDir	kstar/BackrubMinimizer.java	/^	private float getDir(double e1, double e2, double e3, float step){$/;"	m	class:BackrubMinimizer	file:
getDist	kstar/BBMinimizer.java	/^	private double getDist(double coord1[], double coord2[]){$/;"	m	class:BBMinimizer	file:
getDist	kstar/BackrubMinimizer.java	/^	private double getDist(double coord1[], double coord2[]){$/;"	m	class:BackrubMinimizer	file:
getDist	kstar/ProbeStericCheck.java	/^	private float getDist(float coord1[], float coord2[]){$/;"	m	class:ProbeStericCheck	file:
getDist	kstar/Residue.java	/^	private float getDist(Atom a1, Atom a2){$/;"	m	class:Residue	file:
getDist	kstar/Residue.java	/^	public float getDist(Residue res2, boolean bbAt){$/;"	m	class:Residue
getDistrDACS	kstar/MutationManager.java	/^	public boolean getDistrDACS(){$/;"	m	class:MutationManager
getEc	kstar/BoundFlags.java	/^	public double getEc(){$/;"	m	class:BoundFlags
getEc	kstar/MSMinBounds.java	/^	public double getEc(){$/;"	m	class:MSMinBounds
getEc_const	kstar/RotamerSearch.java	/^	public double getEc_const(){$/;"	m	class:RotamerSearch
getEdge	BranchDecomposition/BranchTree.java	/^	public BranchEdge getEdge(int index){$/;"	m	class:BranchTree
getEdgesForNode	BranchDecomposition/BranchTree.java	/^	public BranchEdge [] getEdgesForNode(int index){$/;"	m	class:BranchTree
getEleType	kstar/PDBChemModel.java	/^	private String getEleType(String str){$/;"	m	class:PDBChemModel	file:
getEmptyConformation	BDAStar/BWMSolutionSpace.java	/^    public ProteinConformation getEmptyConformation () {$/;"	m	class:BWMSolutionSpace
getEmptyConformation	BDAStar/SolutionSpace.java	/^    public Conformation getEmptyConformation();$/;"	m	interface:SolutionSpace
getEmptyConformation	BDAStarTest/TestSolutionSpace.java	/^    public Conformation getEmptyConformation () {$/;"	m	class:TestSolutionSpace
getEnergy	kstar/TreeEdge.java	/^    public float [] getEnergy(){$/;"	m	class:TreeEdge
getEnergyEvalBB	kstar/Residue.java	/^	public boolean getEnergyEvalBB(){$/;"	m	class:Residue
getEnergyEvalSC	kstar/Residue.java	/^	public boolean getEnergyEvalSC(){$/;"	m	class:Residue
getEntropyTerms	kstar/EnvironmentVars.java	/^	public static double[] getEntropyTerms() {$/;"	m	class:EnvironmentVars
getEquivalentType	kstar/Amber96ext.java	/^	private int getEquivalentType(int atomType) {$/;"	m	class:Amber96ext	file:
getErefMatrix	kstar/MutationManager.java	/^	public float[][] getErefMatrix(){$/;"	m	class:MutationManager
getEvalForRes	kstar/Amber96ext.java	/^	private boolean [] getEvalForRes(Residue res, boolean evalAtom[]){$/;"	m	class:Amber96ext	file:
getFiAtoms	kstar/Backbone.java	/^	private void getFiAtoms(Residue curRes, Residue prevRes, Atom at[]){$/;"	m	class:Backbone	file:
getFiPsi	kstar/Backbone.java	/^	public double getFiPsi(Molecule m, int strandNum, int resNum, int angleType){$/;"	m	class:Backbone
getFirstDigit	kstar/ResSymmetry.java	/^    public static char getFirstDigit(String s){$/;"	m	class:ResSymmetry
getGenChi1	kstar/Perturbation.java	/^    public double[] getGenChi1(){\/\/Get the generalized chi1 for each residue to make sure the perturbation does not change it$/;"	m	class:Perturbation
getGenChi1	kstar/Perturbation.java	/^    public static double getGenChi1(Molecule m, int molResNum){\/\/Get the generalized chi1 given a molecule residue number$/;"	m	class:Perturbation
getGenChi1LastAtom	kstar/Perturbation.java	/^    public static String getGenChi1LastAtom(String resName){\/\/Get atom name X where generalized chi1 is N-CA-CB-X$/;"	m	class:Perturbation
getGraph	kstar/BranchTree.java	/^	public InteractionGraph getGraph() {$/;"	m	class:BranchTree
getGraphVertices	BranchDecomposition/GraphVertices.java	/^	public LinkedHashSet<String> getGraphVertices(){$/;"	m	class:GraphVertices
getHeap	kstar/TreeEdge.java	/^    private PriorityQueue<Conf> getHeap(RotTypeMap[] bestPosAARot, int[] bestState, String id)$/;"	m	class:TreeEdge	file:
getIdealNHCD	kstar/Perturbation.java	/^    private float getIdealNHCD(String resType){$/;"	m	class:Perturbation	file:
getImpossiblePertStates	kstar/PerturbationSelector.java	/^    private boolean[][] getImpossiblePertStates(){$/;"	m	class:PerturbationSelector	file:
getInd	kstar/BranchTree.java	/^	private int getInd(TreeNode a[], int s){$/;"	m	class:BranchTree	file:
getIndInt	kstar/MinDEEIntervals.java	/^	public double [] getIndInt(){$/;"	m	class:MinDEEIntervals
getIndOfVertex	BranchDecomposition/BranchDecompositionH.java	/^	private int getIndOfVertex(BranchTree H, String vs){$/;"	m	class:BranchDecompositionH	file:
getIndex	BranchDecomposition/BranchNode.java	/^	public int getIndex(){$/;"	m	class:BranchNode
getIndexMap	kstar/DEESplit2f.java	/^	private ArrayIndex [] getIndexMap(int curRes){$/;"	m	class:DEESplit2f	file:
getIndexMap	kstar/KSParser.java	/^	private Index3 [] getIndexMap(int numPartitions, RotamerSearch rs, int curRes, int strandMut[][],$/;"	m	class:KSParser	file:
getIndexOfNthAllowable	kstar/StrandRotamers.java	/^	public int getIndexOfNthAllowable(int resNum, int num) {$/;"	m	class:StrandRotamers
getInstance	kstar/RamachandranChecker.java	/^    public static RamachandranChecker getInstance() {$/;"	m	class:RamachandranChecker
getIntraAndShellE	kstar/PairwiseEnergyMatrix.java	/^        public float getIntraAndShellE(int pos, int AANum, int rot){$/;"	m	class:PairwiseEnergyMatrix
getIntraAndShellE	kstar/ReducedEnergyMatrix.java	/^    public float getIntraAndShellE(int index){$/;"	m	class:ReducedEnergyMatrix
getIntraE	kstar/PairwiseEnergyMatrix.java	/^        public float getIntraE(int res1, int AA1, int rot1){$/;"	m	class:PairwiseEnergyMatrix
getIntraE	kstar/ReducedEnergyMatrix.java	/^      public float getIntraE(int index){\/\/the intra-energy is in the last column$/;"	m	class:ReducedEnergyMatrix
getIsBBatom	kstar/Atom.java	/^	public boolean getIsBBatom(){$/;"	m	class:Atom
getIsLambdaEdge	kstar/TreeEdge.java	/^    public boolean getIsLambdaEdge(){$/;"	m	class:TreeEdge
getIsLeaf	BranchDecomposition/BranchNode.java	/^	public boolean getIsLeaf(){$/;"	m	class:BranchNode
getIsLeaf	kstar/TreeNode.java	/^	public boolean getIsLeaf(){$/;"	m	class:TreeNode
getIsRootEdge	kstar/TreeEdge.java	/^    public boolean getIsRootEdge(){$/;"	m	class:TreeEdge
getL	kstar/TreeEdge.java	/^    public LinkedHashSet<Integer> getL(){$/;"	m	class:TreeEdge
getLambda	kstar/TreeEdge.java	/^    public LinkedHashSet<Integer> getLambda(){$/;"	m	class:TreeEdge
getLayeredNetworkNodes	BranchDecomposition/MinVertexCut.java	/^	private int [] getLayeredNetworkNodes(BranchTree dH, int s, int t, int c[][], int f[][], int splitV[]){$/;"	m	class:MinVertexCut	file:
getLset	BranchDecomposition/MinVertexCut.java	/^	public LinkedHashSet<String> getLset(){$/;"	m	class:MinVertexCut
getM	BranchDecomposition/BranchEdge.java	/^	public LinkedHashSet<String> getM(){$/;"	m	class:BranchEdge
getM	kstar/TreeEdge.java	/^    public LinkedHashSet<Integer> getM(){$/;"	m	class:TreeEdge
getMagnitude	kstar/BBMinimizer.java	/^	public double getMagnitude(double a[]){$/;"	m	class:BBMinimizer
getMagnitude	kstar/BackrubMinimizer.java	/^	public double getMagnitude(double a[]){$/;"	m	class:BackrubMinimizer
getMagnitude	kstar/SimpleMinimizer.java	/^	public double getMagnitude(double a[]){$/;"	m	class:SimpleMinimizer
getMaxDihedRot	kstar/BBMinimizer.java	/^	public float getMaxDihedRot(){$/;"	m	class:BBMinimizer
getMaxDistCA	kstar/BBMinimizer.java	/^	public float getMaxDistCA(){$/;"	m	class:BBMinimizer
getMaxEmatrix	kstar/MutationManager.java	/^	public PairwiseEnergyMatrix getMaxEmatrix(){$/;"	m	class:MutationManager
getMaxMatrix	kstar/RotamerSearch.java	/^	public PairwiseEnergyMatrix getMaxMatrix(){$/;"	m	class:RotamerSearch
getMin	kstar/ExpansionQueue.java	/^	 public QueueNode getMin(){$/;"	m	class:ExpansionQueue
getMinEmatrix	kstar/MutationManager.java	/^	public PairwiseEnergyMatrix getMinEmatrix(){$/;"	m	class:MutationManager
getMinEmatrixEntropy	kstar/MutationManager.java	/^	public float [][] getMinEmatrixEntropy(){$/;"	m	class:MutationManager
getMinMatrix	kstar/RotamerSearch.java	/^	public PairwiseEnergyMatrix getMinMatrix(){$/;"	m	class:RotamerSearch
getMinMaxIntraEnergyBR	kstar/BackrubMinimizer.java	/^	public float [] getMinMaxIntraEnergyBR(int resMapPos){$/;"	m	class:BackrubMinimizer
getMinimalPruningZones	kstar/RotamerSearch.java	/^        public ArrayList<boolean[]> getMinimalPruningZones(int numMutable, int strandMut[][]){\/\/Get the minimal pruning zones for indirect pruning$/;"	m	class:RotamerSearch
getMolAtNumCA	kstar/BBMinimizer.java	/^	private int [] getMolAtNumCA(){$/;"	m	class:BBMinimizer	file:
getMolRes	kstar/KSParser.java	/^	private Molecule getMolRes (Molecule m, int strandMap[][]){$/;"	m	class:KSParser	file:
getMoleculeAtomNumber	kstar/Molecule.java	/^	public int getMoleculeAtomNumber(String atomName, int moleculeResidueNumber){$/;"	m	class:Molecule
getMoleculeVolume	kstar/VolModule.java	/^	public float getMoleculeVolume(){$/;"	m	class:VolModule
getMoleculeVolume	kstar/VolModule.java	/^	public float getMoleculeVolume(float volRes, float theSolvRadius){$/;"	m	class:VolModule
getMstateForEdgeCurState	kstar/TreeEdge.java	/^    public int [] getMstateForEdgeCurState(int curState[],TreeEdge e){$/;"	m	class:TreeEdge
getMultiResidueEnergy	kstar/PMinimizer.java	/^        private double getMultiResidueEnergy(int molResNum[]){$/;"	m	class:PMinimizer	file:
getMutArrayPairEcomp	kstar/KSParser.java	/^	private OneMutation[] getMutArrayPairEcomp(int numberMutable, boolean minimizeBB){$/;"	m	class:KSParser	file:
getName	kstar/TreeNode.java	/^	public int getName(){$/;"	m	class:TreeNode
getNeighborsForNode	BranchDecomposition/BranchTree.java	/^	public LinkedHashSet<BranchNode> getNeighborsForNode(BranchNode bn, boolean directed){$/;"	m	class:BranchTree
getNewNumChanges	kstar/MSAStar.java	/^	private int getNewNumChanges(int curPruningInd, int curLevelNum, int numForRes[], boolean prunedNodes[], int curNode, String strandDefault[][],$/;"	m	class:MSAStar	file:
getNewRightconf	kstar/TreeEdge.java	/^	private void getNewRightconf(RotTypeMap[] bestPosAARotOld, TreeEdge rightEdge, List<RightConf> rightConfs, int[] rightM) $/;"	m	class:TreeEdge	file:
getNextComObj	kstar/MutationManager.java	/^	public synchronized CommucObj getNextComObj(int curMutIndex) {$/;"	m	class:MutationManager
getNextConformation	BDAStar/BDAStarNode.java	/^    public Conformation getNextConformation()$/;"	m	class:BDAStarNode
getNextConformation	BDAStar/BWMAStarNode.java	/^    public Conformation getNextConformation () $/;"	m	class:BWMAStarNode
getNextConformation	BDAStar/BWMStarNode.java	/^    public Conformation getNextConformation ()$/;"	m	class:BWMStarNode
getNextConformation	BDAStar/BWMStarNode.java	/^    public Conformation getNextConformation (Conformation parentConformation) $/;"	m	class:BWMStarNode
getNextConformation	BDAStar/CopyOfBWMAStarNode.java	/^    public Conformation getNextConformation () $/;"	m	class:CopyOfBWMAStarNode
getNextConformation2	BDAStar/BWMStarNode.java	/^    public Conformation getNextConformation2(Conformation MAndLambdaConf)$/;"	m	class:BWMStarNode
getNextPath	BranchDecomposition/BreadthFirstSearch.java	/^	public int [] getNextPath(int rc[][]){$/;"	m	class:BreadthFirstSearch
getNode	BranchDecomposition/BranchTree.java	/^	public BranchNode getNode(int index){$/;"	m	class:BranchTree
getNodeName1	kstar/TreeEdge.java	/^    public int getNodeName1(){$/;"	m	class:TreeEdge
getNodeName2	kstar/TreeEdge.java	/^    public int getNodeName2(){$/;"	m	class:TreeEdge
getNodesToSplit	BranchDecomposition/BranchDecompositionH.java	/^	private LinkedHashSet<BranchNode> getNodesToSplit(){$/;"	m	class:BranchDecompositionH	file:
getNonBondedParameters	kstar/Amber96ext.java	/^	public boolean getNonBondedParameters(int atomType, double r[], double epsilon[]){$/;"	m	class:Amber96ext
getNonBondedParameters	kstar/ForceField.java	/^	boolean getNonBondedParameters(int a1, double r[], double eps[]);$/;"	m	interface:ForceField
getNtermRes	kstar/StrandRotamers.java	/^	private Residue getNtermRes(final Residue r, final Residue localResidue){$/;"	m	class:StrandRotamers	file:
getNumAATypes	kstar/StrandRCs.java	/^        public int getNumAATypes(){$/;"	m	class:StrandRCs
getNumAAallowed	kstar/RotamerLibrary.java	/^	public int getNumAAallowed(){$/;"	m	class:RotamerLibrary
getNumAllowable	kstar/StrandRotamers.java	/^	public int getNumAllowable(int resIndex){$/;"	m	class:StrandRotamers
getNumBoundH	kstar/EEF1.java	/^	private int getNumBoundH(Atom at1){$/;"	m	class:EEF1	file:
getNumConfForMut	kstar/RotamerSearch.java	/^	private void getNumConfForMut(OneMutation tMut){$/;"	m	class:RotamerSearch	file:
getNumConfsLeft	kstar/StericCheck.java	/^	public BigInteger getNumConfsLeft() {$/;"	m	class:StericCheck
getNumConfsPrunedByS	kstar/StericCheck.java	/^	public BigInteger getNumConfsPrunedByS(){$/;"	m	class:StericCheck
getNumDihedrals	kstar/RotamerLibrary.java	/^	public int getNumDihedrals(int aaTypeInd){$/;"	m	class:RotamerLibrary
getNumEdges	BranchDecomposition/BranchNode.java	/^	public int getNumEdges(){$/;"	m	class:BranchNode
getNumEdges	BranchDecomposition/BranchTree.java	/^	public int getNumEdges(){$/;"	m	class:BranchTree
getNumNodes	BranchDecomposition/BranchTree.java	/^	public int getNumNodes(){$/;"	m	class:BranchTree
getNumRCs	kstar/StrandRCs.java	/^        public int getNumRCs(int resNum, int AANum){$/;"	m	class:StrandRCs
getNumResidues	kstar/StrandRotamers.java	/^	public int getNumResidues(){$/;"	m	class:StrandRotamers
getNumRot	kstar/DEE.java	/^        protected int getNumRot(int str, int strResNum, int curAA){$/;"	m	class:DEE
getNumRot	kstar/RotamerSearch.java	/^        public int getNumRot(int str, int strResNum, int AAind){$/;"	m	class:RotamerSearch
getNumRotForAAtype	kstar/RotamerLibrary.java	/^	public int getNumRotForAAtype(int aaTypeInd){$/;"	m	class:RotamerLibrary
getNumRotamers	kstar/RotamerLibrary.java	/^	public int getNumRotamers(String aaName) {$/;"	m	class:RotamerLibrary
getNumTotDihed	kstar/SimpleMinimizer.java	/^	public int getNumTotDihed(){$/;"	m	class:SimpleMinimizer
getNumV	BranchDecomposition/GraphVertices.java	/^	public int getNumV(){$/;"	m	class:GraphVertices
getNumberMutable	kstar/KSParser.java	/^	private int getNumberMutable(int[][] strandMut){$/;"	m	class:KSParser	file:
getObj	kstar/ThreadMessage.java	/^	public Object getObj(int offset, int count){$/;"	m	class:ThreadMessage
getOneLet	kstar/RotamerLibrary.java	/^	public static String getOneLet(String aa3Name){$/;"	m	class:RotamerLibrary
getPDBfiles	kstar/KSParser.java	/^	private String [] getPDBfiles(String fName, int numFiles){$/;"	m	class:KSParser	file:
getPairEntropyEmatrix	kstar/MutationManager.java	/^	public float [][][][] getPairEntropyEmatrix(){$/;"	m	class:MutationManager
getPairInt	kstar/MinDEEIntervals.java	/^	public double [] getPairInt(){$/;"	m	class:MinDEEIntervals
getPairwiseE	kstar/PairwiseEnergyMatrix.java	/^        public float getPairwiseE(int res1, int AA1, int rot1, int res2, int AA2, int rot2){$/;"	m	class:PairwiseEnergyMatrix
getPairwiseE	kstar/ReducedEnergyMatrix.java	/^    public float getPairwiseE(int index1, int index2){$/;"	m	class:ReducedEnergyMatrix
getParamInd	kstar/ParamSet.java	/^	private int getParamInd(String paramName){$/;"	m	class:ParamSet	file:
getParams	kstar/ParamSet.java	/^	public String [] getParams(){$/;"	m	class:ParamSet
getPartialConformation	BDAStar/BDAStarNode.java	/^	public Conformation getPartialConformation() {$/;"	m	class:BDAStarNode
getPdbFiles	kstar/KSParser.java	/^	public Object[] getPdbFiles(File f){$/;"	m	class:KSParser
getPermutedAtomName	kstar/ResSymmetry.java	/^    public static String getPermutedAtomName( String atomName, String resName, int s ){$/;"	m	class:ResSymmetry
getPerpendicular	kstar/RotMatrix.java	/^        float[] getPerpendicular(float vec[]){\/\/Generate a vector perpendicular to the argument$/;"	m	class:RotMatrix
getPhiPsi	kstar/RamachandranChecker.java	/^    public float[] getPhiPsi(Molecule m, int resNum){$/;"	m	class:RamachandranChecker
getPos	kstar/PrunedRotamers.java	/^	private int getPos(int strand, int positionInStrand){$/;"	m	class:PrunedRotamers	file:
getPositions	BDAStar/AbstractConformation.java	/^    public Collection<Position> getPositions () {$/;"	m	class:AbstractConformation
getPositions	BDAStar/BWMSolutionSpace.java	/^	public Collection<? extends Position> getPositions() {$/;"	m	class:BWMSolutionSpace
getPositions	BDAStar/Conformation.java	/^    public Collection<Position> getPositions ();$/;"	m	interface:Conformation
getPositions	BDAStar/SolutionSpace.java	/^    public Collection<? extends Position> getPositions();$/;"	m	interface:SolutionSpace
getPositions	BDAStarTest/TestSolutionSpace.java	/^	public Collection<? extends Position> getPositions() {$/;"	m	class:TestSolutionSpace
getProxAS	kstar/KSParser.java	/^	public boolean [] getProxAS(Molecule m, int pos, float dist, boolean as[]){$/;"	m	class:KSParser
getPrunedSteric	kstar/MSMinBounds.java	/^	public PrunedRotamers<Boolean> getPrunedSteric(){$/;"	m	class:MSMinBounds
getPruningE	kstar/MutationManager.java	/^	public float getPruningE(){$/;"	m	class:MutationManager
getPsiAtoms	kstar/Backbone.java	/^	private void getPsiAtoms(Residue curRes, Residue nextRes, Atom at[]){$/;"	m	class:Backbone	file:
getRCOffset	kstar/StrandRCs.java	/^        public int getRCOffset(int resNum, int AANum){$/;"	m	class:StrandRCs
getRank	kstar/KSthread.java	/^	public int getRank(){$/;"	m	class:KSthread
getRank	kstar/ThreadElement.java	/^	public int getRank(){$/;"	m	class:ThreadElement
getResEntropyEmatricesEref	kstar/KSParser.java	/^	private float [] getResEntropyEmatricesEref(boolean useEref, float intraEnergies[][][][][][], StrandRotamers strandRot[], int strandMut[][], float intraEnergiesEntropy[][], int numRes, $/;"	m	class:KSParser	file:
getResEntropyEmatricesIntra	kstar/KSParser.java	/^	private float [][] getResEntropyEmatricesIntra(String matrixName, ParamSet sParams, int numRes, MolParameters mp, String runName){$/;"	m	class:KSParser	file:
getResEntropyEmatricesPair	kstar/KSParser.java	/^	private float [][][][] getResEntropyEmatricesPair(String matrixName, ParamSet sParams, int numRes, String strandDefault[][], MolParameters mp,$/;"	m	class:KSParser	file:
getResNumber	kstar/Residue.java	/^	public int getResNumber() {$/;"	m	class:Residue
getResNumberString	kstar/Residue.java	/^	public String getResNumberString() {$/;"	m	class:Residue
getResidue	kstar/Amber96PolyPeptideResidue.java	/^	Residue getResidue( String residueName ){$/;"	m	class:Amber96PolyPeptideResidue
getResidue	kstar/PerturbationSelector.java	/^    private Residue getResidue(int curPos){\/\/Get the residue at a given flexible position$/;"	m	class:PerturbationSelector	file:
getResidueCOM	kstar/Molecule.java	/^	public double[] getResidueCOM(int resNum){$/;"	m	class:Molecule
getResidueGC	kstar/Molecule.java	/^	public double [] getResidueGC(int resNum){$/;"	m	class:Molecule
getResiduePhiDihedralAtoms	kstar/Molecule.java	/^    public int[] getResiduePhiDihedralAtoms(int residueNumber)$/;"	m	class:Molecule
getResiduePsiDihedralAtoms	kstar/Molecule.java	/^    public int[] getResiduePsiDihedralAtoms(int residueNumber)$/;"	m	class:Molecule
getRightConformation	BDAStar/BWMStarNode.java	/^    private Conformation getRightConformation (Conformation conformation) {$/;"	m	class:BWMStarNode	file:
getRightConformation	BDAStar/CopyOfBWMAStarNode.java	/^    private int getRightConformation(Conformation leftConformation)$/;"	m	class:CopyOfBWMAStarNode	file:
getRightConformation2	BDAStar/BWMStarNode.java	/^    public Conformation getRightConformation2(Conformation leftSide)$/;"	m	class:BWMStarNode
getRightConformationOffset	BDAStar/BWMAStarNode.java	/^    private int getRightConformationOffset(Conformation leftConformation)$/;"	m	class:BWMAStarNode	file:
getRightConformationOffset	BDAStar/BWMStarNode.java	/^    private int getRightConformationOffset(Conformation leftConformation)$/;"	m	class:BWMStarNode	file:
getRightOffset	kstar/TreeEdge.java	/^    private int getRightOffset(String leftConfString) {$/;"	m	class:TreeEdge	file:
getRightSolutions	kstar/TreeEdge.java	/^    private List<RightConf> getRightSolutions (RotTypeMap[] bestPosAARot) {$/;"	m	class:TreeEdge	file:
getRoot	kstar/BranchTree.java	/^	public TreeNode getRoot() {$/;"	m	class:BranchTree
getRotMatrix	kstar/RotMatrix.java	/^	public void getRotMatrix(double fx, double fy, double fz, double angle,$/;"	m	class:RotMatrix
getRotMatrix	kstar/RotMatrix.java	/^	public void getRotMatrix(float fx, float fy, float fz, float angle,$/;"	m	class:RotMatrix
getRotMatrixRad	kstar/RotMatrix.java	/^        public void getRotMatrixRad(double fx, double fy, double fz, double angle,$/;"	m	class:RotMatrix
getRotMatrixRad	kstar/RotMatrix.java	/^        public void getRotMatrixRad(float fx, float fy, float fz, float angle,$/;"	m	class:RotMatrix
getRotSum	kstar/RotamerSearch.java	/^	private int getRotSum(int rotIndex, int curRes, String strandDefault[][], int strandMut[][]){$/;"	m	class:RotamerSearch	file:
getRotVector	kstar/BBMinimizer.java	/^	public float [] getRotVector(int axisNum){$/;"	m	class:BBMinimizer
getRotVector	kstar/BackrubMinimizer.java	/^	public float [] getRotVector(int axisNum){$/;"	m	class:BackrubMinimizer
getRotVol	kstar/RotamerLibrary.java	/^	public float [][] getRotVol(){$/;"	m	class:RotamerLibrary
getRotamerIndexOffset	kstar/RotamerLibrary.java	/^	public int [] getRotamerIndexOffset(){$/;"	m	class:RotamerLibrary
getRotamerValues	kstar/RotamerLibrary.java	/^	public int getRotamerValues(int i, int j, int k){$/;"	m	class:RotamerLibrary
getRotamersForAminoAcid	BDAStar/BWMSolutionSpace.java	/^    public int getRotamersForAminoAcid (int AANum) {$/;"	m	class:BWMSolutionSpace
getRotationInfoA	kstar/StrandRotamers.java	/^	private void getRotationInfoA(Atom at1, Atom at2, Atom at3,$/;"	m	class:StrandRotamers	file:
getRotationInfoB	kstar/StrandRotamers.java	/^	private void getRotationInfoB(Atom at1, Atom at2, Atom at3, Atom at4,$/;"	m	class:StrandRotamers	file:
getRset	BranchDecomposition/MinVertexCut.java	/^	public LinkedHashSet<String> getRset(){$/;"	m	class:MinVertexCut
getScaleFactor	kstar/MinDEEIntervals.java	/^	private float getScaleFactor(int pos1, int pos2){$/;"	m	class:MinDEEIntervals	file:
getSecondaryHeap	kstar/TreeEdge.java	/^    private LazyHeap<Conf> getSecondaryHeap(RotTypeMap[] bestPosAARot, int[] bestState)$/;"	m	class:TreeEdge	file:
getShellRotE	kstar/PairwiseEnergyMatrix.java	/^	public float getShellRotE(int pos, int AANum, int rot){$/;"	m	class:PairwiseEnergyMatrix
getShellRotE	kstar/ReducedEnergyMatrix.java	/^    public float getShellRotE(int index){$/;"	m	class:ReducedEnergyMatrix
getShellShellE	kstar/PairwiseEnergyMatrix.java	/^        public float getShellShellE(){$/;"	m	class:PairwiseEnergyMatrix
getSize	kstar/ThreadElement.java	/^	public int getSize(){$/;"	m	class:ThreadElement
getSmallRotAngle	kstar/Backrub.java	/^    private float getSmallRotAngle(Atom pp1, Atom pp2, Atom a3, Atom a4, Backrubs b){$/;"	m	class:Backrub	file:
getSmallRotAngle	kstar/Backrubs.java	/^	private float getSmallRotAngle(Molecule m, Atom a1, Atom a2, Atom a3, Atom a4){$/;"	m	class:Backrubs	file:
getSolvGroupIndex	kstar/EEF1.java	/^	private int getSolvGroupIndex(Atom at1){$/;"	m	class:EEF1	file:
getSolvationParameters	kstar/EEF1.java	/^	public boolean getSolvationParameters(int atom1,double dGref[],double dGfree[],$/;"	m	class:EEF1
getSplitFlags	kstar/DEE.java	/^	public boolean[][][][][][] getSplitFlags(){$/;"	m	class:DEE
getSplitFlags	kstar/DEESplit1f.java	/^	public boolean[][][][][][] getSplitFlags(){$/;"	m	class:DEESplit1f
getSplitFlags	kstar/DEESplit2f.java	/^	public boolean[][][][][][] getSplitFlags(){$/;"	m	class:DEESplit2f
getSplitFlags	kstar/RotamerSearch.java	/^	public boolean[][][][][][] getSplitFlags(){$/;"	m	class:RotamerSearch
getSplitFlags	kstar/RotamerSearch.java	/^	public boolean[][][][][][] getSplitFlags(boolean toMatrix[][][][][][]){$/;"	m	class:RotamerSearch
getStatusSource	kstar/MPItoThread.java	/^	public static int getStatusSource(Object obj){$/;"	m	class:MPItoThread
getStatusTag	kstar/MPItoThread.java	/^	public static int getStatusTag(Object obj){$/;"	m	class:MPItoThread
getStem	kstar/ResSymmetry.java	/^    public static String getStem(String s){$/;"	m	class:ResSymmetry
getStepSizeForMinimizer	kstar/Backrub.java	/^    public float getStepSizeForMinimizer(){\/\/Return a step size for the minimizer to use when optimizing this perturbation$/;"	m	class:Backrub
getStepSizeForMinimizer	kstar/Perturbation.java	/^    public float getStepSizeForMinimizer(){$/;"	m	class:Perturbation
getStepSizeForMinimizer	kstar/Shear.java	/^    public float getStepSizeForMinimizer(){\/\/Return a step size for the minimizer to use when optimizing this perturbation$/;"	m	class:Shear
getStrandCOM	kstar/Molecule.java	/^	public double[] getStrandCOM(int strNum){$/;"	m	class:Molecule
getStretchParameters	kstar/Amber96ext.java	/^	public boolean getStretchParameters(int atomType1, int atomType2,$/;"	m	class:Amber96ext
getStretchParameters	kstar/ForceField.java	/^	boolean getStretchParameters(int a1, int a2, double f[], double eqD[]);$/;"	m	interface:ForceField
getSuperposingRotMatrix	kstar/RotMatrix.java	/^        float[][] getSuperposingRotMatrix(float uold[], float unew[], float vold[], float vnew[]){$/;"	m	class:RotMatrix
getSymmetry	kstar/ResSymmetry.java	/^    public static int getSymmetry(String resName){$/;"	m	class:ResSymmetry
getTau	kstar/BackrubMinimizer.java	/^	private float getTau(Molecule m, int strNum, int resNum){$/;"	m	class:BackrubMinimizer	file:
getThreadElement	kstar/MPItoThread.java	/^	public static ThreadElement getThreadElement(int i){$/;"	m	class:MPItoThread
getToken	BranchDecomposition/BranchDecomposition.java	/^	private static String getToken(String s, int x) {$/;"	m	class:BranchDecomposition	file:
getToken	BranchDecomposition/BranchDecompositionH.java	/^	private String getToken(String s, int x) {$/;"	m	class:BranchDecompositionH	file:
getToken	kstar/Amber96ext.java	/^	private String getToken(String s, int x) {$/;"	m	class:Amber96ext	file:
getToken	kstar/AminoAcidTemplates.java	/^	private String getToken(String s, int x) {$/;"	m	class:AminoAcidTemplates	file:
getToken	kstar/BackrubMinimizer.java	/^	private String getToken(String s, int x) {$/;"	m	class:BackrubMinimizer	file:
getToken	kstar/BranchTree.java	/^	private String getToken(String s, int x) {$/;"	m	class:BranchTree	file:
getToken	kstar/EEF1.java	/^	private String getToken(String s, int x) {$/;"	m	class:EEF1	file:
getToken	kstar/GenericResidueTemplates.java	/^	private String getToken(String s, int x) {$/;"	m	class:GenericResidueTemplates	file:
getToken	kstar/KSParser.java	/^	private String getToken(String s, int x) {$/;"	m	class:KSParser	file:
getToken	kstar/ParamSet.java	/^	private String getToken(String s, int x) {$/;"	m	class:ParamSet	file:
getToken	kstar/Residue.java	/^	private String getToken(String s, int x) {$/;"	m	class:Residue	file:
getToken	kstar/RotamerLibrary.java	/^	private String getToken(String s, int x) {$/;"	m	class:RotamerLibrary	file:
getTorsion	kstar/Molecule.java	/^        public double getTorsion(int a1num, int a2num, int a3num, int a4num){$/;"	m	class:Molecule
getTorsionParameters	kstar/Amber96ext.java	/^	public boolean getTorsionParameters(int atomType1, int atomType2, int atomType3, $/;"	m	class:Amber96ext
getTorsionParameters	kstar/ForceField.java	/^	boolean getTorsionParameters(int a1, int a2, int a3, int a4, double f[], $/;"	m	interface:ForceField
getTotNumPerturbedRCs	kstar/StrandRCs.java	/^        public int getTotNumPerturbedRCs(int resNum){\/\/Total number of perturbed RCs at a given residue position$/;"	m	class:StrandRCs
getTotNumRCs	kstar/StrandRCs.java	/^        public int getTotNumRCs(int resNum){\/\/Total number of RCs at a given residue position$/;"	m	class:StrandRCs
getTotSeqEntropy	kstar/RotamerSearch.java	/^	private float getTotSeqEntropy(int [][] strandMut){$/;"	m	class:RotamerSearch	file:
getTotSeqEref	kstar/RotamerSearch.java	/^	public float getTotSeqEref(float eRef[][], int numMutable, int strandMut[][]){$/;"	m	class:RotamerSearch
getTotalNumRotamers	kstar/RotamerLibrary.java	/^	public int getTotalNumRotamers(){$/;"	m	class:RotamerLibrary
getTripleFlags	kstar/DEEGoldsteinTriples.java	/^	public boolean[][][][][][][][][] getTripleFlags(){$/;"	m	class:DEEGoldsteinTriples
getTripleFlags	kstar/RotamerSearch.java	/^	public boolean[][][][][][][][][] getTripleFlags(){$/;"	m	class:RotamerSearch
getUseBRforCurRot	kstar/BackrubMinimizer.java	/^	private boolean [][] getUseBRforCurRot(){$/;"	m	class:BackrubMinimizer	file:
getValue	kstar/ParamSet.java	/^	public String getValue(String paramName){$/;"	m	class:ParamSet
getValue	kstar/ParamSet.java	/^	public String getValue(String paramName,String defaultVal){$/;"	m	class:ParamSet
getValues	kstar/ParamSet.java	/^	public String [] getValues(){$/;"	m	class:ParamSet
getVind	BranchDecomposition/GraphVertices.java	/^	public int getVind(String name){$/;"	m	class:GraphVertices
get_count	mpi/Status.java	/^  private native int get_count(Datatype datatype);$/;"	m	class:Status	file:
get_elements	mpi/Status.java	/^  private native int get_elements(Datatype datatype);$/;"	m	class:Status	file:
get_input_angles	kstar/TripeptideClosure.java	/^public void get_input_angles(double r_n1[], double r_a1[], double r_a3[], double r_c3[])$/;"	m	class:TripeptideClosure
get_poly_coeff	kstar/TripeptideClosure.java	/^public void get_poly_coeff(double poly_coeff[])$/;"	m	class:TripeptideClosure
getc	kstar/TreeEdge.java	/^    public TreeNode getc(){$/;"	m	class:TreeEdge
getlc	kstar/TreeNode.java	/^	public TreeNode getlc(){$/;"	m	class:TreeNode
getn1	BranchDecomposition/BranchEdge.java	/^	public BranchNode getn1(){$/;"	m	class:BranchEdge
getn2	BranchDecomposition/BranchEdge.java	/^	public BranchNode getn2(){$/;"	m	class:BranchEdge
getp	kstar/TreeNode.java	/^	public TreeNode getp(){$/;"	m	class:TreeNode
getrc	kstar/TreeNode.java	/^	public TreeNode getrc(){$/;"	m	class:TreeNode
getrtm	kstar/TreeEdge.java	/^    public RotTypeMap[][] getrtm(){$/;"	m	class:TreeEdge
getv1	BranchDecomposition/BranchNode.java	/^	public String getv1(){$/;"	m	class:BranchNode
getv1	kstar/TreeNode.java	/^	public int getv1(){$/;"	m	class:TreeNode
getv2	BranchDecomposition/BranchNode.java	/^	public String getv2(){$/;"	m	class:BranchNode
getv2	kstar/TreeNode.java	/^	public int getv2(){$/;"	m	class:TreeNode
goodStart	kstar/Perturbation.java	/^    public static boolean goodStart(String type, int resNum, Molecule m){$/;"	m	class:Perturbation
grFilename	kstar/GenericResidueTemplates.java	/^	String grFilename = "all_nuc94_and_gr.in";$/;"	f	class:GenericResidueTemplates
grResidues	kstar/GenericResidueTemplates.java	/^	Residue grResidues[];   \/\/ arrays of residues$/;"	f	class:GenericResidueTemplates
gradient	kstar/Molecule.java	/^	double	gradient[] = null;	\/\/ The computed gradient for this molecule (x,y,z) for each atom$/;"	f	class:Molecule
graphV1	BranchDecomposition/BranchNode.java	/^	private String graphV1 = null; \/\/first graph vertex associated with the current node$/;"	f	class:BranchNode	file:
graphV1	kstar/TreeNode.java	/^	private int graphV1 = -1; \/\/first graph vertex associated with the current node (molecule-relative numbering)$/;"	f	class:TreeNode	file:
graphV2	BranchDecomposition/BranchNode.java	/^	private String graphV2 = null; \/\/second graph vertex associated with the current node$/;"	f	class:BranchNode	file:
graphV2	kstar/TreeNode.java	/^	private int graphV2 = -1; \/\/second graph vertex associated with the current node (molecule-relative numbering)$/;"	f	class:TreeNode	file:
graphVertices	BranchDecomposition/GraphVertices.java	/^	private LinkedHashSet<String> graphVertices = null; \/\/the set of graph vertices$/;"	f	class:GraphVertices	file:
gray	BranchDecomposition/BreadthFirstSearch.java	/^	private final String gray = "g";$/;"	f	class:BreadthFirstSearch	file:
grl	kstar/KSParser.java	/^		RotamerLibrary[] grl;$/;"	f	class:KSParser
group	mpi/Comm.java	/^  private native long group();$/;"	m	class:Comm	file:
groupEEF1names	kstar/EEF1.java	/^	String groupEEF1names[] = new String[numAtTypesEEF1];$/;"	f	class:EEF1
grt	kstar/Amber96ext.java	/^	GenericResidueTemplates grt = null;$/;"	f	class:Amber96ext
gv	BranchDecomposition/BranchDecompositionH.java	/^	GraphVertices gv = null; \/\/the set of graph vertices$/;"	f	class:BranchDecompositionH
hBondCutoff	kstar/ProbeStericCheck.java	/^	final float hBondCutoff = 0.8f; \/\/the allowed vdW overlap for H-bonding atoms (used for steric checks)$/;"	f	class:ProbeStericCheck
hCompute	kstar/MSAStar.java	/^	private float hCompute (int dLevel, int conf[]){$/;"	m	class:MSAStar	file:
hElect	kstar/KSParser.java	/^		boolean hElect = true; \/\/ should hydrogens be used in electrostatic energy calculations$/;"	f	class:KSParser
hElect	kstar/RotamerSearch.java	/^	boolean hElect = true;$/;"	f	class:RotamerSearch
hSteric	kstar/BackrubMinimizer.java	/^	boolean hSteric = true; \/\/determines if hydrogens are used in steric checks$/;"	f	class:BackrubMinimizer
hSteric	kstar/KSParser.java	/^		boolean hSteric = false; \/\/ should hydrogens be used in steric checks$/;"	f	class:KSParser
hSteric	kstar/RotamerSearch.java	/^	boolean hSteric = false; \/\/should hydrogens be used in steric checks$/;"	f	class:RotamerSearch
hSteric	kstar/StericCheck.java	/^	boolean hSteric = false;$/;"	f	class:StericCheck
hSumMinPVE	kstar/MSAStar.java	/^	private float hSumMinPVE (int topLevel, int index1, int conf[]){$/;"	m	class:MSAStar	file:
hVDW	kstar/KSParser.java	/^		boolean hVDW = true; \/\/ should hydrogens be used in vdw energy calculations$/;"	f	class:KSParser
hVDW	kstar/RotamerSearch.java	/^	boolean hVDW = true;$/;"	f	class:RotamerSearch
halfNBeval	kstar/Amber96ext.java	/^	int halfNBeval[], NBeval[];$/;"	f	class:Amber96ext
halfNonBondedTerms	kstar/Amber96ext.java	/^	double nonBondedTerms[], halfNonBondedTerms[];$/;"	f	class:Amber96ext
handle	mpi/Comm.java	/^  protected long handle;$/;"	f	class:Comm
handle	mpi/Datatype.java	/^  protected long handle;$/;"	f	class:Datatype
handle	mpi/Errhandler.java	/^  protected long handle;$/;"	f	class:Errhandler
handle	mpi/Group.java	/^  protected long handle;$/;"	f	class:Group
handle	mpi/Op.java	/^  protected long handle ;$/;"	f	class:Op
handle	mpi/Request.java	/^  protected long handle;$/;"	f	class:Request
handle	mpi/Status.java	/^  protected long handle;$/;"	f	class:Status
handleCompBranchDGMEC	kstar/KSParser.java	/^	public void handleCompBranchDGMEC (String s, boolean eRefGenerated) { \/\/funciton added for BWM - Swati$/;"	m	class:KSParser
handleCompBranchDGMEC	kstar/KSParser.java	/^	public void handleCompBranchDGMEC(String s)$/;"	m	class:KSParser
handleCompStericOverlap	kstar/KSParser.java	/^	public void handleCompStericOverlap (String s) {$/;"	m	class:KSParser
handleComputeAllPairwiseRotamerEnergies	kstar/KSParser.java	/^    public void handleComputeAllPairwiseRotamerEnergies(String s){$/;"	m	class:KSParser
handleComputeAllPairwiseRotamerEnergiesMaster	kstar/KSParser.java	/^	public void handleComputeAllPairwiseRotamerEnergiesMaster(ParamSet sParams) {	$/;"	m	class:KSParser
handleComputeAllPairwiseRotamerEnergiesSlave	kstar/KSParser.java	/^	public CommucObj handleComputeAllPairwiseRotamerEnergiesSlave(CommucObj cObj) {$/;"	m	class:KSParser
handleComputeEnergyMol	kstar/KSParser.java	/^	public void handleComputeEnergyMol(String s) {$/;"	m	class:KSParser
handleDoBWM	kstar/KSParser.java	/^    public void handleDoBWM (String s)$/;"	m	class:KSParser
handleDoDEE	kstar/KSParser.java	/^	public void handleDoDEE(String s) {$/;"	m	class:KSParser
handleDoMPI	kstar/KSParser.java	/^	public void handleDoMPI(String args[]) throws MPIException, InterruptedException {$/;"	m	class:KSParser
handleDoMPIMaster	kstar/KSParser.java	/^	public void handleDoMPIMaster(MutationManager mutMan, int size) throws MPIException, InterruptedException {$/;"	m	class:KSParser
handleDoMPISlave	kstar/KSParser.java	/^	public void handleDoMPISlave() throws MPIException, InterruptedException {$/;"	m	class:KSParser
handleDoResEntropy	kstar/KSParser.java	/^	public void handleDoResEntropy(String s, ParamSet sParams) {$/;"	m	class:KSParser
handleDoResEntropySlave	kstar/KSParser.java	/^	private CommucObj handleDoResEntropySlave(CommucObj cObj){$/;"	m	class:KSParser	file:
handleHybridKSLoadMutList	kstar/KSParser.java	/^	private Set<OneMutation> handleHybridKSLoadMutList (String mutFileName, int numMutable,$/;"	m	class:KSParser	file:
handleKSMaster	kstar/KSParser.java	/^	public void handleKSMaster(String s) {$/;"	m	class:KSParser
handleKSSlave	kstar/KSParser.java	/^	public CommucObj handleKSSlave(CommucObj cObj) {$/;"	m	class:KSParser
handleMinDEEApplyRot	kstar/KSParser.java	/^	public void handleMinDEEApplyRot(String s) {$/;"	m	class:KSParser
handlePrecomputeBackrubs	kstar/KSParser.java	/^	public void handlePrecomputeBackrubs (String s) {$/;"	m	class:KSParser
hasInvalidConf	kstar/Molecule.java	/^    public boolean hasInvalidConf(){\/\/See if any of the residues are in an invalid conformation$/;"	m	class:Molecule
hasNext	kstar/PrunedRotamers.java	/^	  public boolean hasNext() {$/;"	m	class:PrunedRotIterator
hasNextItem	kstar/PrunedRotamers.java	/^	  private boolean hasNextItem = false;$/;"	f	class:PrunedRotIterator	file:
hashCode	BDAStar/Position.java	/^    public int hashCode()$/;"	m	class:Position
hashCode	BDAStar/ProteinChoice.java	/^    public int hashCode()$/;"	m	class:ProteinChoice
hashCode	BDAStar/ProteinPosition.java	/^    public int hashCode()$/;"	m	class:ProteinPosition
hashCode	kstar/TreeEdge.java	/^        public int hashCode()$/;"	m	class:TreeEdge.Conf
hdrReq	mpi/Request.java	/^  protected Request hdrReq ;$/;"	f	class:Request
heapCheck	BDAStar/BDAStarNode.java	/^    public void heapCheck()$/;"	m	class:BDAStarNode
heapHashCodes	kstar/TreeEdge.java	/^    private static Map<String, Integer> heapHashCodes = new HashMap<String, Integer>();$/;"	f	class:TreeEdge	file:
hundred	Miscellany/ComputeKStarScore.java	/^	public static final BigDecimal hundred = new BigDecimal(100);$/;"	f	class:ComputeKStarScore
hybridKScompute	kstar/KSParser.java	/^	private CommucObj hybridKScompute(CommucObj cObj){$/;"	m	class:KSParser	file:
hyper_tan	kstar/SturmSolver.java	/^    double hyper_tan(double a, double x)$/;"	m	class:SturmSolver
i1	kstar/SamplingEEntries.java	/^	public int i1, i2, i3, i4, i5, i6;$/;"	f	class:SamplingEEntries
i2	kstar/SamplingEEntries.java	/^	public int i1, i2, i3, i4, i5, i6;$/;"	f	class:SamplingEEntries
i3	kstar/SamplingEEntries.java	/^	public int i1, i2, i3, i4, i5, i6;$/;"	f	class:SamplingEEntries
i4	kstar/SamplingEEntries.java	/^	public int i1, i2, i3, i4, i5, i6;$/;"	f	class:SamplingEEntries
i5	kstar/SamplingEEntries.java	/^	public int i1, i2, i3, i4, i5, i6;$/;"	f	class:SamplingEEntries
i6	kstar/SamplingEEntries.java	/^	public int i1, i2, i3, i4, i5, i6;$/;"	f	class:SamplingEEntries
idNUM	kstar/ExpansionQueue.java	/^	public int idNUM;$/;"	f	class:ExpansionQueue
idealTauOther	kstar/BackrubMinimizer.java	/^	final float idealTauOther = 111.0f; \/\/the ideal tau value for all other amino acids (not Gly and not Pro)$/;"	f	class:BackrubMinimizer
idealizeProRing	kstar/Molecule.java	/^    public boolean idealizeProRing(Residue res){$/;"	m	class:Molecule
idealizeResSidechain	kstar/Molecule.java	/^    public boolean idealizeResSidechain( Residue res){$/;"	m	class:Molecule
idealizeRingHydrogens	kstar/Molecule.java	/^    public void idealizeRingHydrogens(Residue res, Residue idealPro){$/;"	m	class:Molecule
idealizeSC	kstar/CommucObj.java	/^        boolean idealizeSC;$/;"	f	class:CommucObj
idealizeSC	kstar/MutationManager.java	/^        boolean idealizeSC;$/;"	f	class:MutationManager
idealizeSC	kstar/Perturbation.java	/^    static boolean idealizeSC = true;\/\/Should sidechains be idealized?$/;"	f	class:Perturbation
idealizeSidechains	kstar/Perturbation.java	/^    public boolean idealizeSidechains(){$/;"	m	class:Perturbation
identifyRotamers	kstar/KSParser.java	/^        public void identifyRotamers(String s){$/;"	m	class:KSParser
identity	kstar/RotMatrix.java	/^        public float[][] identity(){\/\/Return the 3X3 identity matrix$/;"	m	class:RotMatrix
impDihedAtomType1	kstar/Amber96ext.java	/^	int[]		impDihedAtomType1 = null;$/;"	f	class:Amber96ext
impDihedAtomType2	kstar/Amber96ext.java	/^	int[]		impDihedAtomType2 = null;$/;"	f	class:Amber96ext
impDihedAtomType3	kstar/Amber96ext.java	/^	int[]		impDihedAtomType3 = null;$/;"	f	class:Amber96ext
impDihedAtomType4	kstar/Amber96ext.java	/^	int[]		impDihedAtomType4 = null;$/;"	f	class:Amber96ext
impDihedPN	kstar/Amber96ext.java	/^	int[] impDihedPN = null; \/\/ Periodicity$/;"	f	class:Amber96ext
impDihedPhase	kstar/Amber96ext.java	/^	float[] impDihedPhase = null; \/\/ Phase$/;"	f	class:Amber96ext
impDihedTerm1	kstar/Amber96ext.java	/^	float[] impDihedTerm1 = null; \/\/ PK$/;"	f	class:Amber96ext
inZ	kstar/DEEIndirect.java	/^        boolean inZ[];\/\/Indicates which of the flexible residue positions are in the pruning zone$/;"	f	class:DEEIndirect
incl	mpi/Group.java	/^  private native long incl(int [] ranks);$/;"	m	class:Group	file:
incrementCtr	kstar/PrunedRotamers.java	/^	  private void incrementCtr(int[] ctr, int[] max) {$/;"	m	class:PrunedRotIterator	file:
indBounds	kstar/MSMinBounds.java	/^	PrunedRotamers<MSRotBounds> indBounds = null;$/;"	f	class:MSMinBounds
indInt	kstar/BoundFlags.java	/^	double indInt[][] = null;$/;"	f	class:BoundFlags
indInt	kstar/MSMinBounds.java	/^	double indInt[] = null;$/;"	f	class:MSMinBounds
indIntMinDEE	kstar/DEE.java	/^	double indIntMinDEE[] = null;$/;"	f	class:DEE
indIntMinDEE	kstar/RotamerSearch.java	/^	double indIntMinDEE[] = null;	\/\/the single-residue interval term in the MinDEE criterion$/;"	f	class:RotamerSearch
indIntMinDEE2Pos	kstar/DEEGoldsteinPairs.java	/^	double indIntMinDEE2Pos[][] = null;$/;"	f	class:DEEGoldsteinPairs
indMinMinPVE	kstar/MSAStar.java	/^	private float indMinMinPVE (int kLevel, int firstIndex, int conf[], int topLevel){$/;"	m	class:MSAStar	file:
index	BranchDecomposition/BranchNode.java	/^	private int index = -1; \/\/the index of this node into the node matrix$/;"	f	class:BranchNode	file:
index	kstar/MSMinBounds.java	/^		Index3 index;$/;"	f	class:MSMinBounds.MSRotBounds
index	kstar/OneMutation.java	/^	Index3 index[] = null;$/;"	f	class:OneMutation
index	mpi/GraphParms.java	/^	public int [] index;$/;"	f	class:GraphParms
index	mpi/Status.java	/^  public int index;$/;"	f	class:Status
indexInA	kstar/TreeEdge.java	/^        int indexInA;$/;"	f	class:TreeEdge.Conf
index_r_AI	kstar/DEESplit2f.java	/^	private void index_r_AI(int posNum, int aANumAtPos, int rotNumAtPos) {$/;"	m	class:DEESplit2f	file:
init	BranchDecomposition/BreadthFirstSearch.java	/^	public void init(){$/;"	m	class:BreadthFirstSearch
init	kstar/DEE.java	/^        public void init(PairwiseEnergyMatrix arpMatrix, PairwiseEnergyMatrix arpMatrixMax, int numResMutable,$/;"	m	class:DEE
init	kstar/Residue.java	/^        public void init(){$/;"	m	class:Residue
init	mpi/Comm.java	/^  private static native void init();$/;"	m	class:Comm	file:
init	mpi/Datatype.java	/^  private static native void init();$/;"	m	class:Datatype	file:
init	mpi/Errhandler.java	/^  private static native void init();$/;"	m	class:Errhandler	file:
init	mpi/Group.java	/^  private static native void init(); $/;"	m	class:Group	file:
init	mpi/Op.java	/^  private static native void init();$/;"	m	class:Op	file:
init	mpi/Request.java	/^  private static native void init();$/;"	m	class:Request	file:
init	mpi/Status.java	/^  private static native void init(); $/;"	m	class:Status	file:
initConfSeq	kstar/CommucObj.java	/^	public void initConfSeq(int numConfs,int treeLevels){$/;"	m	class:CommucObj
initDepth	kstar/CommucObj.java	/^	int initDepth = -1;$/;"	f	class:CommucObj
initDepth	kstar/MutationManager.java	/^	int initDepth = -1;$/;"	f	class:MutationManager
initEw	kstar/CommucObj.java	/^	float initEw = 0.0f;$/;"	f	class:CommucObj
initEw	kstar/MutationManager.java	/^	float initEw = 0.0f;$/;"	f	class:MutationManager
initFromCopy	kstar/PrunedRotamers.java	/^	public T [][][] initFromCopy(Object fromMatrix[][][], T initVal){$/;"	m	class:PrunedRotamers
initMutRes2Str	kstar/BackrubMinimizer.java	/^	public void initMutRes2Str(int strandMut[][]){$/;"	m	class:BackrubMinimizer
initMutRes2Str	kstar/RotamerSearch.java	/^	public void initMutRes2Str(int strandMut[][]){$/;"	m	class:RotamerSearch
initThree2One	kstar/RotamerLibrary.java	/^	public static void initThree2One(){$/;"	m	class:RotamerLibrary
initialAngleStepSize	kstar/SimpleMinimizer.java	/^	float initialAngleStepSize = 1.0f;$/;"	f	class:SimpleMinimizer
initialDihedrals	kstar/CloseLoop.java	/^	double [][] initialDihedrals = new double[3][2];$/;"	f	class:CloseLoop
initial_q	kstar/RotamerSearch.java	/^	BigDecimal initial_q = new BigDecimal(0.0);$/;"	f	class:RotamerSearch
initialize	BDAStar/ConformationMap.java	/^	public void initialize(SolutionSpace space, Position p)$/;"	m	class:ConformationMap
initialize	BDAStar/ConformationMap.java	/^	public void initialize(int numAA, int[] numRotamers)$/;"	m	class:ConformationMap
initialize	BDAStar/ProteinConformationMap.java	/^	public void initialize(BWMSolutionSpace space, Position p) {$/;"	m	class:ProteinConformationMap
initialize	BDAStarTest/TestConformationMap.java	/^	public void initialize(int numChoices)$/;"	m	class:TestConformationMap
initialize	kstar/BBMinimizer.java	/^	public void initialize(Molecule mol, Amber96ext theA96ff, int strMut[][], int numStrands) {$/;"	m	class:BBMinimizer
initialize	kstar/BackrubMinimizer.java	/^	public void initialize(Molecule mol, Amber96ext theA96ff, int strMut[][], String brFile, boolean hS, float stThresh, int numStrands, boolean readFile) {$/;"	m	class:BackrubMinimizer
initialize	kstar/MPItoThread.java	/^	public static void initialize(boolean mpiRun, int numThreads) {$/;"	m	class:MPItoThread
initialize	kstar/PMinimizer.java	/^	public void initialize(Molecule theM, int numStrands, Amber96ext theA96ff,$/;"	m	class:PMinimizer
initialize	kstar/SimpleMinimizer.java	/^	public void initialize(Molecule theM, int numStrands, Amber96ext theA96ff,$/;"	m	class:SimpleMinimizer
initializeCalculation	kstar/Amber96ext.java	/^	public void initializeCalculation(){$/;"	m	class:Amber96ext
initializeCalculation	kstar/ForceField.java	/^	void initializeCalculation();$/;"	m	interface:ForceField
initializeEVCalculation	kstar/Amber96ext.java	/^	private void initializeEVCalculation(){$/;"	m	class:Amber96ext	file:
initializeMatrices	kstar/TreeEdge.java	/^    private void initializeMatrices(){$/;"	m	class:TreeEdge	file:
initializePairwiseBooleanMatrix	kstar/PairwiseEnergyMatrix.java	/^        public boolean[][][][][][] initializePairwiseBooleanMatrix(){$/;"	m	class:PairwiseEnergyMatrix
initializePairwiseDoubleMatrix	kstar/PairwiseEnergyMatrix.java	/^        public double[][][][][][] initializePairwiseDoubleMatrix(double val){$/;"	m	class:PairwiseEnergyMatrix
initializePrunedRot	kstar/PrunedRotamers.java	/^	public T [][][] initializePrunedRot(int numMutable, int[][] strandMut, RotamerSearch rs, T initVal) {$/;"	m	class:PrunedRotamers
initializeSolvationCalculation	kstar/Amber96ext.java	/^	private void initializeSolvationCalculation(){$/;"	m	class:Amber96ext	file:
initializeTripleFlags	kstar/DEEGoldsteinTriples.java	/^        public void initializeTripleFlags(){\/\/Initializes the tripleFlags array$/;"	m	class:DEEGoldsteinTriples
initialize_loop_closure	kstar/TripeptideClosure.java	/^  public void initialize_loop_closure(double bondLength[], double bondAngle[], double t_ang[])$/;"	m	class:TripeptideClosure
insert	kstar/ExpansionQueue.java	/^	 public void insert(QueueNode newNode){$/;"	m	class:ExpansionQueue
insertChild	BDAStar/BWMAStarNode.java	/^    public void insertChild(Set<ProteinPosition> MSet, BWMAStarNode node)$/;"	m	class:BWMAStarNode
insertChild	BDAStar/CopyOfBWMAStarNode.java	/^    public void insertChild(Conformation conf)$/;"	m	class:CopyOfBWMAStarNode
insertConformation	BDAStar/BDAStarNode.java	/^    private void insertConformation(Conformation c, Conformation prefix, Conformation suffix, Position[] positions, int index)$/;"	m	class:BDAStarNode	file:
insertConformation	BDAStar/BDAStarNode.java	/^    public void insertConformation(Conformation c, Conformation prefix, Conformation suffix)$/;"	m	class:BDAStarNode
insertConformation	BDAStar/BWMStarNode.java	/^    private void insertConformation (Conformation c) {$/;"	m	class:BWMStarNode	file:
insertConformation	BDAStar/ProteinConformationTrie.java	/^    private void insertConformation (Conformation MConf, Conformation lambdaConf, Conformation suffix,$/;"	m	class:ProteinConformationTrie	file:
insertConformation	BDAStar/ProteinConformationTrie.java	/^    public void insertConformation(Conformation MConf, Conformation lambdaConf, Conformation suffix)$/;"	m	class:ProteinConformationTrie
insertConformations	BDAStarTest/BDAStarNodeTest.java	/^    private static void insertConformations(BDAStarNode root, Conformation current, TestSolutionSpace space, int index)$/;"	m	class:BDAStarNodeTest	file:
insertConformations	BDAStarTest/ProteinConformationTrieTest.java	/^    private static void insertConformations(ProteinConformationTrie root, Conformation current, $/;"	m	class:ProteinConformationTrieTest	file:
intersection	mpi/Group.java	/^  private static native long intersection(Group group1, Group group2);$/;"	m	class:Group	file:
invResMap	kstar/TreeEdge.java	/^    private int invResMap[] = null; \/\/maps the indices of molecule-relative residue numbers to redesign-order indexing (used in the energy matrices); ligand is mapped last$/;"	f	class:TreeEdge	file:
inverseResidueMap	BDAStar/BWMSolutionSpace.java	/^    private int[] inverseResidueMap;$/;"	f	class:BWMSolutionSpace	file:
isAddedRotamers	kstar/RotamerLibrary.java	/^	public boolean isAddedRotamers() {$/;"	m	class:RotamerLibrary
isAllowedSteric	kstar/ProbeStericCheck.java	/^	public boolean isAllowedSteric(Molecule m, Atom a1, Atom a2, float overlapThresh){$/;"	m	class:ProbeStericCheck
isAlreadyAdded	BranchDecomposition/GraphVertices.java	/^	private boolean isAlreadyAdded(String name){$/;"	m	class:GraphVertices	file:
isAlreadySorted	kstar/RyanQuickSort.java	/^	private boolean isAlreadySorted() {$/;"	m	class:RyanQuickSort	file:
isAromatic	kstar/EEF1.java	/^	private boolean isAromatic(Atom at1){$/;"	m	class:EEF1	file:
isBBatom	kstar/Atom.java	/^	boolean isBBatom = false;$/;"	f	class:Atom
isBBatom	kstar/RotamerSearch.java	/^	private boolean isBBatom(Atom at){$/;"	m	class:RotamerSearch	file:
isBRfeasible	kstar/BackrubMinimizer.java	/^	private boolean isBRfeasible(Molecule m, int strNum, int resNum, float initTaus[], int excludeList[][]){$/;"	m	class:BackrubMinimizer	file:
isCOhelper	kstar/EEF1.java	/^	private boolean isCOhelper(Atom at2){		$/;"	m	class:EEF1	file:
isCarboxylO	kstar/EEF1.java	/^	private boolean isCarboxylO(Atom at1){$/;"	m	class:EEF1	file:
isChecked	BranchDecomposition/BranchEdge.java	/^	public boolean isChecked(BranchNode bn){$/;"	m	class:BranchEdge
isConnected	kstar/Molecule.java	/^	public boolean isConnected(int atom1, int atom2){$/;"	m	class:Molecule
isElement	BranchDecomposition/BranchDecompositionH.java	/^	private boolean isElement(Object a[], Object e){$/;"	m	class:BranchDecompositionH	file:
isElement	BranchDecomposition/MinVertexCut.java	/^	private boolean isElement(int a, int A[], int sizeA){$/;"	m	class:MinVertexCut	file:
isEmpty	BDAStar/ConformationMap.java	/^	public boolean isEmpty() {$/;"	m	class:ConformationMap
isEmpty	BDAStar/ProteinConformationMap.java	/^	public boolean isEmpty() {$/;"	m	class:ProteinConformationMap
isEmpty	BDAStarTest/TestConformationMap.java	/^	public boolean isEmpty() {$/;"	m	class:TestConformationMap
isInList	kstar/BackrubMinimizer.java	/^	private boolean isInList(int a, int list[][]){$/;"	m	class:BackrubMinimizer	file:
isInList	kstar/RotamerSearch.java	/^	private boolean isInList(int a, int list[]){$/;"	m	class:RotamerSearch	file:
isIndependentSet	BranchDecomposition/BranchDecompositionH.java	/^	private boolean isIndependentSet(BranchTree H, LinkedHashSet<String> s){$/;"	m	class:BranchDecompositionH	file:
isIndependentSetGraph	BranchDecomposition/BranchDecompositionH.java	/^	private boolean isIndependentSetGraph(LinkedHashSet<String> s){$/;"	m	class:BranchDecompositionH	file:
isLambdaEdge	kstar/TreeEdge.java	/^    private boolean isLambdaEdge = false; \/\/determines if this is a lambda edge$/;"	f	class:TreeEdge	file:
isLeaf	BranchDecomposition/BranchNode.java	/^	private boolean isLeaf = false; \/\/leaf or internal node$/;"	f	class:BranchNode	file:
isLeaf	kstar/TreeNode.java	/^	private boolean isLeaf = false; \/\/leaf or internal node$/;"	f	class:TreeNode	file:
isNOT13Connected	kstar/Molecule.java	/^	private boolean isNOT13Connected(int atom1, int atom2){$/;"	m	class:Molecule	file:
isNOTAlready14Connected	kstar/Molecule.java	/^	private boolean isNOTAlready14Connected(int atom1, int atom2){$/;"	m	class:Molecule	file:
isObject	mpi/Datatype.java	/^  protected boolean isObject() {$/;"	m	class:Datatype
isParametricallyIncompatible	kstar/RotamerSearch.java	/^        public boolean isParametricallyIncompatible(Residue firstRes, int curAA1, int RC1, Residue secondRes, int curAA2, int RC2){$/;"	m	class:RotamerSearch
isProtein	kstar/PartialStructureSwitch.java	/^        boolean isProtein;$/;"	f	class:PartialStructureSwitch.ChainSection
isProtein	kstar/Strand.java	/^	boolean isProtein = false;	\/\/ Is this strand a protein?$/;"	f	class:Strand
isProtein	kstar/StrandRCs.java	/^       boolean isProtein;$/;"	f	class:StrandRCs
isPruned	kstar/MSAStar.java	/^        private boolean isPruned ( int newIndex, int oldIndex, int conf[], int topLevel ){$/;"	m	class:MSAStar	file:
isPruned	kstar/MSAStar.java	/^        private boolean isPruned( int newIndex, int conf[], int topLevel ){$/;"	m	class:MSAStar	file:
isPrunedTriple	kstar/DEE.java	/^        boolean isPrunedTriple(int curPos1, int curAA1, int curRot1,$/;"	m	class:DEE
isRootEdge	kstar/TreeEdge.java	/^    private boolean isRootEdge = false; \/\/determines if this is the root edge$/;"	f	class:TreeEdge	file:
isSame	kstar/OneMutation.java	/^	public boolean isSame(String anotherMutation[]) {$/;"	m	class:OneMutation
isSplitRes	kstar/KSParser.java	/^	private boolean isSplitRes(int curRes, int majorSplitPos[], int curDepth){$/;"	m	class:KSParser	file:
isSubtreeRoot	BDAStar/BWMAStarNode.java	/^    boolean isSubtreeRoot = false;$/;"	f	class:BWMAStarNode
isSubtreeRoot	BDAStar/CopyOfBWMAStarNode.java	/^    boolean isSubtreeRoot = false;$/;"	f	class:CopyOfBWMAStarNode
isTemplateOn	kstar/RotamerSearch.java	/^	boolean isTemplateOn = false;$/;"	f	class:RotamerSearch
isUser	mpi/Op.java	/^  protected boolean isUser() {$/;"	m	class:Op
iterator	kstar/PrunedRotamers.java	/^	public Iterator<RotInfo<T>> iterator() {$/;"	m	class:PrunedRotamers
iterator	kstar/PrunedRotamers.java	/^	public Iterator<RotInfo<T>> iterator(int startRes){$/;"	m	class:PrunedRotamers
join	BDAStar/AbstractConformation.java	/^    public abstract Conformation join (Conformation nextConformation);$/;"	m	class:AbstractConformation
join	BDAStar/Conformation.java	/^    public Conformation join (Conformation conformation);$/;"	m	interface:Conformation
join	BDAStar/ProteinConformation.java	/^    public Conformation join (Conformation nextConformation) {$/;"	m	class:ProteinConformation
join	BDAStarTest/TestConformation.java	/^    public Conformation join (Conformation nextConformation) {$/;"	m	class:TestConformation
join	BDAStarTest/TestProteinConformation.java	/^    public Conformation join (Conformation nextConformation) {$/;"	m	class:TestProteinConformation
keySet	BDAStar/ConformationMap.java	/^	public Set<Choice> keySet() {$/;"	m	class:ConformationMap
ksConfDir	kstar/EnvironmentVars.java	/^	public static String ksConfDir = "ksConfs";$/;"	f	class:EnvironmentVars
ksp	kstar/KSthread.java	/^	KSParser ksp;$/;"	f	class:KSthread
kstar	kstar/Amber96PolyPeptideResidue.java	/^package kstar;$/;"	p
kstar	kstar/Amber96ext.java	/^package kstar;$/;"	p
kstar	kstar/AminoAcidTemplates.java	/^package kstar;$/;"	p
kstar	kstar/Atom.java	/^package kstar;$/;"	p
kstar	kstar/BBMinimizer.java	/^package kstar;$/;"	p
kstar	kstar/Backbone.java	/^package kstar;$/;"	p
kstar	kstar/Backrub.java	/^package kstar;$/;"	p
kstar	kstar/BackrubMinimizer.java	/^package kstar;$/;"	p
kstar	kstar/Backrubs.java	/^package kstar;$/;"	p
kstar	kstar/BoundFlags.java	/^package kstar;$/;"	p
kstar	kstar/BranchTree.java	/^package kstar;$/;"	p
kstar	kstar/CloseLoop.java	/^package kstar;$/;"	p
kstar	kstar/CommucObj.java	/^package kstar;$/;"	p
kstar	kstar/ConfPair.java	/^package kstar;$/;"	p
kstar	kstar/DEE.java	/^package kstar;$/;"	p
kstar	kstar/DEEGoldstein.java	/^package kstar;$/;"	p
kstar	kstar/DEEGoldsteinPairs.java	/^package kstar;$/;"	p
kstar	kstar/DEEGoldsteinTriples.java	/^package kstar;$/;"	p
kstar	kstar/DEEIndirect.java	/^package kstar;$/;"	p
kstar	kstar/DEESplit1f.java	/^package kstar;$/;"	p
kstar	kstar/DEESplit2f.java	/^package kstar;$/;"	p
kstar	kstar/EEF1.java	/^package kstar;$/;"	p
kstar	kstar/EnvironmentVars.java	/^package kstar;$/;"	p
kstar	kstar/ExpFunction.java	/^package kstar;$/;"	p
kstar	kstar/ExpansionQueue.java	/^package kstar;$/;"	p
kstar	kstar/ForceField.java	/^package kstar;$/;"	p
kstar	kstar/FullStructureSwitch.java	/^package kstar;$/;"	p
kstar	kstar/GenericResidueTemplates.java	/^package kstar;$/;"	p
kstar	kstar/InteractionGraph.java	/^package kstar;$/;"	p
kstar	kstar/KSParser.java	/^package kstar;$/;"	p
kstar	kstar/KStar.java	/^package kstar;$/;"	p
kstar	kstar/KSthread.java	/^package kstar;$/;"	p
kstar	kstar/LoopClosureAdjustment.java	/^package kstar;$/;"	p
kstar	kstar/MPItoThread.java	/^package kstar;$/;"	p
kstar	kstar/MSAStar.java	/^package kstar;$/;"	p
kstar	kstar/MSMinBounds.java	/^package kstar;$/;"	p
kstar	kstar/MinDEEIntervals.java	/^package kstar;$/;"	p
kstar	kstar/Molecule.java	/^package kstar;$/;"	p
kstar	kstar/MutationManager.java	/^package kstar;$/;"	p
kstar	kstar/OneMutation.java	/^package kstar;$/;"	p
kstar	kstar/PDBChemModel.java	/^package kstar;$/;"	p
kstar	kstar/PMinimizer.java	/^package kstar;$/;"	p
kstar	kstar/PairwiseEnergyMatrix.java	/^package kstar;$/;"	p
kstar	kstar/ParamSet.java	/^package kstar;$/;"	p
kstar	kstar/PartialStructureSwitch.java	/^package kstar;$/;"	p
kstar	kstar/PertFileHandler.java	/^package kstar;$/;"	p
kstar	kstar/Perturbation.java	/^package kstar;$/;"	p
kstar	kstar/PerturbationSelector.java	/^package kstar;$/;"	p
kstar	kstar/ProbeStericCheck.java	/^package kstar;$/;"	p
kstar	kstar/ProlineFlip.java	/^package kstar;$/;"	p
kstar	kstar/PrunedRotamers.java	/^package kstar;$/;"	p
kstar	kstar/QueueNode.java	/^package kstar;$/;"	p
kstar	kstar/RamachandranChecker.java	/^package kstar;$/;"	p
kstar	kstar/ReducedEnergyMatrix.java	/^package kstar;$/;"	p
kstar	kstar/ResSymmetry.java	/^package kstar;$/;"	p
kstar	kstar/Residue.java	/^package kstar;$/;"	p
kstar	kstar/RotInfo.java	/^package kstar;$/;"	p
kstar	kstar/RotMatrix.java	/^package kstar;$/;"	p
kstar	kstar/RotTypeMap.java	/^package kstar;$/;"	p
kstar	kstar/RotamerLibrary.java	/^package kstar;$/;"	p
kstar	kstar/RotamerSearch.java	/^package kstar;$/;"	p
kstar	kstar/RyanComparable.java	/^package kstar;$/;"	p
kstar	kstar/RyanQuickSort.java	/^package kstar;$/;"	p
kstar	kstar/SamplingEEntries.java	/^package kstar;$/;"	p
kstar	kstar/SaveMolecule.java	/^package kstar;$/;"	p
kstar	kstar/Shear.java	/^package kstar;$/;"	p
kstar	kstar/SimpleMinimizer.java	/^package kstar;$/;"	p
kstar	kstar/StericCheck.java	/^package kstar;$/;"	p
kstar	kstar/Strand.java	/^package kstar;$/;"	p
kstar	kstar/StrandRCs.java	/^package kstar;$/;"	p
kstar	kstar/StrandRotamers.java	/^package kstar;$/;"	p
kstar	kstar/SturmSolver.java	/^package kstar;$/;"	p
kstar	kstar/ThreadElement.java	/^package kstar;$/;"	p
kstar	kstar/ThreadMessage.java	/^package kstar;$/;"	p
kstar	kstar/TreeEdge.java	/^package kstar;$/;"	p
kstar	kstar/TreeNode.java	/^package kstar;$/;"	p
kstar	kstar/TripeptideClosure.java	/^package kstar;$/;"	p
kstar	kstar/VolModule.java	/^package kstar;$/;"	p
lB	mpi/Datatype.java	/^  private native int lB();$/;"	m	class:Datatype	file:
lambda	kstar/CommucObj.java	/^	float lambda = (float)Math.pow(10, 38);$/;"	f	class:CommucObj
lambda	kstar/MutationManager.java	/^	float lambda = (float)Math.pow(10,38);$/;"	f	class:MutationManager
lambda	kstar/TreeEdge.java	/^    private LinkedHashSet<Integer> lambda = null; \/\/the lambda set (vertices have molecule index-relative numbering)$/;"	f	class:TreeEdge	file:
lambdaSet	BDAStar/BWMStarNode.java	/^    private Set<? extends Position> lambdaSet;$/;"	f	class:BWMStarNode	file:
lambdai	kstar/EEF1.java	/^	float lambdai[] = new float[numAtTypesEEF1];$/;"	f	class:EEF1
lazyPoll	kstar/TreeEdge.java	/^        public T lazyPoll()$/;"	m	class:TreeEdge.LazyHeap
lb	mpi/Datatype.java	/^  protected int lb, ub ;$/;"	f	class:Datatype
lbSet	mpi/Datatype.java	/^  protected boolean ubSet, lbSet ;$/;"	f	class:Datatype
lc	kstar/TreeNode.java	/^	private TreeNode lc = null; \/\/left child of this node$/;"	f	class:TreeNode	file:
leftChild	kstar/TreeEdge.java	/^    TreeNode leftChild;$/;"	f	class:TreeEdge
leftChildren	BDAStar/BWMAStarNode.java	/^    private PriorityQueue<BWMAStarNode> leftChildren;$/;"	f	class:BWMAStarNode	file:
leftEnergy	kstar/TreeEdge.java	/^        double leftEnergy;$/;"	f	class:TreeEdge.Conf
leftHeapMap	kstar/TreeEdge.java	/^    Map<String, PriorityQueue<Conf>> leftHeapMap;$/;"	f	class:TreeEdge
leftSubtree	BDAStar/CopyOfBWMAStarNode.java	/^    private CopyOfBWMAStarNode leftSubtree;$/;"	f	class:CopyOfBWMAStarNode	file:
len0	kstar/TripeptideClosure.java	/^  double[] len0 = new double[6], bondAngle0 = new double[7], t_ang0 = new double[2];$/;"	f	class:TripeptideClosure
len_aa	kstar/TripeptideClosure.java	/^  double[] len_na = new double[3], len_ac = new double[3], len_aa = new double[3];$/;"	f	class:TripeptideClosure
len_ac	kstar/TripeptideClosure.java	/^  double[] len_na = new double[3], len_ac = new double[3], len_aa = new double[3];$/;"	f	class:TripeptideClosure
len_na	kstar/TripeptideClosure.java	/^  double[] len_na = new double[3], len_ac = new double[3], len_aa = new double[3];$/;"	f	class:TripeptideClosure
length_buf	mpi/Request.java	/^  protected int[] length_buf;$/;"	f	class:Request
level	kstar/QueueNode.java	/^	public int level;$/;"	f	class:QueueNode
library	BDAStar/BWMSolutionSpace.java	/^    private RotamerLibrary library;$/;"	f	class:BWMSolutionSpace	file:
ligCoord	kstar/PartialStructureSwitch.java	/^    ArrayList< float[]> ligCoord = new ArrayList< float[]>();\/\/Ligand coordinates.  First index: parameter state.  Second index: Coordinates$/;"	f	class:PartialStructureSwitch
ligMaxTrans	kstar/BackrubMinimizer.java	/^	float ligMaxTrans = 1.2f; \/\/the maximum ligand translation allowed (computed as allowed CA displacement)$/;"	f	class:BackrubMinimizer
ligPresent	kstar/MutationManager.java	/^	boolean ligPresent = false;$/;"	f	class:MutationManager
ligRH	kstar/SimpleMinimizer.java	/^	StrandRotamers ligRH = null;$/;"	f	class:SimpleMinimizer
ligResNum	kstar/PartialStructureSwitch.java	/^    int ligResNum = -1;\/\/Molecule residue number for the ligand; -1 if the ligand is not affected by this perturbation or if there is none$/;"	f	class:PartialStructureSwitch
ligRotSize	kstar/BBMinimizer.java	/^	float ligRotSize = 0.5f; \/\/initial rotation angle size (in degrees)$/;"	f	class:BBMinimizer
ligRotSize	kstar/BackrubMinimizer.java	/^	final float ligRotSize = 0.5f; \/\/initial rotation angle size (in degrees)$/;"	f	class:BackrubMinimizer
ligTransSize	kstar/BBMinimizer.java	/^	float ligTransSize = 0.5f; \/\/initial translation size (in angstrom)$/;"	f	class:BBMinimizer
ligTransSize	kstar/BackrubMinimizer.java	/^	final float ligTransSize = 0.5f; \/\/initial translation size (in angstrom)$/;"	f	class:BackrubMinimizer
ligandNum	kstar/Amber96ext.java	/^	int ligandNum = -1;$/;"	f	class:Amber96ext
loadAminoAcidTemplates	kstar/Amber96PolyPeptideResidue.java	/^	private void loadAminoAcidTemplates() {$/;"	m	class:Amber96PolyPeptideResidue	file:
loadErefMatrix	kstar/RotamerSearch.java	/^	public static float[][] loadErefMatrix(String fileName){$/;"	m	class:RotamerSearch
loadMolecule	kstar/KSParser.java	/^	public MolParameters loadMolecule(ParamSet sParams, int curStrForMatrix){	$/;"	m	class:KSParser
loadMutationList	kstar/KSParser.java	/^	public Set<OneMutation> loadMutationList(String fName, int numMutable, boolean PEMcomp) {$/;"	m	class:KSParser
loadMutationParams	kstar/KSParser.java	/^	private void loadMutationParams(ParamSet sParams, MolParameters mp) {$/;"	m	class:KSParser	file:
loadPairwiseEnergyMatrices	kstar/KSParser.java	/^	private void loadPairwiseEnergyMatrices(ParamSet sParams, RotamerSearch rs, String minMatrixFile, boolean doMinimize, String maxMatrixFile,$/;"	m	class:KSParser	file:
loadPairwiseEnergyMatrices	kstar/RotamerSearch.java	/^	public void loadPairwiseEnergyMatrices(String allRotamerPairsEnergyName, boolean minMatrix) {$/;"	m	class:RotamerSearch
loadStrandParams	kstar/KSParser.java	/^	private void loadStrandParams(ParamSet sParams, MolParameters mp, int curStrForMatrix){$/;"	m	class:KSParser	file:
loadUnboundPairwiseEnergyMatrices	kstar/KSParser.java	/^	private void loadUnboundPairwiseEnergyMatrices(ParamSet sParams, RotamerSearch rs, String minMatrixFile, boolean doMinimize, String maxMatrixFile,$/;"	m	class:KSParser	file:
loadVolFile	kstar/RotamerLibrary.java	/^	public void loadVolFile (){$/;"	m	class:RotamerLibrary
log	kstar/ExpFunction.java	/^	public BigDecimal log(BigDecimal num){$/;"	m	class:ExpFunction
logPS	kstar/KSParser.java	/^		private PrintStream logPS = null;$/;"	f	class:KSParser.DACSthread	file:
logPS	kstar/MutationManager.java	/^	PrintStream logPS = null;$/;"	f	class:MutationManager
m	kstar/Amber96ext.java	/^	Molecule m;$/;"	f	class:Amber96ext
m	kstar/BBMinimizer.java	/^	Molecule m = null;$/;"	f	class:BBMinimizer
m	kstar/BackrubMinimizer.java	/^	Molecule m = null;$/;"	f	class:BackrubMinimizer
m	kstar/CloseLoop.java	/^	Molecule m;$/;"	f	class:CloseLoop
m	kstar/EEF1.java	/^	Molecule m = null;$/;"	f	class:EEF1
m	kstar/KSParser.java	/^		Molecule m;$/;"	f	class:KSParser.MolParameters
m	kstar/Perturbation.java	/^    Molecule m;\/\/The affected molecule$/;"	f	class:Perturbation
m	kstar/PerturbationSelector.java	/^    Molecule m;$/;"	f	class:PerturbationSelector
m	kstar/RotamerSearch.java	/^	Molecule m;		\/\/ the molecule$/;"	f	class:RotamerSearch
m	kstar/SimpleMinimizer.java	/^	Molecule m = null;$/;"	f	class:SimpleMinimizer
m	kstar/StericCheck.java	/^	Molecule m = null;$/;"	f	class:StericCheck
m	kstar/VolModule.java	/^	Molecule m;					\/\/ Molecule for which this surface exists$/;"	f	class:VolModule
machineName	kstar/CommucObj.java	/^	String machineName = null;$/;"	f	class:CommucObj
magicBullet	kstar/DEE.java	/^	boolean magicBullet = false;$/;"	f	class:DEE
magicBulletNum	kstar/DEEGoldsteinTriples.java	/^        int magicBulletNum = 5;\/\/Number of magic bullets per triple of positions$/;"	f	class:DEEGoldsteinTriples
magicBulletNumTriples	kstar/CommucObj.java	/^        int magicBulletNumTriples;$/;"	f	class:CommucObj
magicBulletNumTriples	kstar/MutationManager.java	/^        int magicBulletNumTriples;$/;"	f	class:MutationManager
magicBulletTriples	kstar/CommucObj.java	/^        boolean magicBulletTriples;$/;"	f	class:CommucObj
magicBulletTriples	kstar/MutationManager.java	/^        boolean magicBulletTriples;$/;"	f	class:MutationManager
main	BDAStarTest/BDAStarNodeTest.java	/^    public static void main (String[] args)$/;"	m	class:BDAStarNodeTest
main	BDAStarTest/BDAStarTest.java	/^    public static void main (String[] args)$/;"	m	class:BDAStarTest
main	BDAStarTest/BWMStarNodeTest.java	/^    public static void main (String[] args)$/;"	m	class:BWMStarNodeTest
main	BDAStarTest/Playground.java	/^	public static void main(String[] arg)$/;"	m	class:Playground
main	BDAStarTest/ProteinConformationTrieTest.java	/^	public static void main(String[] args)$/;"	m	class:ProteinConformationTrieTest
main	BranchDecomposition/BranchDecomposition.java	/^	public static void main(String[] args) {$/;"	m	class:BranchDecomposition
main	Miscellany/ComputeKStarScore.java	/^	public static void main (String[] args)$/;"	m	class:ComputeKStarScore
main	Tests/EnergyMatrixComparison.java	/^	public static void main(String[] arg)$/;"	m	class:EnergyMatrixComparison
main	kstar/KStar.java	/^	public static void main (String[] args)$/;"	m	class:KStar
mapPDBresNumToMolResNum	kstar/Molecule.java	/^	public int mapPDBresNumToMolResNum(String pdbResNum){$/;"	m	class:Molecule
mapPDBresNumToMolResNum	kstar/Molecule.java	/^	public int mapPDBresNumToMolResNum(int pdbResNum){$/;"	m	class:Molecule
mapPDBresNumToStrandResNum	kstar/Strand.java	/^	public int mapPDBresNumToStrandResNum(int pdbResNum){$/;"	m	class:Strand
markBonded	kstar/Molecule.java	/^	private void markBonded(int i, int j){$/;"	m	class:Molecule	file:
mass	kstar/Atom.java	/^	double	mass;				\/\/ atomic mass$/;"	f	class:Atom
masterMutationSearchHelper	kstar/RotamerSearch.java	/^	public void masterMutationSearchHelper(int depth, int maxDepth,$/;"	m	class:RotamerSearch
match2Atoms	kstar/Amber96ext.java	/^	private boolean match2Atoms(int atType1, int atType2, int known1, int known2) {$/;"	m	class:Amber96ext	file:
match3Atoms	kstar/Amber96ext.java	/^	private boolean match3Atoms(int atType1, int atType2, int atType3,$/;"	m	class:Amber96ext	file:
match4Atoms	kstar/Amber96ext.java	/^	private boolean match4Atoms(int atType1, int atType2, int atType3, int atType4,$/;"	m	class:Amber96ext	file:
maxDist	kstar/MinDEEIntervals.java	/^	final float maxDist = 9.0f;$/;"	f	class:MinDEEIntervals
maxE	kstar/BackrubMinimizer.java	/^	private double maxE = -bigE; \/\/the max computed energy (among sterically-allowed conformations)$/;"	f	class:BackrubMinimizer	file:
maxE	kstar/SamplingEEntries.java	/^	public float minE, maxE;$/;"	f	class:SamplingEEntries
maxEbrSample	kstar/BackrubMinimizer.java	/^	private float maxEbrSample[][] = null; \/\/the backrub angles for each of the flexible residues (in the system strand) that give the max energy$/;"	f	class:BackrubMinimizer	file:
maxEnergy	kstar/InteractionGraph.java	/^	private float maxEnergy[][] = null; \/\/ SJ, added for keeping the max abs energy value between pair of residues$/;"	f	class:InteractionGraph	file:
maxIntScale	kstar/CommucObj.java	/^	float maxIntScale = 1.0f;$/;"	f	class:CommucObj
maxIntScale	kstar/MutationManager.java	/^	float maxIntScale = 1.0f;$/;"	f	class:MutationManager
maxKSconfs	kstar/CommucObj.java	/^	public BigInteger maxKSconfs;$/;"	f	class:CommucObj
maxKSconfs	kstar/MutationManager.java	/^	private BigInteger maxKSconfs;$/;"	f	class:MutationManager	file:
maxMovement	kstar/SimpleMinimizer.java	/^	double maxMovement = 9.0;$/;"	f	class:SimpleMinimizer
maxParams	kstar/Perturbation.java	/^    float maxParams[];\/\/The maximum parameter value for each state of this perturbation$/;"	f	class:Perturbation
maxPrecision	kstar/ExpFunction.java	/^	final int maxPrecision = 8; \/\/the number of decimal digits to which the BigDecimal numbers must be accurate$/;"	f	class:ExpFunction
maxScale	kstar/DEEGoldsteinPairs.java	/^	float maxScale = 1.0f;$/;"	f	class:DEEGoldsteinPairs
maxScale	kstar/MinDEEIntervals.java	/^	float maxScale = 1.0f;$/;"	f	class:MinDEEIntervals
max_soln	kstar/TripeptideClosure.java	/^  int max_soln = 16;$/;"	f	class:TripeptideClosure
merge	mpi/Intercomm.java	/^  private native long merge(boolean high);$/;"	m	class:Intercomm	file:
midC	kstar/Shear.java	/^    public Atom midC, midO;\/\/the carbonyl carbon and oxygen of the middle peptide link$/;"	f	class:Shear
midO	kstar/Shear.java	/^    public Atom midC, midO;\/\/the carbonyl carbon and oxygen of the middle peptide link$/;"	f	class:Shear
minBound	kstar/CommucObj.java	/^		float minBound = 0.0f;$/;"	f	class:CommucObj.ConfInfo
minDEEfile	kstar/CommucObj.java	/^	String minDEEfile = null;$/;"	f	class:CommucObj
minDEEfile	kstar/MutationManager.java	/^	String minDEEfile = null;$/;"	f	class:MutationManager
minDEEtypeMS	kstar/CommucObj.java	/^	boolean minDEEtypeMS = false;$/;"	f	class:CommucObj
minDiff	kstar/DEE.java	/^	protected double minDiff = -(float)Math.pow(10,30);$/;"	f	class:DEE
minDistance	kstar/InteractionGraph.java	/^	private float minDistance[][] = null; \/\/ SJ, added for keeping track of the min distance between pair of residues$/;"	f	class:InteractionGraph	file:
minE	kstar/BackrubMinimizer.java	/^	private double minE = bigE; \/\/the minimum computed energy$/;"	f	class:BackrubMinimizer	file:
minE	kstar/CommucObj.java	/^		float minE = 0.0f;$/;"	f	class:CommucObj.ConfInfo
minE	kstar/SamplingEEntries.java	/^	public float minE, maxE;$/;"	f	class:SamplingEEntries
minEbrSample	kstar/BackrubMinimizer.java	/^	private float minEbrSample[][] = null; \/\/the backrub angles for each of the flexible residues (in the system strand) that give the minimum energy$/;"	f	class:BackrubMinimizer	file:
minEmin	kstar/BoundFlags.java	/^	double minEmin = bigE; \/\/used in Ec computation$/;"	f	class:BoundFlags
minEmin	kstar/MSMinBounds.java	/^	double minEmin = bigE; \/\/used in Ec computation$/;"	f	class:MSMinBounds
minParams	kstar/Perturbation.java	/^    float minParams[];\/\/The minimum parameter value for each state of this perturbation$/;"	f	class:Perturbation
minRatioDiff	kstar/CommucObj.java	/^	double minRatioDiff = 0.0;$/;"	f	class:CommucObj
minRatioDiff	kstar/MutationManager.java	/^	double minRatioDiff = 0.0;$/;"	f	class:MutationManager
min_rmsd	kstar/PerturbationSelector.java	/^    float min_rmsd;$/;"	f	class:PerturbationSelector
minimize	kstar/PMinimizer.java	/^        public void minimize(int numSteps){$/;"	m	class:PMinimizer
minimize	kstar/SimpleMinimizer.java	/^	public void minimize(int numSteps){$/;"	m	class:SimpleMinimizer
minimizeBB	kstar/CommucObj.java	/^	boolean minimizeBB = false;$/;"	f	class:CommucObj
minimizeBB	kstar/DEE.java	/^	boolean minimizeBB = false;$/;"	f	class:DEE
minimizeBB	kstar/MutationManager.java	/^	boolean minimizeBB = false;$/;"	f	class:MutationManager
minimizeFull	kstar/BBMinimizer.java	/^	public void minimizeFull(boolean pemComp){$/;"	m	class:BBMinimizer
minimizeFull	kstar/BackrubMinimizer.java	/^	public void minimizeFull(){$/;"	m	class:BackrubMinimizer
minimizeFull	kstar/BackrubMinimizer.java	/^	public void minimizeFull(boolean shellRun, boolean templateOnly){$/;"	m	class:BackrubMinimizer
minimizeFullHelper	kstar/BackrubMinimizer.java	/^	private void minimizeFullHelper(int curDepth, float curEbrSample[][], boolean shellRun, boolean templateOnly, $/;"	m	class:BackrubMinimizer	file:
minimizePerts	kstar/CommucObj.java	/^        boolean minimizePerts;$/;"	f	class:CommucObj
minimizePerts	kstar/MutationManager.java	/^        boolean minimizePerts;$/;"	f	class:MutationManager
minimizePerturbations	kstar/PMinimizer.java	/^        boolean minimizePerturbations;\/\/If true, minimize perturbations in addition to the usual sidechain dihedrals$/;"	f	class:PMinimizer
minimizePerturbations	kstar/RotamerSearch.java	/^        boolean minimizePerturbations;\/\/When doing DEEPer, indicates perturbation-minimizing mode (i.e. DEE\/A* step)$/;"	f	class:RotamerSearch
mode	mpi/Request.java	/^  protected int mode ;$/;"	f	class:Request
modelAtomNumber	kstar/Atom.java	/^	int	modelAtomNumber=-1;				\/\/ a temp variable used on writing to file$/;"	f	class:Atom
modifyGraphH	BranchDecomposition/BranchDecompositionH.java	/^	private BranchTree modifyGraphH(BranchTree H, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy, int vi[], BranchNode singleSink, boolean eigen){$/;"	m	class:BranchDecompositionH	file:
modifyGraphHaddEdges	BranchDecomposition/BranchDecompositionH.java	/^	private void modifyGraphHaddEdges(BranchTree H, BranchNode vn, LinkedHashSet<String> nodes){$/;"	m	class:BranchDecompositionH	file:
modifyGraphHhelper23sep	BranchDecomposition/BranchDecompositionH.java	/^	private void modifyGraphHhelper23sep(BranchTree H, BranchNode vn, LinkedHashSet<BranchEdge> s){$/;"	m	class:BranchDecompositionH	file:
modifyGraphHhelperEigen	BranchDecomposition/BranchDecompositionH.java	/^	private void modifyGraphHhelperEigen(BranchTree H, BranchNode vn, LinkedHashSet<BranchEdge> s){$/;"	m	class:BranchDecompositionH	file:
modp	kstar/SturmSolver.java	/^    public int modp(poly u, poly v, poly r)$/;"	m	class:SturmSolver
modrf	kstar/SturmSolver.java	/^    boolean modrf(int ord, double coef[], double a, double b, double val[])$/;"	m	class:SturmSolver
molAtNumCA	kstar/BBMinimizer.java	/^	private int molAtNumCA[] = null; \/\/the molecule atom numbers for the CA atoms for each residue$/;"	f	class:BBMinimizer	file:
molCurCA	kstar/BBMinimizer.java	/^	private double molCurCA[][] = null; \/\/ the current CA coordinates for each residue$/;"	f	class:BBMinimizer	file:
molCurFiPsiDisp	kstar/BBMinimizer.java	/^	float molCurFiPsiDisp[][] = null; \/\/the current displacement from the initial phi\/psi angle for each residue$/;"	f	class:BBMinimizer
molResMap	kstar/TreeEdge.java	/^    public int molResMap[] = null; \/\/maps redesign-order indices to molecule-relative residue numbers$/;"	f	class:TreeEdge
molStartCA	kstar/BBMinimizer.java	/^	double molStartCA[][] = null; \/\/ the position of the initial CA for each residue$/;"	f	class:BBMinimizer
moleculeAtomNumber	kstar/Atom.java	/^	int	moleculeAtomNumber=-1;		\/\/ the atom number in this molecule$/;"	f	class:Atom
moleculeResidueNumber	kstar/Atom.java	/^	int	moleculeResidueNumber=-1;		\/\/ the number of the residue containing this atom$/;"	f	class:Atom
moleculeResidueNumber	kstar/Residue.java	/^	int	moleculeResidueNumber=-1;	\/\/ The molecule relative residue number$/;"	f	class:Residue
mols	kstar/KSParser.java	/^	    Molecule[] mols = new Molecule[3];$/;"	f	class:KSParser
moreConformations	BDAStar/BDAStarNode.java	/^    public boolean moreConformations () {$/;"	m	class:BDAStarNode
moreConformations	BDAStar/BWMAStarNode.java	/^    public boolean moreConformations()$/;"	m	class:BWMAStarNode
moreConformations	BDAStar/BWMStarNode.java	/^    private boolean moreConformations (Conformation out) $/;"	m	class:BWMStarNode	file:
moreConformations	BDAStar/BWMStarNode.java	/^    public boolean moreConformations() {$/;"	m	class:BWMStarNode
moreConformations	BDAStar/CopyOfBWMAStarNode.java	/^    public boolean moreConformations()$/;"	m	class:CopyOfBWMAStarNode
moreConformations	kstar/TreeEdge.java	/^    public boolean moreConformations(RotTypeMap[] bestPosAARot, int[] state)$/;"	m	class:TreeEdge
moreRootConformations	kstar/TreeEdge.java	/^	public boolean moreRootConformations()$/;"	m	class:TreeEdge
mpi	mpi/CartParms.java	/^package mpi;$/;"	p
mpi	mpi/Cartcomm.java	/^package mpi;$/;"	p
mpi	mpi/Comm.java	/^package mpi;$/;"	p
mpi	mpi/Datatype.java	/^package mpi;$/;"	p
mpi	mpi/Errhandler.java	/^package mpi;$/;"	p
mpi	mpi/Freeable.java	/^package mpi;$/;"	p
mpi	mpi/GraphParms.java	/^package mpi;$/;"	p
mpi	mpi/Graphcomm.java	/^package mpi;$/;"	p
mpi	mpi/Group.java	/^package mpi;$/;"	p
mpi	mpi/Intercomm.java	/^package mpi;$/;"	p
mpi	mpi/Intracomm.java	/^package mpi;$/;"	p
mpi	mpi/MPI.java	/^package mpi;$/;"	p
mpi	mpi/MPIException.java	/^package mpi;$/;"	p
mpi	mpi/Op.java	/^package mpi;$/;"	p
mpi	mpi/Prequest.java	/^package mpi;$/;"	p
mpi	mpi/Request.java	/^package mpi;$/;"	p
mpi	mpi/ShiftParms.java	/^package mpi;$/;"	p
mpi	mpi/Status.java	/^package mpi;$/;"	p
mpi	mpi/User_function.java	/^package mpi;$/;"	p
mpiRun	kstar/KSParser.java	/^		static boolean mpiRun = false; \/\/determines if this is an MPI run$/;"	f	class:KSParser
mpiRun	kstar/MPItoThread.java	/^	static boolean mpiRun = false;$/;"	f	class:MPItoThread
msp	kstar/CommucObj.java	/^	int msp[] = null;$/;"	f	class:CommucObj
msp	kstar/MutationManager.java	/^	int msp[] = null;$/;"	f	class:MutationManager
multiplyMatrices	kstar/RotMatrix.java	/^        float[][] multiplyMatrices(float[][] M1, float[][] M2){$/;"	m	class:RotMatrix
mutArray	kstar/MutationManager.java	/^	OneMutation mutArray[] = null;$/;"	f	class:MutationManager
mutNum	kstar/OneMutation.java	/^	int mutNum = -1;$/;"	f	class:OneMutation
mutRes2MutIndex	kstar/DEE.java	/^	int mutRes2MutIndex[] = null;$/;"	f	class:DEE
mutRes2Strand	kstar/BackrubMinimizer.java	/^	int mutRes2Strand[] = null;$/;"	f	class:BackrubMinimizer
mutRes2Strand	kstar/CommucObj.java	/^	int mutRes2Strand[] = null;$/;"	f	class:CommucObj
mutRes2Strand	kstar/DEE.java	/^	int mutRes2Strand[] = null;$/;"	f	class:DEE
mutRes2Strand	kstar/KSParser.java	/^		int mutRes2Strand[];$/;"	f	class:KSParser.MolParameters
mutRes2Strand	kstar/MutationManager.java	/^	int mutRes2Strand[] = null;$/;"	f	class:MutationManager
mutRes2Strand	kstar/RotamerSearch.java	/^	int mutRes2Strand[] = null;$/;"	f	class:RotamerSearch
mutRes2Strand	kstar/StericCheck.java	/^	int mutRes2Strand[] = null;$/;"	f	class:StericCheck
mutRes2StrandMutIndex	kstar/BackrubMinimizer.java	/^	int mutRes2StrandMutIndex[] = null;$/;"	f	class:BackrubMinimizer
mutRes2StrandMutIndex	kstar/CommucObj.java	/^	int mutRes2StrandMutIndex[] = null;$/;"	f	class:CommucObj
mutRes2StrandMutIndex	kstar/KSParser.java	/^		int mutRes2StrandMutIndex[];$/;"	f	class:KSParser.MolParameters
mutRes2StrandMutIndex	kstar/MutationManager.java	/^	int mutRes2StrandMutIndex[] = null;	$/;"	f	class:MutationManager
mutRes2StrandMutIndex	kstar/RotamerSearch.java	/^	int mutRes2StrandMutIndex[] = null;$/;"	f	class:RotamerSearch
mutRes2StrandMutIndex	kstar/StericCheck.java	/^	int mutRes2StrandMutIndex[] = null;$/;"	f	class:StericCheck
mutableSpots	kstar/CommucObj.java	/^	int mutableSpots = 0;$/;"	f	class:CommucObj
mutableSpots	kstar/MutationManager.java	/^	int mutableSpots = 0;$/;"	f	class:MutationManager
mutationNumber	kstar/CommucObj.java	/^	int mutationNumber = -1;$/;"	f	class:CommucObj
n1	BranchDecomposition/BranchEdge.java	/^	private BranchNode n1 = null; \/\/the first node adjacent to the edge in the rooted tree$/;"	f	class:BranchEdge	file:
n2	BranchDecomposition/BranchEdge.java	/^	private BranchNode n2 = null; \/\/the second node adjacent to the edge in the rooted tree$/;"	f	class:BranchEdge	file:
n_soln	kstar/TripeptideClosure.java	/^  int n_soln;$/;"	f	class:TripeptideClosure
name	kstar/Atom.java	/^	String	name;									\/\/ the atom name ie. CA, CB, CG, ...$/;"	f	class:Atom
name	kstar/Molecule.java	/^	String	name;$/;"	f	class:Molecule
name	kstar/Residue.java	/^	String name = "";			\/\/ The short residue name "GLU"$/;"	f	class:Residue
name	kstar/Strand.java	/^	String name = "";		\/\/ The strand name$/;"	f	class:Strand
name	kstar/TreeNode.java	/^	private int name = -1; \/\/the name of this node$/;"	f	class:TreeNode	file:
newBuffer	mpi/Intracomm.java	/^  private Object newBuffer(Object template) {$/;"	m	class:Intracomm	file:
newMessages	kstar/ThreadElement.java	/^	BlockingDeque<ThreadMessage> newMessages = null;$/;"	f	class:ThreadElement
next	kstar/PrunedRotamers.java	/^	  public RotInfo<T> next() {$/;"	m	class:PrunedRotIterator
nextBestConformation	kstar/TreeEdge.java	/^    public void nextBestConformation(RotTypeMap bestPosAARot[], int[] bestState)$/;"	m	class:TreeEdge
nextBestEnergy	kstar/TreeEdge.java	/^    public double nextBestEnergy()$/;"	m	class:TreeEdge
nextBestScore	BDAStar/BDAStarNode.java	/^    public double nextBestScore()$/;"	m	class:BDAStarNode
nextBestScore	BDAStar/BWMAStarNode.java	/^    public double nextBestScore()$/;"	m	class:BWMAStarNode
nextBestScore	BDAStar/BWMStarNode.java	/^    public double nextBestScore(Conformation partialConformation)$/;"	m	class:BWMStarNode
nextBestScore	BDAStar/CopyOfBWMAStarNode.java	/^    public double nextBestScore()$/;"	m	class:CopyOfBWMAStarNode
nextItem	kstar/PrunedRotamers.java	/^	  private RotInfo<T> nextItem = null;$/;"	f	class:PrunedRotIterator	file:
nextNode	kstar/QueueNode.java	/^	public QueueNode nextNode;$/;"	f	class:QueueNode
noMatchInt	kstar/Amber96ext.java	/^	private final int noMatchInt = 9999;$/;"	f	class:Amber96ext	file:
nodeIndexOffset	kstar/MSAStar.java	/^	private int nodeIndexOffset[] = null;$/;"	f	class:MSAStar	file:
nodeName1	kstar/TreeEdge.java	/^    private int nodeName1 = -1; \/\/the name of the first incident node$/;"	f	class:TreeEdge	file:
nodeName2	kstar/TreeEdge.java	/^    private int nodeName2 = -1; \/\/the name of the second incident node$/;"	f	class:TreeEdge	file:
nodeNum	kstar/QueueNode.java	/^	public int nodeNum;$/;"	f	class:QueueNode
nonBonded	kstar/Molecule.java	/^	int	nonBonded[] = null;			\/\/ List of non bonded pairs$/;"	f	class:Molecule
nonBondedTerms	kstar/Amber96ext.java	/^	double nonBondedTerms[], halfNonBondedTerms[];$/;"	f	class:Amber96ext
nonProtLig	kstar/PartialStructureSwitch.java	/^    boolean nonProtLig;\/\/Is there a non-protein ligand?$/;"	f	class:PartialStructureSwitch
norm	kstar/RotMatrix.java	/^        double norm(double[] vec){$/;"	m	class:RotMatrix
norm	kstar/RotMatrix.java	/^        float norm(float[] vec){$/;"	m	class:RotMatrix
normsq	kstar/RotMatrix.java	/^        double normsq(double[] vec){$/;"	m	class:RotMatrix
normsq	kstar/RotMatrix.java	/^        float normsq(float[] vec){$/;"	m	class:RotMatrix
nterm	kstar/Residue.java	/^	boolean nterm = false; \/\/Is an nterminal residue$/;"	f	class:Residue
nullHandle	mpi/Comm.java	/^  protected static long nullHandle ;$/;"	f	class:Comm
numAAAtPosition	BDAStar/BWMSolutionSpace.java	/^    private int numAAAtPosition[];$/;"	f	class:BWMSolutionSpace	file:
numAACTs	kstar/AminoAcidTemplates.java	/^	int numAAs, numAANTs, numAACTs;$/;"	f	class:AminoAcidTemplates
numAANTs	kstar/AminoAcidTemplates.java	/^	int numAAs, numAANTs, numAACTs;$/;"	f	class:AminoAcidTemplates
numAAallowed	kstar/RotamerLibrary.java	/^	private int numAAallowed;              \/\/ Number of AA types read$/;"	f	class:RotamerLibrary	file:
numAAs	kstar/AminoAcidTemplates.java	/^	int numAAs, numAANTs, numAACTs;$/;"	f	class:AminoAcidTemplates
numAAtypes	kstar/DEE.java	/^	int numAAtypes[] = null;$/;"	f	class:DEE
numAddedV	kstar/InteractionGraph.java	/^	private int numAddedV = 0; \/\/the number of vertices currently added to v[]$/;"	f	class:InteractionGraph	file:
numAllowable	kstar/StrandRotamers.java	/^	private int numAllowable[];			\/\/ Number of allowables$/;"	f	class:StrandRotamers	file:
numAtTypesEEF1	kstar/EEF1.java	/^	final int numAtTypesEEF1 = 17;$/;"	f	class:EEF1
numComplexes	kstar/CommucObj.java	/^	int numComplexes = 0;$/;"	f	class:CommucObj
numConfB	kstar/OneMutation.java	/^	BigInteger numConfB = null; \/\/num conformations for the bound sequence$/;"	f	class:OneMutation
numConfUB	kstar/OneMutation.java	/^	BigInteger numConfUB = null; \/\/num conformations for the unbound sequence$/;"	f	class:OneMutation
numConfsAboveLevel	kstar/RotamerSearch.java	/^	BigInteger numConfsAboveLevel[] = null; \/\/at level i, num confs from level i+1 to the last level$/;"	f	class:RotamerSearch
numConfsAboveLevel	kstar/StericCheck.java	/^	BigInteger numConfsAboveLevel[] = null;$/;"	f	class:StericCheck
numConfsBelowLevel	kstar/RotamerSearch.java	/^	BigInteger numConfsBelowLevel[] = null;$/;"	f	class:RotamerSearch
numConfsEvaluated	kstar/RotamerSearch.java	/^	BigInteger numConfsEvaluated = new BigInteger("0");$/;"	f	class:RotamerSearch
numConfsLeft	kstar/RotamerSearch.java	/^	BigInteger numConfsLeft = new BigInteger("0");$/;"	f	class:RotamerSearch
numConfsLeft	kstar/StericCheck.java	/^	BigInteger numConfsLeft = new BigInteger("0");$/;"	f	class:StericCheck
numConfsPrunedByE	kstar/RotamerSearch.java	/^	BigInteger numConfsPrunedByE = new BigInteger("0");$/;"	f	class:RotamerSearch
numConfsPrunedByMinDEE	kstar/RotamerSearch.java	/^	BigInteger numConfsPrunedByMinDEE = new BigInteger("0");	\/\/the number of confs pruned by MinDEE$/;"	f	class:RotamerSearch
numConfsPrunedByS	kstar/RotamerSearch.java	/^	BigInteger numConfsPrunedByS = new BigInteger("0");$/;"	f	class:RotamerSearch
numConfsPrunedByS	kstar/StericCheck.java	/^	BigInteger numConfsPrunedByS = new BigInteger("0");$/;"	f	class:StericCheck
numConfsTotal	kstar/RotamerSearch.java	/^	BigInteger numConfsTotal = new BigInteger("0");$/;"	f	class:RotamerSearch
numDihedrals	kstar/RotamerLibrary.java	/^	private int numDihedrals[];     \/\/ Number of dihedrals per AA$/;"	f	class:RotamerLibrary	file:
numEdges	BranchDecomposition/BranchNode.java	/^	private int numEdges = 0; \/\/number of edges incident with this node$/;"	f	class:BranchNode	file:
numEdges	BranchDecomposition/BranchTree.java	/^	private int numEdges = 0; \/\/the number of edges in the tree$/;"	f	class:BranchTree	file:
numExpanded	kstar/MSAStar.java	/^	int numExpanded = 0;$/;"	f	class:MSAStar
numFlexRes	kstar/BBMinimizer.java	/^	int numFlexRes[] = null; \/\/the number of residues with flexible side-chains (only in the system strand, and not the ligand)$/;"	f	class:BBMinimizer
numFlexRes	kstar/BackrubMinimizer.java	/^	int numFlexRes[] = null; \/\/the number of residues with flexible side-chains (only in the system strand, and not the ligand)$/;"	f	class:BackrubMinimizer
numFlexRes	kstar/SimpleMinimizer.java	/^	int numFlexRes[] = null;$/;"	f	class:SimpleMinimizer
numGRs	kstar/GenericResidueTemplates.java	/^	int numGRs;$/;"	f	class:GenericResidueTemplates
numGeneralDihedParams	kstar/Amber96ext.java	/^	int numGeneralDihedParams = 0; \/\/the number of generic dihedral parameters (that have wildcard X atoms)$/;"	f	class:Amber96ext
numHalfNonBondedTerms	kstar/Amber96ext.java	/^	int numHalfNonBondedTerms = 0;$/;"	f	class:Amber96ext
numInitUnprunedConf	kstar/CommucObj.java	/^	BigInteger numInitUnprunedConf = null;$/;"	f	class:CommucObj
numInitUnprunedConf	kstar/MutationManager.java	/^	BigInteger numInitUnprunedConf = null;$/;"	f	class:MutationManager
numMPositions	BDAStarTest/ProteinConformationTrieTest.java	/^	static int numMPositions = 5;$/;"	f	class:ProteinConformationTrieTest
numMinSteps	kstar/RotamerSearch.java	/^	int numMinSteps = 35; \/\/140$/;"	f	class:RotamerSearch
numMutRes	kstar/BackrubMinimizer.java	/^	int numMutRes; \/\/KER: total number of mutable residues (i.e. what used to be residueMap.length)$/;"	f	class:BackrubMinimizer
numMutable	kstar/DEE.java	/^        protected int numMutable;$/;"	f	class:DEE
numMutable	kstar/PerturbationSelector.java	/^    int numMutable;\/\/Total number of flexible residues$/;"	f	class:PerturbationSelector
numMutable	kstar/StericCheck.java	/^	int numMutable = -1;$/;"	f	class:StericCheck
numMutations	kstar/CommucObj.java	/^	int numMutations = 0;$/;"	f	class:CommucObj
numMutations	kstar/MutationManager.java	/^	int numMutations = 0;$/;"	f	class:MutationManager
numNodes	BranchDecomposition/BranchTree.java	/^	private int numNodes = 0; \/\/the number of nodes in the tree$/;"	f	class:BranchTree	file:
numNodes	kstar/ExpansionQueue.java	/^	public int numNodes;$/;"	f	class:ExpansionQueue
numNodesForLevel	kstar/MSAStar.java	/^	private int numNodesForLevel[] = null;$/;"	f	class:MSAStar	file:
numOfStrands	kstar/KSParser.java	/^		int numOfStrands;$/;"	f	class:KSParser.MolParameters
numPartDihed	kstar/Amber96ext.java	/^	int numPartDihed[] = null;$/;"	f	class:Amber96ext
numPartHalfNonBonded	kstar/Amber96ext.java	/^	int[] numPartHalfNonBonded = new int[0];$/;"	f	class:Amber96ext
numPartNonBonded	kstar/Amber96ext.java	/^	int[] numPartNonBonded = new int[0];$/;"	f	class:Amber96ext
numPartSolv	kstar/Amber96ext.java	/^	int numPartSolv[] = null;$/;"	f	class:Amber96ext
numPerturbations	kstar/PMinimizer.java	/^        int numPerturbations = 0;\/\/number of perturbations; also the size of the next 5 arrays$/;"	f	class:PMinimizer
numPositions	BDAStarTest/BDAStarNodeTest.java	/^    public static int numPositions = 10;$/;"	f	class:BDAStarNodeTest
numPositions	BDAStarTest/ProteinConformationTrieTest.java	/^	static int numPositions = 10;$/;"	f	class:ProteinConformationTrieTest
numProc	kstar/KSParser.java	/^		static int numProc = 1; \/\/number of processors for MPI$/;"	f	class:KSParser
numProc	kstar/MPItoThread.java	/^	static int numProc;$/;"	f	class:MPItoThread
numProtRes	kstar/PartialStructureSwitch.java	/^    int numProtRes;\/\/How many protein residues are affected$/;"	f	class:PartialStructureSwitch
numProteinFlexRes	kstar/FullStructureSwitch.java	/^    int numProteinFlexRes;\/\/Number of flexible protein residues (the last affected residue$/;"	f	class:FullStructureSwitch
numPrunedMin	kstar/DEEGoldsteinTriples.java	/^        int numPrunedMin = 0;$/;"	f	class:DEEGoldsteinTriples
numPrunedRegular	kstar/DEEGoldsteinTriples.java	/^        int numPrunedRegular = 0;$/;"	f	class:DEEGoldsteinTriples
numRCs	kstar/StrandRCs.java	/^       private int numRCs[][];\/\/The number of residue conformations available to each residue in each AA type$/;"	f	class:StrandRCs	file:
numRes	kstar/PartialStructureSwitch.java	/^        int numRes;\/\/Number of residues in this section$/;"	f	class:PartialStructureSwitch.ChainSection
numRes	kstar/VolModule.java	/^	int numRes;					\/\/ Number of residues in molecule m$/;"	f	class:VolModule
numResidues	kstar/CommucObj.java	/^	int numResidues = 0;$/;"	f	class:CommucObj
numRotForAA	BDAStar/BWMSolutionSpace.java	/^    private int numRotForAA[];$/;"	f	class:BWMSolutionSpace	file:
numRotForMut	kstar/BoundFlags.java	/^	int numRotForMut = 0;$/;"	f	class:BoundFlags
numRotForMut	kstar/MSMinBounds.java	/^	int numRotForMut = 0;$/;"	f	class:MSMinBounds
numRotForRes	kstar/DEE.java	/^        int numRotForRes[] = null;$/;"	f	class:DEE
numRotForRes	kstar/StericCheck.java	/^	int numRotForRes[] = null;$/;"	f	class:StericCheck
numRotamers	BDAStarTest/ProteinConformationTrieTest.java	/^	static int numRotamers = 2;$/;"	f	class:ProteinConformationTrieTest
numRotamers	kstar/RotamerLibrary.java	/^	private int numRotamers[];      \/\/ Number of rotamers per AA$/;"	f	class:RotamerLibrary	file:
numRuns	kstar/DEE.java	/^	int numRuns = 1;$/;"	f	class:DEE
numSolvationTerms	kstar/Amber96ext.java	/^	int numSolvationTerms = 0;$/;"	f	class:Amber96ext
numSpPos	kstar/CommucObj.java	/^	int numSpPos = -1;$/;"	f	class:CommucObj
numSpPos	kstar/MutationManager.java	/^	int numSpPos = -1;$/;"	f	class:MutationManager
numSplits	kstar/CommucObj.java	/^	int numSplits = 0;$/;"	f	class:CommucObj
numSplits	kstar/MutationManager.java	/^	int numSplits = 0;$/;"	f	class:MutationManager
numStates	kstar/TreeEdge.java	/^    private int numStates[] = null; \/\/the number of allowed states (unpruned rotamers) for each redesign position$/;"	f	class:TreeEdge	file:
numStepsFiPsi	kstar/BBMinimizer.java	/^	final int numStepsFiPsi = 15; \/\/the number of phi\/psi minimization steps to be performed	$/;"	f	class:BBMinimizer
numStrDihedrals	kstar/SimpleMinimizer.java	/^	int[] numStrDihedrals = null;$/;"	f	class:SimpleMinimizer
numStructs	kstar/FullStructureSwitch.java	/^    int numStructs;\/\/Number of structures$/;"	f	class:FullStructureSwitch
numStructs	kstar/PartialStructureSwitch.java	/^    int numStructs;\/\/Number of structures$/;"	f	class:PartialStructureSwitch
numThreads	kstar/KSParser.java	/^		int numThreads = 1;$/;"	f	class:KSParser
numThreads	kstar/MPItoThread.java	/^	static int numThreads;$/;"	f	class:MPItoThread
numTokens	kstar/KSParser.java	/^	private int numTokens(String s) {$/;"	m	class:KSParser	file:
numTopConfs	kstar/CommucObj.java	/^	public int numTopConfs;$/;"	f	class:CommucObj
numTopConfs	kstar/MutationManager.java	/^	private int numTopConfs;$/;"	f	class:MutationManager	file:
numTopL	kstar/MSAStar.java	/^	int numTopL = 0;$/;"	f	class:MSAStar
numTotalNodes	kstar/ReducedEnergyMatrix.java	/^    int numTotalNodes;\/\/the total number of possible rotamers for the given mutation$/;"	f	class:ReducedEnergyMatrix
numTransRotSteps	kstar/BackrubMinimizer.java	/^	final int numTransRotSteps = 10; \/\/number translation\/rotation steps for the ligand$/;"	f	class:BackrubMinimizer
numTreeLevels	kstar/MSAStar.java	/^	private int numTreeLevels;$/;"	f	class:MSAStar	file:
numV	BranchDecomposition/GraphVertices.java	/^	int numV = 0; \/\/the number of vertices$/;"	f	class:GraphVertices
number	kstar/Strand.java	/^	int	number=-1;			\/\/ The number of the current strand$/;"	f	class:Strand
number12Terms	kstar/Amber96ext.java	/^	int number12Terms = 0;$/;"	f	class:Amber96ext
number13Terms	kstar/Amber96ext.java	/^	int number13Terms = 0;$/;"	f	class:Amber96ext
numberMutable	kstar/KSParser.java	/^		int numberMutable;$/;"	f	class:KSParser.MolParameters
numberMutable	kstar/RotamerSearch.java	/^	int numberMutable = 0;$/;"	f	class:RotamerSearch
numberNonBonded	kstar/Amber96ext.java	/^	int numberNonBonded = 0;$/;"	f	class:Amber96ext
numberNonBonded	kstar/Molecule.java	/^	int	numberNonBonded = 0;$/;"	f	class:Molecule
numberOf12Connections	kstar/Molecule.java	/^	int	numberOf12Connections = 0;$/;"	f	class:Molecule
numberOf13Connections	kstar/Molecule.java	/^	int	numberOf13Connections = 0;$/;"	f	class:Molecule
numberOf14Connections	kstar/Molecule.java	/^	int	numberOf14Connections = 0;$/;"	f	class:Molecule
numberOfAtoms	kstar/Molecule.java	/^	int	numberOfAtoms = 0;$/;"	f	class:Molecule
numberOfAtoms	kstar/Residue.java	/^	int	numberOfAtoms=0;	\/\/ Number of atoms$/;"	f	class:Residue
numberOfAtoms	kstar/Strand.java	/^	int	numberOfAtoms=0;	\/\/ Number of atoms$/;"	f	class:Strand
numberOfAtomsx3	kstar/Molecule.java	/^	int	numberOfAtomsx3 = 0;$/;"	f	class:Molecule
numberOfBonds	kstar/Atom.java	/^	int	numberOfBonds=0;					\/\/ the number of bonds$/;"	f	class:Atom
numberOfDihedralTerms	kstar/Amber96ext.java	/^	int numberOfDihedralTerms = 0;$/;"	f	class:Amber96ext
numberOfResidues	kstar/Molecule.java	/^	int	numberOfResidues = 0;$/;"	f	class:Molecule
numberOfResidues	kstar/Strand.java	/^	int	numberOfResidues=0;		\/\/ Number of residues$/;"	f	class:Strand
numberOfResidues	kstar/StrandRotamers.java	/^	protected int numberOfResidues=0;			\/\/ Number of residues in this strand$/;"	f	class:StrandRotamers
numberOfStrands	kstar/BBMinimizer.java	/^	int numberOfStrands;$/;"	f	class:BBMinimizer
numberOfStrands	kstar/BackrubMinimizer.java	/^	int numberOfStrands;$/;"	f	class:BackrubMinimizer
numberOfStrands	kstar/CommucObj.java	/^	int numberOfStrands = 0;$/;"	f	class:CommucObj
numberOfStrands	kstar/Molecule.java	/^	int	numberOfStrands = 0;$/;"	f	class:Molecule
numberOfStrands	kstar/MutationManager.java	/^	int numberOfStrands = 0;$/;"	f	class:MutationManager
numberOfStrands	kstar/RotamerSearch.java	/^	int numberOfStrands = -1;$/;"	f	class:RotamerSearch
numberOfStrands	kstar/SimpleMinimizer.java	/^	int numberOfStrands = 0;$/;"	f	class:SimpleMinimizer
numberOfStrands	kstar/StericCheck.java	/^	int numberOfStrands = 0;$/;"	f	class:StericCheck
numchanges	kstar/SturmSolver.java	/^    int numchanges(int np, poly sseq[], double a)$/;"	m	class:SturmSolver
numroots	kstar/SturmSolver.java	/^    int numroots(int np, poly sseq[], int at[])$/;"	m	class:SturmSolver
obj	kstar/ThreadMessage.java	/^	public Object obj;$/;"	f	class:ThreadMessage
object_count	mpi/Status.java	/^  protected int object_count;$/;"	f	class:Status
offset	mpi/Request.java	/^  protected int offset;$/;"	f	class:Request
offsetSave	mpi/Request.java	/^  protected int countSave, offsetSave ;$/;"	f	class:Request
oldCoords	kstar/Perturbation.java	/^    ArrayList<HashMap<String, float[]>> oldCoords;\/\/Old coordinates to revert to upon undoing$/;"	f	class:Perturbation
oldMessages	kstar/ThreadElement.java	/^	BlockingDeque<ThreadMessage> oldMessages = null;$/;"	f	class:ThreadElement
onlyBound	kstar/MSMinBounds.java	/^	boolean onlyBound = false;$/;"	f	class:MSMinBounds
onlyStarting	kstar/PerturbationSelector.java	/^    boolean onlyStarting = false;$/;"	f	class:PerturbationSelector
opTag	mpi/Request.java	/^  protected int opTag ;$/;"	f	class:Request
optBounds	kstar/KSParser.java	/^	    final int optBounds = 2;$/;"	f	class:KSParser
optBounds	kstar/MutationManager.java	/^    final int optBounds = 2;$/;"	f	class:MutationManager
optPairs	kstar/KSParser.java	/^	    final int optPairs = 4;$/;"	f	class:KSParser
optPairs	kstar/MutationManager.java	/^    final int optPairs = 4;$/;"	f	class:MutationManager
optSimple	kstar/KSParser.java	/^	    final int optSimple = 1;$/;"	f	class:KSParser
optSimple	kstar/MutationManager.java	/^    final int optSimple = 1;$/;"	f	class:MutationManager
optSplit	kstar/KSParser.java	/^	    final int optSplit = 3;$/;"	f	class:KSParser
optSplit	kstar/MutationManager.java	/^    final int optSplit = 3;$/;"	f	class:MutationManager
optimizeInteractionGraph	kstar/KSParser.java	/^	private void optimizeInteractionGraph( int numMutable, RotamerSearch rs, PrunedRotamers<Boolean> prunedRotAtRes, String runName, int strandMut[][], float eInteractionCutoff, float distCutoff, Molecule m, $/;"	m	class:KSParser	file:
ord	kstar/SturmSolver.java	/^        int	ord;$/;"	f	class:SturmSolver.poly
origAtom	kstar/Molecule.java	/^	Atom origAtom[] = null;				\/\/ Array of atoms to store a copy of the molecule atoms$/;"	f	class:Molecule
out	BDAStarTest/TestSolutionSpace.java	/^    private Collection<Choice> out;$/;"	f	class:TestSolutionSpace	file:
outputBB	kstar/RotamerSearch.java	/^	private void outputBB(PrintStream logPS, int numMutable, String runName, int strandMut[][], Backbone bb){$/;"	m	class:RotamerSearch	file:
outputBackrubs	kstar/BackrubMinimizer.java	/^	private void outputBackrubs(){$/;"	m	class:BackrubMinimizer	file:
outputBestStateE	kstar/BranchTree.java	/^	public void outputBestStateE(Molecule m, StrandRotamers ligRot, RotamerLibrary rl, RotamerLibrary grl)$/;"	m	class:BranchTree
outputBestStateE	kstar/TreeEdge.java	/^    public void outputBestStateE(Molecule m, RotamerLibrary rl, String ligType){$/;"	m	class:TreeEdge
outputBestStateE2	kstar/TreeEdge.java	/^    public String outputBestStateE2(Molecule m, RotamerLibrary rl, String ligType, PairwiseEnergyMatrix matrix){$/;"	m	class:TreeEdge
outputBranchDecomposition	BranchDecomposition/BranchDecompositionH.java	/^	private void outputBranchDecomposition(String fout){$/;"	m	class:BranchDecompositionH	file:
outputConfInfo	kstar/CommucObj.java	/^	String outputConfInfo = null;$/;"	f	class:CommucObj
outputConfInfo	kstar/KSParser.java	/^		String outputConfInfo = null;$/;"	f	class:KSParser.DACSthread
outputConfInfo	kstar/MutationManager.java	/^	String outputConfInfo = null;$/;"	f	class:MutationManager
outputInitialDebugData	kstar/TreeEdge.java	/^	private void outputInitialDebugData(RotTypeMap[] bestPosAARot,$/;"	m	class:TreeEdge	file:
outputObject	kstar/KSParser.java	/^	static void outputObject(Object outObj, String outFile){$/;"	m	class:KSParser
outputObject	kstar/MutationManager.java	/^	private void outputObject(Object outObj, String outFile){$/;"	m	class:MutationManager	file:
outputPartitionFunction	Miscellany/ComputeKStarScore.java	/^	public static String outputPartitionFunction(String sequence, String AStarFileName, String BWMStarFileName)$/;"	m	class:ComputeKStarScore
outputProgInfo	kstar/KSParser.java	/^	public void outputProgInfo() {$/;"	m	class:KSParser
outputPruneInfo	kstar/CommucObj.java	/^	String outputPruneInfo = null;$/;"	f	class:CommucObj
outputPruneInfo	kstar/MutationManager.java	/^	String outputPruneInfo = null;$/;"	f	class:MutationManager
overlapThresh	kstar/BackrubMinimizer.java	/^	float overlapThresh = -10000.0f; \/\/the allowed overlap threshold$/;"	f	class:BackrubMinimizer
overlapThresh	kstar/PDBChemModel.java	/^    float overlapThresh = 0.4f;\/\/Steric overlap threshold for auto-fixing residues$/;"	f	class:PDBChemModel
overlapThresh	kstar/RotamerSearch.java	/^	float overlapThresh = -10000.0f;	\/\/ hard overlap threshold used for checking sterics (this should be used when the atom positions will not be allowed to change after the steric check)$/;"	f	class:RotamerSearch
overlapThresh	kstar/StericCheck.java	/^	double overlapThresh = 1.5;$/;"	f	class:StericCheck
p	kstar/TreeEdge.java	/^    private TreeNode p = null; \/\/the parent node incident to the edge in the rooted tree$/;"	f	class:TreeEdge	file:
p	kstar/TreeNode.java	/^	private TreeNode p = null; \/\/parent node in the tree$/;"	f	class:TreeNode	file:
pack	mpi/Comm.java	/^  private native int pack(Object   inbuf,$/;"	m	class:Comm	file:
pairEMatrixMax	kstar/MutationManager.java	/^	PairwiseEnergyMatrix pairEMatrixMax = null;$/;"	f	class:MutationManager
pairEMatrixMin	kstar/MutationManager.java	/^	PairwiseEnergyMatrix pairEMatrixMin = null;$/;"	f	class:MutationManager
pairEMatrixMinEntropy	kstar/MutationManager.java	/^	float pairEMatrixMinEntropy[][] = null;$/;"	f	class:MutationManager
pairEc	kstar/BoundFlags.java	/^	double pairEc[][][][][][] = null;$/;"	f	class:BoundFlags
pairInt	kstar/BoundFlags.java	/^	double pairInt[][] = null;$/;"	f	class:BoundFlags
pairInt	kstar/MSMinBounds.java	/^	double pairInt[] = null;$/;"	f	class:MSMinBounds
pairIntMinDEE	kstar/DEE.java	/^	double pairIntMinDEE[] = null;$/;"	f	class:DEE
pairIntMinDEE	kstar/RotamerSearch.java	/^	double pairIntMinDEE[] = null;	\/\/the pairwise interval term in the MinDEE criterion$/;"	f	class:RotamerSearch
pairIntMinDEE2Pos	kstar/DEEGoldsteinPairs.java	/^	double pairIntMinDEE2Pos[][] = null;$/;"	f	class:DEEGoldsteinPairs
pairK	kstar/DEEIndirect.java	/^        private float pairK[][][][][];\/\/Precomputed K(i_r,i_t) matrix$/;"	f	class:DEEIndirect	file:
pairwiseEnergyComp	kstar/RotamerSearch.java	/^	public void pairwiseEnergyComp (final int maxDepth, int strandMut[][], int residueMutatable[],$/;"	m	class:RotamerSearch
pairwiseEnergyCompAllMutatedResHelper	kstar/RotamerSearch.java	/^	private void pairwiseEnergyCompAllMutatedResHelper(int maxDepth, int strandMut[][], int res1Num, int res2Num, int residueMutatable[],$/;"	m	class:RotamerSearch	file:
pairwiseMaxEnergyMatrix	kstar/DEE.java	/^	protected PairwiseEnergyMatrix pairwiseMaxEnergyMatrix = null;$/;"	f	class:DEE
pairwiseMinEnergyMatrix	kstar/DEE.java	/^	protected PairwiseEnergyMatrix pairwiseMinEnergyMatrix = null;$/;"	f	class:DEE
pairwiseMinEnergyMatrix	kstar/MSAStar.java	/^	private ReducedEnergyMatrix pairwiseMinEnergyMatrix = null;$/;"	f	class:MSAStar	file:
pairwiseMutationAllRotamerSearch	kstar/RotamerSearch.java	/^	private void pairwiseMutationAllRotamerSearch(int maxDepth, int strandMut[][],$/;"	m	class:RotamerSearch	file:
pairwiseRotamerEnergyBackboneHelper	kstar/RotamerSearch.java	/^	private void pairwiseRotamerEnergyBackboneHelper (int res1,int res2,int res1Strand,int res1Resnum,int res2Strand,int res2Resnum,int strandMut[][],$/;"	m	class:RotamerSearch	file:
pairwiseRotamerEnergyBackrubsHelper	kstar/RotamerSearch.java	/^	private void pairwiseRotamerEnergyBackrubsHelper (int res1,int res2,int res1Strand,int res1Resnum,int res2Strand,int res2Resnum,$/;"	m	class:RotamerSearch	file:
pairwiseRotamerEnergySidechainHelper	kstar/RotamerSearch.java	/^	private void pairwiseRotamerEnergySidechainHelper (int res1,int res2,int res1Strand,int res1Resnum,int res2Strand,int res2Resnum,int strandMut[][],$/;"	m	class:RotamerSearch	file:
parallelComponent	kstar/RotMatrix.java	/^        float[] parallelComponent(float[] vec1, float[] vec2){\/\/Component of vec1 parallel to vec2$/;"	m	class:RotMatrix
params	kstar/CommucObj.java	/^	ParamSet params = null;$/;"	f	class:CommucObj
params	kstar/ParamSet.java	/^	private String params[] = null; \/\/the parameter names$/;"	f	class:ParamSet	file:
params	kstar/PartialStructureSwitch.java	/^    ArrayList< float[]> params = new ArrayList< float[]>();\/\/Perturbation parameters for predecessors and current perturbation$/;"	f	class:PartialStructureSwitch
parent	BDAStar/BDAStarNode.java	/^    private BDAStarNode parent;$/;"	f	class:BDAStarNode	file:
parent	BDAStar/BWMAStarNode.java	/^    private BWMAStarNode parent;$/;"	f	class:BWMAStarNode	file:
parent	BDAStar/BWMStarNode.java	/^    private BWMStarNode parent;$/;"	f	class:BWMStarNode	file:
parent	kstar/TreeEdge.java	/^    TreeEdge parent;$/;"	f	class:TreeEdge
parse	kstar/KSParser.java	/^	public void parse(String[] args) {$/;"	m	class:KSParser
parseArgs	kstar/KSParser.java	/^	private String[] parseArgs(String[] args) {$/;"	m	class:KSParser	file:
partDihed	kstar/Amber96ext.java	/^	double partDihed[][] = null;$/;"	f	class:Amber96ext
partHalfNBeval	kstar/Amber96ext.java	/^	int[][] partHalfNBeval = new int[0][0];$/;"	f	class:Amber96ext
partHalfNonBonded	kstar/Amber96ext.java	/^	double[][] partHalfNonBonded = new double[0][0];$/;"	f	class:Amber96ext
partIndex	kstar/CommucObj.java	/^	Index3 partIndex[] = null;$/;"	f	class:CommucObj
partNBeval	kstar/Amber96ext.java	/^	int[][] partNBeval = new int[0][0];$/;"	f	class:Amber96ext
partNonBonded	kstar/Amber96ext.java	/^	double[][] partNonBonded = new double[0][0];$/;"	f	class:Amber96ext
partSolv	kstar/Amber96ext.java	/^	double partSolv[][] = null;$/;"	f	class:Amber96ext
partialConformation	BDAStar/BWMAStarNode.java	/^    private Conformation partialConformation;$/;"	f	class:BWMAStarNode	file:
partialConformation	BDAStar/CopyOfBWMAStarNode.java	/^    private Conformation partialConformation;$/;"	f	class:CopyOfBWMAStarNode	file:
partial_p	kstar/RotamerSearch.java	/^	BigDecimal partial_p = new BigDecimal(0.0);$/;"	f	class:RotamerSearch
partial_q	kstar/RotamerSearch.java	/^	BigDecimal partial_q = new BigDecimal(0.0);$/;"	f	class:RotamerSearch
partition	kstar/RyanQuickSort.java	/^	private int partition(int b, int t) {$/;"	m	class:RyanQuickSort	file:
pdbName	kstar/CommucObj.java	/^	public String pdbName = "out";$/;"	f	class:CommucObj
pdbName	kstar/MutationManager.java	/^	String pdbName;$/;"	f	class:MutationManager
pdbRes2StrandMutIndex	kstar/KSParser.java	/^		int pdbRes2StrandMutIndex[][];$/;"	f	class:KSParser.MolParameters
peekEnergy	kstar/TreeEdge.java	/^    public double peekEnergy(RotTypeMap[] bestPosAARot, int[] MLambda)$/;"	m	class:TreeEdge
peekNextConformation	BDAStar/BDAStarNode.java	/^    public Conformation peekNextConformation()$/;"	m	class:BDAStarNode
peekNextConformation	BDAStar/BWMAStarNode.java	/^    private Conformation peekNextConformation () $/;"	m	class:BWMAStarNode	file:
peekNextConformation	BDAStar/BWMStarNode.java	/^    private Conformation peekNextConformation (Conformation partial) $/;"	m	class:BWMStarNode	file:
peekNextConformation	BDAStar/CopyOfBWMAStarNode.java	/^    private Conformation peekNextConformation () $/;"	m	class:CopyOfBWMAStarNode	file:
peekNextScore	BDAStar/BWMStarNode.java	/^    private double peekNextScore()$/;"	m	class:BWMStarNode	file:
peekPartial	BDAStar/BWMAStarNode.java	/^    public Conformation peekPartial()$/;"	m	class:BWMAStarNode
peekPartial	BDAStar/CopyOfBWMAStarNode.java	/^    public Conformation peekPartial()$/;"	m	class:CopyOfBWMAStarNode
peekPartialNode	BDAStar/BWMAStarNode.java	/^    public BWMAStarNode peekPartialNode()$/;"	m	class:BWMAStarNode
peekPartialPath	BDAStar/BDAStarNode.java	/^    private List<BDAStarNode> peekPartialPath(List<BDAStarNode> path)$/;"	m	class:BDAStarNode	file:
peekPartialPath	BDAStar/BWMAStarNode.java	/^    private List<BWMAStarNode> peekPartialPath(List<BWMAStarNode> path)$/;"	m	class:BWMAStarNode	file:
performSplit	BranchDecomposition/BranchDecompositionH.java	/^	private void performSplit(BranchNode bn, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy){$/;"	m	class:BranchDecompositionH	file:
periods	mpi/CartParms.java	/^	public boolean [] periods;$/;"	f	class:CartParms
perpendicularComponent	kstar/RotMatrix.java	/^        float[] perpendicularComponent(float[] vec1, float[] vec2){\/\/Component of vec1 perpendicular to vec2$/;"	m	class:RotMatrix
pertFile	kstar/CommucObj.java	/^        String pertFile;$/;"	f	class:CommucObj
pertFile	kstar/MutationManager.java	/^        String pertFile;$/;"	f	class:MutationManager
pertFile	kstar/RotamerSearch.java	/^        String pertFile;\/\/File with the perturbation information$/;"	f	class:RotamerSearch
pertList	kstar/PMinimizer.java	/^        int pertList[];\/\/List of perturbations (indices in m.perts)$/;"	f	class:PMinimizer
pertParamMax	kstar/PMinimizer.java	/^        float pertParamMax[];\/\/Maxima for each perturbation's parameter$/;"	f	class:PMinimizer
pertParamMin	kstar/PMinimizer.java	/^        float pertParamMin[];\/\/Minima for each perturbation's parameter$/;"	f	class:PMinimizer
pertParamValues	kstar/PMinimizer.java	/^        float pertParamValues[];\/\/Current parameter values for the perturbations$/;"	f	class:PMinimizer
pertStates	kstar/Residue.java	/^        int pertStates[][]=null;      \/\/Defines the perturbation states for this residue:$/;"	f	class:Residue
pertStepSize	kstar/PMinimizer.java	/^        float pertStepSize[];\/\/Step sizes for each perturbation$/;"	f	class:PMinimizer
perts	kstar/Molecule.java	/^        Perturbation[] perts = null; \/\/Perturbations that can affect this molecule$/;"	f	class:Molecule
perts	kstar/Residue.java	/^        int perts[]=null;                    \/\/ Perturbations to which this unit is subject (may be empty; this array consists of indices in m.perts, in ascending order)$/;"	f	class:Residue
pi	BranchDecomposition/BreadthFirstSearch.java	/^	private int pi[] = null; \/\/the parent (in the search) of each node$/;"	f	class:BreadthFirstSearch	file:
pi	kstar/TripeptideClosure.java	/^  double pi = Math.PI;$/;"	f	class:TripeptideClosure
placeRes	kstar/PartialStructureSwitch.java	/^    public boolean placeRes(float param){$/;"	m	class:PartialStructureSwitch
poly	kstar/SturmSolver.java	/^    private class poly {$/;"	c	class:SturmSolver
poly_mul1	kstar/TripeptideClosure.java	/^public int poly_mul1(double u1[], double u2[], int p1, int p2, double u3[])$/;"	m	class:TripeptideClosure
poly_mul2	kstar/TripeptideClosure.java	/^void poly_mul2(double u1[][], double u2[][], int p1[], int p2[], double u3[][], int p3[])$/;"	m	class:TripeptideClosure
poly_mul_sub1	kstar/TripeptideClosure.java	/^public int poly_mul_sub1(double u1[], double u2[], double u3[], double u4[], int p1, int p2, int p3, int p4, double u5[])$/;"	m	class:TripeptideClosure
poly_mul_sub2	kstar/TripeptideClosure.java	/^void poly_mul_sub2(double u1[][], double u2[][], double u3[][], double u4[][], int p1[], int p2[], int p3[],$/;"	m	class:TripeptideClosure
poly_sub1	kstar/TripeptideClosure.java	/^public int poly_sub1(double u1[], double u2[], int p1, int p2, double u3[])$/;"	m	class:TripeptideClosure
poly_sub2	kstar/TripeptideClosure.java	/^void poly_sub2(double u1[][], double u2[][], int p1[], int p2[], double u3[][], int p3[])$/;"	m	class:TripeptideClosure
populateAtomList	kstar/CloseLoop.java	/^	private void populateAtomList()$/;"	m	class:CloseLoop	file:
populateHeap	BDAStar/CopyOfBWMAStarNode.java	/^    public void populateHeap(PriorityQueue<CopyOfBWMAStarNode> heap, List<? extends Position> positions, int index, Conformation currentConf, SolutionSpace s)$/;"	m	class:CopyOfBWMAStarNode
portNum	kstar/CommucObj.java	/^	int portNum = -1;$/;"	f	class:CommucObj
pos	BDAStar/Position.java	/^	public int pos = -1;$/;"	f	class:Position
pos	kstar/DEESplit2f.java	/^		int pos;$/;"	f	class:DEESplit2f.ArrayIndex
pos	kstar/PrunedRotamers.java	/^	int pos;$/;"	f	class:Index3
pos	kstar/RotTypeMap.java	/^	public int pos = -1;$/;"	f	class:RotTypeMap
position	BDAStar/BDAStarNode.java	/^    private Position position;$/;"	f	class:BDAStarNode	file:
positionFromPos	BDAStar/BWMSolutionSpace.java	/^    public Position positionFromPos(Integer position) {$/;"	m	class:BWMSolutionSpace
positionFromPos	BDAStar/SolutionSpace.java	/^	public Position positionFromPos(Integer integer);$/;"	m	interface:SolutionSpace
positionFromPos	BDAStarTest/TestSolutionSpace.java	/^	public Position positionFromPos(Integer integer) {$/;"	m	class:TestSolutionSpace
positions	BDAStar/AbstractConformation.java	/^    private HashMap<Position, Choice> positions;$/;"	f	class:AbstractConformation	file:
positions	BDAStarTest/TestSolutionSpace.java	/^    private Collection<Position> positions;$/;"	f	class:TestSolutionSpace	file:
pow	kstar/ExpFunction.java	/^	public BigDecimal pow(BigDecimal num, int a){$/;"	m	class:ExpFunction
precomputeBackrubs	kstar/BackrubMinimizer.java	/^	public void precomputeBackrubs(int numBackrubSamples, float backrubStepSize){$/;"	m	class:BackrubMinimizer
precomputeInt	kstar/BoundFlags.java	/^	private void precomputeInt() {$/;"	m	class:BoundFlags	file:
precomputeInt	kstar/MSMinBounds.java	/^	private void precomputeInt() {$/;"	m	class:MSMinBounds	file:
precomputePairK	kstar/DEEIndirect.java	/^        private float precomputePairK(int curPos, int curAA, int curRot, int tAA, int tRot){$/;"	m	class:DEEIndirect	file:
predParams	kstar/LoopClosureAdjustment.java	/^    float predParams[][] = new float[0][];\/\/Perturbation parameters for predecessors.$/;"	f	class:LoopClosureAdjustment
predecessors	kstar/Perturbation.java	/^    int[] predecessors;\/\/Similarly, these indices in m.perts are perturbations that need to be applied before this one because they affect its state$/;"	f	class:Perturbation
prefix	BDAStar/BDAStarNode.java	/^    private Conformation prefix;$/;"	f	class:BDAStarNode	file:
prependResidue	kstar/Molecule.java	/^	public void prependResidue(){$/;"	m	class:Molecule
preprocessPairs	kstar/RotamerSearch.java	/^	public void preprocessPairs(float cutoff, int numMutable, int strandMut[][]){$/;"	m	class:RotamerSearch
prevNode	kstar/QueueNode.java	/^	public QueueNode prevNode;$/;"	f	class:QueueNode
printAtom	kstar/SaveMolecule.java	/^	private void printAtom(int atomNumber){$/;"	m	class:SaveMolecule	file:
printBigNum	Miscellany/ComputeKStarScore.java	/^	public static String printBigNum(BigDecimal bd, int sigDigits){$/;"	m	class:ComputeKStarScore
printBigNum	kstar/RotamerSearch.java	/^	public String printBigNum(BigDecimal bd, int sigDigits){$/;"	m	class:RotamerSearch
printConformation	BDAStar/BWMSolutionSpace.java	/^    public String printConformation(ProteinConformation p)$/;"	m	class:BWMSolutionSpace
printCoord	kstar/RotInfo.java	/^	public String printCoord(){$/;"	m	class:RotInfo
printEndDebugInfo	kstar/TreeEdge.java	/^	private void printEndDebugInfo(RotTypeMap[] bestPosAARot,$/;"	m	class:TreeEdge	file:
printHeap	kstar/TreeEdge.java	/^    static boolean printHeap = false;$/;"	f	class:TreeEdge
printOneAndTwoBodyEnergies	kstar/RotamerSearch.java	/^	public void printOneAndTwoBodyEnergies() {$/;"	m	class:RotamerSearch
printOneAndTwoBodyEnergies	kstar/TreeEdge.java	/^    private void printOneAndTwoBodyEnergies(RotTypeMap rtm[],PairwiseEnergyMatrix eMatrix)$/;"	m	class:TreeEdge	file:
printResidueInfo	kstar/Residue.java	/^	public void printResidueInfo(){$/;"	m	class:Residue
printSegID	kstar/KSParser.java	/^		boolean printSegID = false;$/;"	f	class:KSParser
printState	kstar/MSAStar.java	/^	private void printState(QueueNode expNode){$/;"	m	class:MSAStar	file:
printStrandInfo	kstar/Strand.java	/^	public void printStrandInfo(){$/;"	m	class:Strand
printTopConfs	kstar/CommucObj.java	/^	public boolean printTopConfs = false;$/;"	f	class:CommucObj
printTopConfs	kstar/MutationManager.java	/^	private boolean printTopConfs;$/;"	f	class:MutationManager	file:
printTree	BDAStar/BDAStarNode.java	/^    public void printTree()$/;"	m	class:BDAStarNode
printTree	BDAStar/BDAStarNode.java	/^    public void printTree(String prefix)$/;"	m	class:BDAStarNode
printTree	BDAStar/BWMAStarNode.java	/^    public void printTree(String prefix)$/;"	m	class:BWMAStarNode
printTree	BDAStar/BWMAStarNode.java	/^    public void printTree(String prefix, Conformation c)$/;"	m	class:BWMAStarNode
printTree	BDAStar/CopyOfBWMAStarNode.java	/^    public void printTree(String prefix)$/;"	m	class:CopyOfBWMAStarNode
printTree	BDAStar/CopyOfBWMAStarNode.java	/^    public void printTree(String prefix, Conformation c)$/;"	m	class:CopyOfBWMAStarNode
printTree	kstar/TreeEdge.java	/^    public void printTree(String prefix)$/;"	m	class:TreeEdge
printTree	kstar/TreeNode.java	/^    public void printTree(String prefix)$/;"	m	class:TreeNode
printTreeMol	kstar/TreeEdge.java	/^    public void printTreeMol(String prefix)$/;"	m	class:TreeEdge
print_level	kstar/TripeptideClosure.java	/^  int print_level = 0;$/;"	f	class:TripeptideClosure
processFinishedMutation	kstar/MutationManager.java	/^	public synchronized void processFinishedMutation(CommucObj cObj) {$/;"	m	class:MutationManager
projectPointLine	kstar/Backrubs.java	/^	public Atom projectPointLine(Atom l1, Atom l2, Atom p3){$/;"	m	class:Backrubs
projectPointPlane	kstar/Backrubs.java	/^	public Atom projectPointPlane(Atom l1, Atom l2, Atom c3, Atom p4){$/;"	m	class:Backrubs
pruneRidiculousPairs	kstar/RotamerSearch.java	/^        public void pruneRidiculousPairs(int numMutable, int strandMut[][],$/;"	m	class:RotamerSearch
prunedCurRun	kstar/DEEGoldsteinTriples.java	/^        int prunedCurRun;$/;"	f	class:DEEGoldsteinTriples
prunedIsSteric	kstar/MSMinBounds.java	/^	PrunedRotamers<Boolean> prunedIsSteric = null;$/;"	f	class:MSMinBounds
prunedIsSteric	kstar/RotamerSearch.java	/^	PrunedRotamers<Boolean> prunedIsSteric = null;	\/\/ pruned rotamers due to unallowed sterics$/;"	f	class:RotamerSearch
prunedPairsCurRun	kstar/DEEIndirect.java	/^        int prunedPairsCurRun;$/;"	f	class:DEEIndirect
prunedRot	kstar/CommucObj.java	/^	PrunedRotamers<Boolean> prunedRot = null;$/;"	f	class:CommucObj
prunedRot	kstar/MutationManager.java	/^	PrunedRotamers<Boolean> prunedRot = null;$/;"	f	class:MutationManager
prunedRot	kstar/PrunedRotamers.java	/^	  private final T[][][] prunedRot;$/;"	f	class:PrunedRotIterator	file:
prunedRot	kstar/PrunedRotamers.java	/^	private T[][][] prunedRot;$/;"	f	class:PrunedRotamers	file:
prunedSinglesCurRun	kstar/DEEIndirect.java	/^        int prunedSinglesCurRun;$/;"	f	class:DEEIndirect
pruningE	kstar/BoundFlags.java	/^	double pruningE = bigE; \/\/the lower-bound energy cutoff for pruning$/;"	f	class:BoundFlags
pruningE	kstar/CommucObj.java	/^	float pruningE = (float)Math.pow(10,38);$/;"	f	class:CommucObj
pruningE	kstar/MSMinBounds.java	/^	double pruningE = bigE; \/\/the lower-bound energy cutoff for pruning$/;"	f	class:MSMinBounds
pruningE	kstar/MutationManager.java	/^	float pruningE = (float)Math.pow(10,38);$/;"	f	class:MutationManager
pucker	kstar/Residue.java	/^        boolean pucker = false;\/\/If the residue is a proline this will be ProlineFlip.UP or ProlineFlip.DOWN$/;"	f	class:Residue
pushNode	BranchDecomposition/BranchDecompositionH.java	/^	private void pushNode(BranchNode pn, LinkedHashSet<BranchEdge> sx, LinkedHashSet<BranchEdge> sy){$/;"	m	class:BranchDecompositionH	file:
put	BDAStar/ProteinConformationMap.java	/^	public ProteinConformationTrie put(Choice key,$/;"	m	class:ProteinConformationMap
put	BDAStarTest/TestConformationMap.java	/^	public ProteinConformationTrie put(Choice key,$/;"	m	class:TestConformationMap
putAll	BDAStar/ConformationMap.java	/^	public void putAll($/;"	m	class:ConformationMap
pw	kstar/SaveMolecule.java	/^	PrintStream pw;$/;"	f	class:SaveMolecule
q	BranchDecomposition/BreadthFirstSearch.java	/^	private ArrayBlockingQueue<Integer> q = null; \/\/the current queue$/;"	f	class:BreadthFirstSearch	file:
q	kstar/CommucObj.java	/^	BigDecimal q[] = null;$/;"	f	class:CommucObj
q_L	kstar/MutationManager.java	/^	BigDecimal q_L = new BigDecimal("0.0");$/;"	f	class:MutationManager
q_Time	kstar/CommucObj.java	/^	int q_Time[] = null;$/;"	f	class:CommucObj
quickSort	kstar/RyanQuickSort.java	/^	private void quickSort(int q, int w) {$/;"	m	class:RyanQuickSort	file:
rParams	kstar/KSParser.java	/^		ParamSet rParams = null; \/\/the main KStar parameters$/;"	f	class:KSParser
r_a1a3	kstar/TripeptideClosure.java	/^  double[] r_a1a3 = new double[3], r_a1n1 = new double[3], r_a3c3 = new double[3];$/;"	f	class:TripeptideClosure
r_a1n1	kstar/TripeptideClosure.java	/^  double[] r_a1a3 = new double[3], r_a1n1 = new double[3], r_a3c3 = new double[3];$/;"	f	class:TripeptideClosure
r_a3c3	kstar/TripeptideClosure.java	/^  double[] r_a1a3 = new double[3], r_a1n1 = new double[3], r_a3c3 = new double[3];$/;"	f	class:TripeptideClosure
rad2deg	kstar/TripeptideClosure.java	/^  double rad2deg = 180\/pi;$/;"	f	class:TripeptideClosure
radius	kstar/Atom.java	/^	int	radius = 170;		\/\/ vdw radii in pm (100pm=1A)$/;"	f	class:Atom
range_excl	mpi/Group.java	/^  private native long range_excl(int [][] ranges) ;$/;"	m	class:Group	file:
range_incl	mpi/Group.java	/^  private native long range_incl(int [][] ranges) ;$/;"	m	class:Group	file:
rank	kstar/KSthread.java	/^	int rank;$/;"	f	class:KSthread
rank	kstar/ThreadElement.java	/^	int rank = -1;$/;"	f	class:ThreadElement
rank_dest	mpi/ShiftParms.java	/^	public int rank_dest;$/;"	f	class:ShiftParms
rank_source	mpi/ShiftParms.java	/^	public int rank_source;$/;"	f	class:ShiftParms
rc	kstar/TreeNode.java	/^	private TreeNode rc = null; \/\/right child of this node$/;"	f	class:TreeNode	file:
reInit	kstar/StrandRotamers.java	/^	public StrandRotamers reInit(Strand s){$/;"	m	class:StrandRotamers
readBackrubs	kstar/BackrubMinimizer.java	/^	private void readBackrubs(){$/;"	m	class:BackrubMinimizer	file:
readBranchDecomposition	kstar/BranchTree.java	/^	private void readBranchDecomposition(String fName, Molecule m, int numUnprunedRot[], int molResidueMap[], int invResidueMap[], int sysStrandNum){$/;"	m	class:BranchTree	file:
readEEF1parm	kstar/EEF1.java	/^	public void readEEF1parm() throws Exception {$/;"	m	class:EEF1
readFromFile	kstar/MutationManager.java	/^	private synchronized Object readFromFile(Object inObj, String inFile){$/;"	m	class:MutationManager	file:
readGraphFile	BranchDecomposition/BranchDecompositionH.java	/^	private void readGraphFile(String graphFile, LinkedHashSet<String> gvDup){$/;"	m	class:BranchDecompositionH	file:
readInputFiles	kstar/RamachandranChecker.java	/^    public void readInputFiles(String[] fileNames){\/\/Filenames in order: gly, pro, general, pre-pro$/;"	m	class:RamachandranChecker
readLine	kstar/BranchTree.java	/^	private String readLine(BufferedReader bufread, String fName){$/;"	m	class:BranchTree	file:
readObject	Tests/EnergyMatrixComparison.java	/^	static Object readObject(String inFile){$/;"	m	class:EnergyMatrixComparison
readObject	Tests/EnergyMatrixComparison.java	/^	static Object readObject(String inFile, boolean repeat){$/;"	m	class:EnergyMatrixComparison
readObject	kstar/KSParser.java	/^	private Object readObject(String inFile){$/;"	m	class:KSParser	file:
readObject	kstar/KSParser.java	/^	private Object readObject(String inFile, boolean repeat){$/;"	m	class:KSParser	file:
readObjects	kstar/PrunedRotamers.java	/^	public static Object readObjects(String inFile)$/;"	m	class:PrunedRotamers
readPairMatrixEntropy	kstar/KSParser.java	/^	private float [][][][] readPairMatrixEntropy(String fName, int numRes){$/;"	m	class:KSParser	file:
readParm96	kstar/Amber96ext.java	/^	private void readParm96() throws Exception {$/;"	m	class:Amber96ext	file:
readPertFile	kstar/PertFileHandler.java	/^    public static void readPertFile(String fileName, Molecule m, StrandRotamers strandRot[]){$/;"	m	class:PertFileHandler
readPerts	kstar/PertFileHandler.java	/^    public static Perturbation[] readPerts(BufferedReader br, Molecule m) throws Exception {$/;"	m	class:PertFileHandler
readResumeFile	kstar/KSParser.java	/^	public OneMutation[] readResumeFile(OneMutation resumeResults[], String resumeFilename, int numMutable, boolean distrDACS, boolean PEMcomp, int initDepth) {$/;"	m	class:KSParser
readRotLibrary	kstar/RotamerLibrary.java	/^	private void readRotLibrary(String rotFilename) throws Exception {$/;"	m	class:RotamerLibrary	file:
readRotResFile	kstar/KSParser.java	/^	private void readRotResFile (String resFile, String AAtypes[], int rotNums[], int numResults, int numResidues){$/;"	m	class:KSParser	file:
readRotVol	kstar/RotamerLibrary.java	/^	private void readRotVol(String volFilename) throws Exception {$/;"	m	class:RotamerLibrary	file:
recurseAA	kstar/Amber96ext.java	/^	private boolean recurseAA(Molecule m, Residue templateRes, Residue res,$/;"	m	class:Amber96ext	file:
reduce	mpi/Intracomm.java	/^  private native void reduce(Object sendbuf, int sendoffset, $/;"	m	class:Intracomm	file:
reduceArraySize	kstar/Amber96ext.java	/^	private String [] reduceArraySize(String a[], int newSize){$/;"	m	class:Amber96ext	file:
reduceArraySize	kstar/Amber96ext.java	/^	private float [] reduceArraySize(float a[], int newSize){$/;"	m	class:Amber96ext	file:
reduceArraySize	kstar/Amber96ext.java	/^	private int [] reduceArraySize(int a[], int newSize){$/;"	m	class:Amber96ext	file:
reduceArraySize	kstar/Amber96ext.java	/^	private int [][] reduceArraySize(int a[][], int newSize){$/;"	m	class:Amber96ext	file:
reduceMatrix	kstar/PairwiseEnergyMatrix.java	/^        public ReducedEnergyMatrix reduceMatrix(boolean eliminatedRotAtPosRed[],$/;"	m	class:PairwiseEnergyMatrix
reduce_scatter	mpi/Intracomm.java	/^  private native void reduce_scatter(Object sendbuf, int sendoffset, $/;"	m	class:Intracomm	file:
refreshStrand	kstar/RotamerSearch.java	/^	public void refreshStrand(int str){$/;"	m	class:RotamerSearch
regTag	kstar/KSParser.java	/^		final static int regTag = 1; \/\/regular tag for MPI messages$/;"	f	class:KSParser
reinsertChain	BDAStar/BDAStarNode.java	/^    public void reinsertChain(List<BDAStarNode> path)$/;"	m	class:BDAStarNode
reinsertChain	BDAStar/BWMAStarNode.java	/^    private void reinsertChain(List<BWMAStarNode> path)$/;"	m	class:BWMAStarNode	file:
remaining	BDAStar/BWMAStarNode.java	/^    private int remaining;$/;"	f	class:BWMAStarNode	file:
remaining	BDAStar/BWMStarNode.java	/^    private int remaining;$/;"	f	class:BWMStarNode	file:
remainingConformations	BDAStar/BWMAStarNode.java	/^    public int remainingConformations()$/;"	m	class:BWMAStarNode
remainingRightConformations	BDAStar/BWMAStarNode.java	/^    public int remainingRightConformations(Conformation c)$/;"	m	class:BWMAStarNode
remote_group	mpi/Intercomm.java	/^  private native long remote_group();$/;"	m	class:Intercomm	file:
remove	BDAStar/ConformationMap.java	/^	public ProteinConformationTrie remove(Object key) {$/;"	m	class:ConformationMap
remove	BDAStar/ProteinConformationMap.java	/^	public ProteinConformationTrie remove(Object key) {$/;"	m	class:ProteinConformationMap
remove	BDAStarTest/TestConformationMap.java	/^	public ProteinConformationTrie remove(Object key) {$/;"	m	class:TestConformationMap
remove	kstar/PrunedRotamers.java	/^	public void remove() {$/;"	m	class:PrunedRotIterator
removeDuplicates	kstar/KSParser.java	/^	public OneMutation [] removeDuplicates(OneMutation mutArray[]){$/;"	m	class:KSParser
removeExtraE	kstar/RotamerSearch.java	/^	private float removeExtraE(boolean templateOnly, int res1Strand, int res1Resnum, int res2Strand, int res2Resnum, int strandMut[][]){$/;"	m	class:RotamerSearch	file:
removeFinishedConformation	BDAStar/BWMAStarNode.java	/^    private void removeFinishedConformation (int offset) $/;"	m	class:BWMAStarNode	file:
removeFinishedConformation	BDAStar/CopyOfBWMAStarNode.java	/^    private void removeFinishedConformation (int offset) $/;"	m	class:CopyOfBWMAStarNode	file:
removeImpossibleRCs	kstar/RotamerSearch.java	/^        public void removeImpossibleRCs(int numMutable, int strandMut[][]){$/;"	m	class:RotamerSearch
removePertStates	kstar/PerturbationSelector.java	/^    private boolean[][] removePertStates(Residue res, int numPruned, boolean prunedPertStates[], boolean ramaAllowedLong[][]){$/;"	m	class:PerturbationSelector	file:
removeRCs	kstar/StrandRCs.java	/^        public void removeRCs(boolean[][][] toRemove){\/\/Remove the RCs with true values in toRemove (indices: position in strand, AA type, RC number)$/;"	m	class:StrandRCs
renumberResidue	kstar/Residue.java	/^	public void renumberResidue(){$/;"	m	class:Residue
repeatEW	kstar/CommucObj.java	/^	boolean repeatEW[] = null;$/;"	f	class:CommucObj
repeatSearch	kstar/CommucObj.java	/^	boolean repeatSearch = true;$/;"	f	class:CommucObj
repeatSearch	kstar/MutationManager.java	/^	boolean repeatSearch = true;$/;"	f	class:MutationManager
repeatSearch	kstar/RotamerSearch.java	/^	boolean repeatSearch = false;	\/\/ determines if the search must be repeated to achieve the desired accuracy$/;"	f	class:RotamerSearch
reportError	kstar/TreeEdge.java	/^        private void reportError(int previous, int result)$/;"	m	class:TreeEdge.Conf	file:
reportError	kstar/TreeEdge.java	/^        private void reportError(int previous, int result)$/;"	m	class:TreeEdge.RightConf	file:
res1A96ff	kstar/RotamerSearch.java	/^	Amber96ext res1A96ff; \/\/KER: forcefields to store terms for single amino acid energy $/;"	f	class:RotamerSearch
res2A96ff	kstar/RotamerSearch.java	/^    Amber96ext res2A96ff;$/;"	f	class:RotamerSearch
resAffected	kstar/CloseLoop.java	/^	int[] resAffected;$/;"	f	class:CloseLoop
resAffected	kstar/Perturbation.java	/^    int resAffected[];\/\/Molecule-based numbers of affected residues$/;"	f	class:Perturbation
resInPair	kstar/DEE.java	/^	boolean resInPair[] = null;$/;"	f	class:DEE
resInTriple	kstar/DEEGoldsteinTriples.java	/^        boolean resInTriple[];$/;"	f	class:DEEGoldsteinTriples
resMut	kstar/CommucObj.java	/^	int resMut[] = null;$/;"	f	class:CommucObj
resMut	kstar/OneMutation.java	/^	int resMut[] = null;$/;"	f	class:OneMutation
resMutatable	kstar/CommucObj.java	/^	boolean resMutatable[] = null;$/;"	f	class:CommucObj
resMutatable	kstar/MutationManager.java	/^	boolean resMutatable[][] = null;$/;"	f	class:MutationManager
resTypes	kstar/OneMutation.java	/^	String resTypes[] = null;$/;"	f	class:OneMutation
resetMatrices	kstar/RotamerSearch.java	/^	public void resetMatrices() {$/;"	m	class:RotamerSearch
resetMessages	kstar/ThreadElement.java	/^	public void resetMessages(){$/;"	m	class:ThreadElement
residue	BDAStar/ProteinPosition.java	/^	private int residue;$/;"	f	class:ProteinPosition	file:
residue	kstar/Amber96PolyPeptideResidue.java	/^	Residue residue;$/;"	f	class:Amber96PolyPeptideResidue
residue	kstar/Molecule.java	/^	Residue	residue[] = null;		\/\/ Array of residues in this molecule$/;"	f	class:Molecule
residue	kstar/Strand.java	/^	Residue	residue[];	\/\/ Array of residues in the strand$/;"	f	class:Strand
residueAtomNumber	kstar/Atom.java	/^	int	residueAtomNumber=-1;			\/\/ the atom number within this residue$/;"	f	class:Atom
residueTreat	kstar/VolModule.java	/^	int residueTreat[];			\/\/ Array of residues, 1 = surface should be computed$/;"	f	class:VolModule
resolveCoordinates	kstar/Molecule.java	/^	public void resolveCoordinates(){$/;"	m	class:Molecule
resolveCoordinates	kstar/Molecule.java	/^	public void resolveCoordinates(int atomNumber){$/;"	m	class:Molecule
resort	BDAStar/BDAStarNode.java	/^    public void resort()$/;"	m	class:BDAStarNode
resort	BDAStar/BWMAStarNode.java	/^    public void resort()$/;"	m	class:BWMAStarNode
resort	BDAStar/BWMStarNode.java	/^    public void resort()$/;"	m	class:BWMStarNode
resort	BDAStar/CopyOfBWMAStarNode.java	/^    public void resort()$/;"	m	class:CopyOfBWMAStarNode
resort	BDAStar/ProteinConformationTrie.java	/^    public void resort () {$/;"	m	class:ProteinConformationTrie
restore	kstar/CloseLoop.java	/^	public void restore()$/;"	m	class:CloseLoop
restoreAtomCoord	kstar/Molecule.java	/^	public void restoreAtomCoord(){$/;"	m	class:Molecule
restoreCoord	kstar/BBMinimizer.java	/^	private void restoreCoord(int resNum, float storedCoord[]){$/;"	m	class:BBMinimizer	file:
restoreCoord	kstar/BackrubMinimizer.java	/^	private void restoreCoord(int resNum, float storedCoord[]){$/;"	m	class:BackrubMinimizer	file:
restoreCoord	kstar/Molecule.java	/^	private void restoreCoord(Atom updateAtom){$/;"	m	class:Molecule	file:
restoreCoord	kstar/SimpleMinimizer.java	/^	private void restoreCoord(int index, int mAtNum){$/;"	m	class:SimpleMinimizer	file:
restoreResBB	kstar/Perturbation.java	/^    public void restoreResBB( Residue res, HashMap<String, float[]> resCoord ){$/;"	m	class:Perturbation
restoreSignalHandlers	mpi/MPI.java	/^    static private native void restoreSignalHandlers(); $/;"	m	class:MPI	file:
restoreStrCoord	kstar/SimpleMinimizer.java	/^	private void restoreStrCoord(int strNumber, float bckpStrCoords[]){			$/;"	m	class:SimpleMinimizer	file:
restoreWTCoord	kstar/StrandRCs.java	/^        public void restoreWTCoord(Molecule m, int resNum){$/;"	m	class:StrandRCs
revertPertParamsToCurState	kstar/Molecule.java	/^    public void revertPertParamsToCurState(){$/;"	m	class:Molecule
rightChild	BDAStar/BWMStarNode.java	/^    private BWMStarNode rightChild;$/;"	f	class:BWMStarNode	file:
rightChild	kstar/TreeEdge.java	/^    TreeNode rightChild;$/;"	f	class:TreeEdge
rightChildren	BDAStar/BWMAStarNode.java	/^    private PriorityQueue<BWMAStarNode> rightChildren;$/;"	f	class:BWMAStarNode	file:
rightEnergy	kstar/TreeEdge.java	/^        double rightEnergy;$/;"	f	class:TreeEdge.Conf
rightSideConformation	BDAStar/BWMAStarNode.java	/^    private Conformation rightSideConformation;$/;"	f	class:BWMAStarNode	file:
rightSideConformation	BDAStar/BWMStarNode.java	/^    private Conformation rightSideConformation;$/;"	f	class:BWMStarNode	file:
rightSideConformation	BDAStar/CopyOfBWMAStarNode.java	/^    private Conformation rightSideConformation;$/;"	f	class:CopyOfBWMAStarNode	file:
rightSolutionMap	kstar/TreeEdge.java	/^    private Map<String, List<RightConf>> rightSolutionMap;$/;"	f	class:TreeEdge	file:
rightSolutionOffset	kstar/TreeEdge.java	/^    private Map<String,Integer> rightSolutionOffset;$/;"	f	class:TreeEdge	file:
rightSubtree	BDAStar/CopyOfBWMAStarNode.java	/^    private CopyOfBWMAStarNode rightSubtree;$/;"	f	class:CopyOfBWMAStarNode	file:
rl	kstar/CommucObj.java	/^	RotamerLibrary rl;$/;"	f	class:CommucObj
rl	kstar/StrandRotamers.java	/^	public RotamerLibrary rl = null; \/\/the rotamer library object$/;"	f	class:StrandRotamers
rm	kstar/PartialStructureSwitch.java	/^    RotMatrix rm = new RotMatrix();$/;"	f	class:PartialStructureSwitch
rm	kstar/TripeptideClosure.java	/^  RotMatrix rm = new RotMatrix();$/;"	f	class:TripeptideClosure
root	kstar/BranchTree.java	/^	private TreeNode root = null; \/\/the root of the tree$/;"	f	class:BranchTree	file:
root	kstar/TreeEdge.java	/^    private static BWMAStarNode root;$/;"	f	class:TreeEdge	file:
rot	kstar/CommucObj.java	/^		int rot[] = null;$/;"	f	class:CommucObj.ConfInfo
rot	kstar/DEESplit2f.java	/^		int rot;$/;"	f	class:DEESplit2f.ArrayIndex
rot	kstar/PrunedRotamers.java	/^	int rot;$/;"	f	class:Index3
rot	kstar/RotTypeMap.java	/^	public int rot = -1;$/;"	f	class:RotTypeMap
rotFile	kstar/MutationManager.java	/^	String rotFile = null;$/;"	f	class:MutationManager
rotFile	kstar/RotamerLibrary.java	/^	private String rotFile;$/;"	f	class:RotamerLibrary	file:
rotFileIn	kstar/CommucObj.java	/^	String rotFileIn = null;$/;"	f	class:CommucObj
rotInMutInd	kstar/BoundFlags.java	/^	PrunedRotamers<Boolean> rotInMutInd;$/;"	f	class:BoundFlags
rotInMutInd	kstar/MSMinBounds.java	/^	PrunedRotamers<Boolean> rotInMutInd;$/;"	f	class:MSMinBounds
rotLib	kstar/MutationManager.java	/^	RotamerLibrary rotLib = null;$/;"	f	class:MutationManager
rotLibs	kstar/KSParser.java	/^	    RotamerLibrary[][] rotLibs = new RotamerLibrary[3][];$/;"	f	class:KSParser
rotMatrices	kstar/LoopClosureAdjustment.java	/^    float[][][][][] rotMatrices = new float[0][][][][];\/\/Rotation matrices$/;"	f	class:LoopClosureAdjustment
rotTrans	kstar/Strand.java	/^	boolean rotTrans = false;$/;"	f	class:Strand
rotamer	BDAStar/ProteinChoice.java	/^    public int rotamer;$/;"	f	class:ProteinChoice
rotamerIndexOffset	kstar/RotamerLibrary.java	/^	private int rotamerIndexOffset[] = null; \/\/the rotamer index offset for each amino acid (AAs with 0 rotamers are counted as 1 rotamer)$/;"	f	class:RotamerLibrary	file:
rotamerValues	kstar/RotamerLibrary.java	/^	private int rotamerValues[][][];  \/\/ Actual angle values for each rotamer for each amino acid$/;"	f	class:RotamerLibrary	file:
rotamerVolumes	kstar/RotamerLibrary.java	/^	private float rotamerVolumes[][];	\/\/ Volumes of each rotamer for each amino acid$/;"	f	class:RotamerLibrary	file:
rotamersRemaining	kstar/KSParser.java	/^private int[] rotamersRemaining(int numRotForRes[], PrunedRotamers<Boolean> prunedRotAtRes){$/;"	m	class:KSParser	file:
rotateAroundCOM	kstar/Molecule.java	/^	public void rotateAroundCOM(double dx, double dy, double dz,$/;"	m	class:Molecule
rotateAroundCOM	kstar/Strand.java	/^	public void rotateAroundCOM(double dx, double dy, double dz,$/;"	m	class:Strand
rotateAtom	kstar/Molecule.java	/^	public void rotateAtom(int i, float dx, float dy, float dz,$/;"	m	class:Molecule
rotateAtomList	kstar/Molecule.java	/^	public void rotateAtomList(int atomList[], float dx, float dy, float dz,$/;"	m	class:Molecule
rotateAtomList	kstar/Molecule.java	/^        public void rotateAtomList(int atomList[], float[][] rot_mtx, double cx, double cy, double cz, boolean updateAtoms){$/;"	m	class:Molecule
rotateList	kstar/Backrubs.java	/^	private void rotateList(Molecule m, int atomList[], Atom a1, Atom a2, Atom c, float theta){$/;"	m	class:Backrubs	file:
rotateMolecule	kstar/Molecule.java	/^	public void rotateMolecule(double dx, double dy, double dz,$/;"	m	class:Molecule
rotatePoint	kstar/BBMinimizer.java	/^	private double [] rotatePoint(double coord[], float thetaDeg, float d[], double c[]){$/;"	m	class:BBMinimizer	file:
rotatePoint	kstar/BackrubMinimizer.java	/^	private double [] rotatePoint(double coord[], float thetaDeg, float d[], double c[]){$/;"	m	class:BackrubMinimizer	file:
rotateResidue	kstar/Molecule.java	/^	public void rotateResidue(int resNum, float dx, float dy, float dz,$/;"	m	class:Molecule
rotateResidue	kstar/Residue.java	/^	public void rotateResidue(Atom at1, double dx, double dy,$/;"	m	class:Residue
rotateStrand	kstar/Molecule.java	/^	public void rotateStrand(int ligStrNum, float dx, float dy, float dz,$/;"	m	class:Molecule
rotateStrand	kstar/Strand.java	/^	public void rotateStrand(double dx, double dy, double dz,$/;"	m	class:Strand
rotateStrandAroundCOM	kstar/Molecule.java	/^	public void rotateStrandAroundCOM(int ligStrNum, float dx, float dy,$/;"	m	class:Molecule
rs	kstar/KSParser.java	/^		private RotamerSearch rs = null;$/;"	f	class:KSParser.DACSthread	file:
rsend	mpi/Comm.java	/^  private native void rsend(Object   buf,$/;"	m	class:Comm	file:
rtm	kstar/TreeEdge.java	/^        RotTypeMap[][] rtm;$/;"	f	class:TreeEdge.Conf
rtm	kstar/TreeEdge.java	/^    private RotTypeMap rtm[][] = null; \/\/the mapping between state indices and residue\/aa\/rot tuples$/;"	f	class:TreeEdge	file:
run	kstar/KSParser.java	/^		public void run(){$/;"	m	class:KSParser.DACSthread
run	kstar/KSthread.java	/^	public void run() {$/;"	m	class:KSthread
s	BranchDecomposition/BreadthFirstSearch.java	/^	private int s = -1; \/\/the index of the source node$/;"	f	class:BreadthFirstSearch	file:
sParams	kstar/MutationManager.java	/^	ParamSet sParams = null;$/;"	f	class:MutationManager
sRC	kstar/PerturbationSelector.java	/^    StrandRCs sRC[];$/;"	f	class:PerturbationSelector
sameSeq	kstar/KSParser.java	/^	private boolean sameSeq (int computedResMut[], int allResMut[]){$/;"	m	class:KSParser	file:
sampFindMutationIndex	kstar/KSParser.java	/^	public int sampFindMutationIndex(OneMutation resumeResults[], String flMutType, int mutResidues[]) {$/;"	m	class:KSParser
samplesBB	kstar/RotamerSearch.java	/^	final int samplesBB = 1000;\/\/number samples for intra-rotamer energy matrix computation with backbone flexibility$/;"	f	class:RotamerSearch
sanityCheck	kstar/Molecule.java	/^	public int sanityCheck(int checkLevel, boolean fix){$/;"	m	class:Molecule
saveConf	kstar/RotamerSearch.java	/^	private void saveConf(int[] conf, float energy, String filename, int[][] strandMut,$/;"	m	class:RotamerSearch	file:
saveMolecule	kstar/KSParser.java	/^	public void saveMolecule(Molecule m, String fname, float energy){$/;"	m	class:KSParser
saveMolecule	kstar/Molecule.java	/^	public void saveMolecule(String fname, float energy){$/;"	m	class:Molecule
saveMolecule	kstar/RotamerSearch.java	/^	public void saveMolecule(Molecule m, String fname, float energy){$/;"	m	class:RotamerSearch
saveMutationList	kstar/KSParser.java	/^	public void saveMutationList(Set<OneMutation> mutList, String fName, boolean PEMcomp) {$/;"	m	class:KSParser
saveSignalHandlers	mpi/MPI.java	/^    static private native void saveSignalHandlers();$/;"	m	class:MPI	file:
saveTopConfs	kstar/CommucObj.java	/^	public boolean saveTopConfs = false;$/;"	f	class:CommucObj
saveTopConfs	kstar/MutationManager.java	/^	private boolean saveTopConfs;$/;"	f	class:MutationManager	file:
sbisect	kstar/SturmSolver.java	/^    void sbisect(int np, poly sseq[], double min, double max, int atmin, int atmax, double roots[])$/;"	m	class:SturmSolver
scale	kstar/RotMatrix.java	/^        double[] scale(double[] vec, double scalar){$/;"	m	class:RotMatrix
scale	kstar/RotMatrix.java	/^        float[] scale(float[] vec, float scalar){$/;"	m	class:RotMatrix
scaleInt	kstar/CommucObj.java	/^	boolean scaleInt = false;$/;"	f	class:CommucObj
scaleInt	kstar/MinDEEIntervals.java	/^	boolean scaleInt = false;$/;"	f	class:MinDEEIntervals
scaleInt	kstar/MutationManager.java	/^	boolean scaleInt = false;$/;"	f	class:MutationManager
scan	mpi/Intracomm.java	/^  private native void scan(Object sendbuf, int sendoffset, $/;"	m	class:Intracomm	file:
scatter	mpi/Intracomm.java	/^  private native void scatter(Object   sendbuf, $/;"	m	class:Intracomm	file:
scatterv	mpi/Intracomm.java	/^  private native void scatterv(Object   sendbuf, $/;"	m	class:Intracomm	file:
score	BDAStar/AbstractConformation.java	/^    private double score;$/;"	f	class:AbstractConformation	file:
score	BDAStar/BDAStarNode.java	/^    private double score = Double.MAX_VALUE;$/;"	f	class:BDAStarNode	file:
score	BDAStar/Conformation.java	/^    public double score ();$/;"	m	interface:Conformation
score	BDAStar/EnergyFunction.java	/^    public double score(ProteinConformation c)$/;"	m	class:EnergyFunction
score	BDAStar/ProteinConformation.java	/^    private double score = MAX_ENERGY;$/;"	f	class:ProteinConformation	file:
score	BDAStar/ProteinConformation.java	/^    public double score () {$/;"	m	class:ProteinConformation
score	BDAStarTest/TestConformation.java	/^    public double score () {$/;"	m	class:TestConformation
score	BDAStarTest/TestProteinConformation.java	/^    private double score = MAX_ENERGY;$/;"	f	class:TestProteinConformation	file:
score	BDAStarTest/TestProteinConformation.java	/^    public double score () {$/;"	m	class:TestProteinConformation
score	kstar/OneMutation.java	/^	BigDecimal score = new BigDecimal("0.0");$/;"	f	class:OneMutation
scoreString	BDAStarTest/BDAStarTest.java	/^    public static double scoreString(String conf)$/;"	m	class:BDAStarTest
scoreString	BDAStarTest/BWMStarNodeTest.java	/^    public static double scoreString(String conf)$/;"	m	class:BWMStarNodeTest
searchBestEnergyFound	kstar/CommucObj.java	/^	float searchBestEnergyFound[] = null;$/;"	f	class:CommucObj
searchNumConfsEvaluated	kstar/CommucObj.java	/^	int searchNumConfsEvaluated[] = null;$/;"	f	class:CommucObj
searchNumConfsLeft	kstar/CommucObj.java	/^	int searchNumConfsLeft[] = null;$/;"	f	class:CommucObj
searchNumConfsPrunedByE	kstar/CommucObj.java	/^	int searchNumConfsPrunedByE[] = null;$/;"	f	class:CommucObj
searchNumConfsPrunedByS	kstar/CommucObj.java	/^	int searchNumConfsPrunedByS[] = null;$/;"	f	class:CommucObj
searchNumConfsTotal	kstar/CommucObj.java	/^	int searchNumConfsTotal[] = null;$/;"	f	class:CommucObj
searchNumPrunedMinDEE	kstar/CommucObj.java	/^	int searchNumPrunedMinDEE[] = null;$/;"	f	class:CommucObj
searchSubtree	BDAStar/BWMAStarNode.java	/^    private static TreeNode searchSubtree(TreeNode node) {$/;"	m	class:BWMAStarNode	file:
searchSubtree	BDAStar/BWMStarNode.java	/^    private static TreeNode searchSubtree(TreeNode node) {$/;"	m	class:BWMStarNode	file:
searchSubtree	kstar/TreeEdge.java	/^    private TreeNode searchSubtree(TreeNode tn){$/;"	m	class:TreeEdge	file:
secondaryHeapMap	kstar/TreeEdge.java	/^    private Map<String, LazyHeap<Conf>> secondaryHeapMap;$/;"	f	class:TreeEdge	file:
secondaryStruct	kstar/Residue.java	/^        int secondaryStruct;$/;"	f	class:Residue
sections	kstar/PartialStructureSwitch.java	/^    ChainSection sections[][];\/\/Information on contiguous protein chain sections of alternate structures$/;"	f	class:PartialStructureSwitch
segID	kstar/Atom.java	/^	String  segID = "";			\/\/ the atom segment id, specifically included for the molecular replacement proj$/;"	f	class:Atom
selectPerturbations	kstar/KSParser.java	/^        private void selectPerturbations(MolParameters mp, boolean doPerturbations, String pertFile, boolean minimizePerts,$/;"	m	class:KSParser	file:
selectPerturbations	kstar/PerturbationSelector.java	/^    public void selectPerturbations(){$/;"	m	class:PerturbationSelector
selectResidues	kstar/KSParser.java	/^	private void selectResidues(String s) {$/;"	m	class:KSParser	file:
selected	kstar/Atom.java	/^	boolean	selected = true;$/;"	f	class:Atom
selfEnergy	kstar/TreeEdge.java	/^        double selfEnergy;$/;"	f	class:TreeEdge.Conf
send	mpi/Comm.java	/^  private native void send(Object   buf, $/;"	m	class:Comm	file:
serialVersionUID	kstar/TreeEdge.java	/^    private static final long serialVersionUID = 1L;$/;"	f	class:TreeEdge	file:
set	kstar/PrunedRotamers.java	/^	public void set(Index3 i, T val){$/;"	m	class:PrunedRotamers
set	kstar/PrunedRotamers.java	/^	public void set(RotInfo<?> ri, T val){$/;"	m	class:PrunedRotamers
set	kstar/PrunedRotamers.java	/^	public void set(int curPos, int curAA, int curRot, T val){$/;"	m	class:PrunedRotamers
setAAallowed	kstar/MutationManager.java	/^	public void setAAallowed(String aal[][]){$/;"	m	class:MutationManager
setAArotLib	kstar/EnvironmentVars.java	/^	public static void setAArotLib(String rl){$/;"	m	class:EnvironmentVars
setASdist	kstar/MutationManager.java	/^	public void setASdist(float d){$/;"	m	class:MutationManager
setASdistMatrix	kstar/MutationManager.java	/^	public void setASdistMatrix(boolean ad[][]){$/;"	m	class:MutationManager
setActualCoords	kstar/Molecule.java	/^	public void setActualCoords(float ac[]){$/;"	m	class:Molecule
setAddOrigRots	kstar/MutationManager.java	/^	public void setAddOrigRots(boolean aor) {$/;"	m	class:MutationManager
setAddWTRot	kstar/MutationManager.java	/^        public void setAddWTRot(boolean awr){$/;"	m	class:MutationManager
setAddedRotamers	kstar/RotamerLibrary.java	/^	public void setAddedRotamers(boolean addedRotamers) {$/;"	m	class:RotamerLibrary
setAlgOption	kstar/MutationManager.java	/^	public void setAlgOption(int ao){$/;"	m	class:MutationManager
setAllowable	kstar/RotamerSearch.java	/^	public void setAllowable(int resNum, String name, int strNum) {$/;"	m	class:RotamerSearch
setAllowable	kstar/StrandRotamers.java	/^	public void setAllowable(int resNum, String name) {$/;"	m	class:StrandRotamers
setAllowablesHelper	kstar/KSParser.java	/^	private void setAllowablesHelper(RotamerSearch rs, ParamSet sParams, boolean addWT, int strNum, int molStrand, int curPos, int[][] strandMut, String strandDefault[][]){$/;"	m	class:KSParser	file:
setApproxMinGMEC	kstar/MutationManager.java	/^	public void setApproxMinGMEC(boolean amg){$/;"	m	class:MutationManager
setAtomCoord	kstar/StrandRotamers.java	/^	private void setAtomCoord(Atom toAt, Atom fromAt){$/;"	m	class:StrandRotamers	file:
setBWMAStarObjects	kstar/TreeEdge.java	/^    public void setBWMAStarObjects( BWMAStarNode node, BWMSolutionSpace space)$/;"	m	class:TreeEdge
setBackrubFile	kstar/MutationManager.java	/^	public void setBackrubFile(String brf){$/;"	m	class:MutationManager
setBasic	mpi/Datatype.java	/^  void setBasic (int Type) { $/;"	m	class:Datatype
setBestE	kstar/RotamerSearch.java	/^	public synchronized void setBestE(float newBestE){$/;"	m	class:RotamerSearch
setBestScore	kstar/MutationManager.java	/^	public void setBestScore(BigDecimal bs){$/;"	m	class:MutationManager
setBoundingBoxScale	kstar/VolModule.java	/^	public void setBoundingBoxScale (double scale) {$/;"	m	class:VolModule
setBucketResolution	kstar/VolModule.java	/^	public void setBucketResolution (double spacing) {$/;"	m	class:VolModule
setC	kstar/TreeEdge.java	/^    public void setC(TreeNode cn){$/;"	m	class:TreeEdge
setCalculateVolumes	kstar/MutationManager.java	/^	public void setCalculateVolumes(boolean cv) {$/;"	m	class:MutationManager
setChecked	BranchDecomposition/BranchEdge.java	/^	public void setChecked(BranchNode bn, boolean c){$/;"	m	class:BranchEdge
setCofEdge	kstar/TreeNode.java	/^	public void setCofEdge(TreeEdge ce){$/;"	m	class:TreeNode
setCompASdist	kstar/MutationManager.java	/^	public void setCompASdist(boolean ad){$/;"	m	class:MutationManager
setCompleteGraph	BranchDecomposition/GraphVertices.java	/^	public void setCompleteGraph(){$/;"	m	class:GraphVertices
setComputeEVEnergy	kstar/MutationManager.java	/^	public void setComputeEVEnergy(boolean ceve) {$/;"	m	class:MutationManager
setConfigPars	kstar/KSParser.java	/^	public void setConfigPars() {$/;"	m	class:KSParser
setContiguous	mpi/Datatype.java	/^  void setContiguous(int count, Datatype oldtype) throws MPIException {$/;"	m	class:Datatype
setCoords	kstar/Atom.java	/^	public void setCoords(float xpos, float ypos, float zpos){$/;"	m	class:Atom
setDataDir	kstar/EnvironmentVars.java	/^	public static void setDataDir(String dd) {$/;"	m	class:EnvironmentVars
setDefaultParams	kstar/Backrub.java	/^    public void setDefaultParams(){$/;"	m	class:Backrub
setDefaultParams	kstar/FullStructureSwitch.java	/^    public void setDefaultParams(){$/;"	m	class:FullStructureSwitch
setDefaultParams	kstar/LoopClosureAdjustment.java	/^    public void setDefaultParams(){\/\/There can be up to 16 solutions so we create that many states$/;"	m	class:LoopClosureAdjustment
setDefaultParams	kstar/PartialStructureSwitch.java	/^    public void setDefaultParams(){$/;"	m	class:PartialStructureSwitch
setDefaultParams	kstar/Perturbation.java	/^    abstract public void setDefaultParams();\/\/Set up the default perturbation states$/;"	m	class:Perturbation
setDefaultParams	kstar/ProlineFlip.java	/^    public void setDefaultParams(){$/;"	m	class:ProlineFlip
setDefaultParams	kstar/Shear.java	/^    public void setDefaultParams(){$/;"	m	class:Shear
setDielectConst	kstar/MutationManager.java	/^	public void setDielectConst(double dc){$/;"	m	class:MutationManager
setDiffFact	kstar/MutationManager.java	/^	public void setDiffFact(int df){$/;"	m	class:MutationManager
setDistDepDielect	kstar/MutationManager.java	/^	public void setDistDepDielect(boolean ddd){$/;"	m	class:MutationManager
setDistrDACS	kstar/MutationManager.java	/^	public void setDistrDACS(boolean dDACS){$/;"	m	class:MutationManager
setDistrDEE	kstar/MutationManager.java	/^	public void setDistrDEE(boolean dDEE){$/;"	m	class:MutationManager
setDoBackrubs	kstar/MutationManager.java	/^	public void setDoBackrubs(boolean br){$/;"	m	class:MutationManager
setDoDihedE	kstar/MutationManager.java	/^	public void setDoDihedE(boolean dde){$/;"	m	class:MutationManager
setDoMinimization	kstar/MutationManager.java	/^	public void setDoMinimization(boolean dm) {$/;"	m	class:MutationManager
setDoPerturbations	kstar/MutationManager.java	/^        public void setDoPerturbations(boolean dp){$/;"	m	class:MutationManager
setDoSolvationE	kstar/MutationManager.java	/^	public void setDoSolvationE(boolean dse){$/;"	m	class:MutationManager
setEnergyEval	kstar/Residue.java	/^	public void setEnergyEval(boolean scEval, boolean bbEval){$/;"	m	class:Residue
setEntropyComp	kstar/MutationManager.java	/^	public void setEntropyComp(boolean ec){$/;"	m	class:MutationManager
setEntropyScale	kstar/EnvironmentVars.java	/^	public static void setEntropyScale(double es){$/;"	m	class:EnvironmentVars
setEnumerationObjects	kstar/BranchTree.java	/^	public void setEnumerationObjects(BWMAStarNode asroot,$/;"	m	class:BranchTree
setEnumerationObjects	kstar/TreeNode.java	/^	public void setEnumerationObjects(BWMAStarNode asroot,$/;"	m	class:TreeNode
setEpsilon	kstar/MutationManager.java	/^	public void setEpsilon(double g) {$/;"	m	class:MutationManager
setEpsilon	kstar/MutationManager.java	/^	public void setEpsilon(float g) {$/;"	m	class:MutationManager
setEref	kstar/MutationManager.java	/^	public void setEref(float er[][]){$/;"	m	class:MutationManager
setErefMatrix	kstar/MutationManager.java	/^	public void setErefMatrix(float eRef[][]){$/;"	m	class:MutationManager
setErefMatrixName	kstar/MutationManager.java	/^	public void setErefMatrixName(String erm) {$/;"	m	class:MutationManager
setForcefieldInputs	kstar/Amber96ext.java	/^	private void setForcefieldInputs(){$/;"	m	class:Amber96ext	file:
setForcefld	kstar/EnvironmentVars.java	/^	public static void setForcefld(String frcefld) {$/;"	m	class:EnvironmentVars
setGamma	kstar/MutationManager.java	/^	public void setGamma(double g) {$/;"	m	class:MutationManager
setGenChi1	kstar/Perturbation.java	/^    public static void setGenChi1(Molecule m, int molResNum, double ang){$/;"	m	class:Perturbation
setGenChi1	kstar/Perturbation.java	/^    public void setGenChi1(double ang[]){\/\/Set each residue's generalized chi1 to the specified values$/;"	m	class:Perturbation
setIdealizeSC	kstar/MutationManager.java	/^        public void setIdealizeSC(boolean idealizeSC) {$/;"	m	class:MutationManager
setIndex	BranchDecomposition/BranchNode.java	/^	public void setIndex(int i){$/;"	m	class:BranchNode
setInitDepth	kstar/MutationManager.java	/^	public void setInitDepth(int id){$/;"	m	class:MutationManager
setInitEw	kstar/MutationManager.java	/^	public void setInitEw(float iew){$/;"	m	class:MutationManager
setInitialAngleStepSize	kstar/SimpleMinimizer.java	/^	public void setInitialAngleStepSize(float num){	$/;"	m	class:SimpleMinimizer
setIntraE	kstar/PairwiseEnergyMatrix.java	/^        public void setIntraE(int res1, int AA1, int rot1, float val){$/;"	m	class:PairwiseEnergyMatrix
setIntraEntropyMatrixMin	kstar/MutationManager.java	/^	public void setIntraEntropyMatrixMin(float pemMin[][]){$/;"	m	class:MutationManager
setIsBBatom	kstar/Atom.java	/^	public boolean setIsBBatom(){$/;"	m	class:Atom
setLambda	kstar/MutationManager.java	/^	public void setLambda(float l){$/;"	m	class:MutationManager
setLc	kstar/TreeNode.java	/^	public void setLc(TreeNode slc){$/;"	m	class:TreeNode
setLigPartFn	kstar/MutationManager.java	/^	public void setLigPartFn(BigDecimal ql){$/;"	m	class:MutationManager
setLigPresent	kstar/MutationManager.java	/^	public void setLigPresent(boolean lp) {$/;"	m	class:MutationManager
setLigandNum	kstar/Amber96ext.java	/^	public void setLigandNum(int lignum){$/;"	m	class:Amber96ext
setM	BranchDecomposition/BranchEdge.java	/^	public void setM(LinkedHashSet<String> nM){$/;"	m	class:BranchEdge
setM	kstar/TreeEdge.java	/^    public void setM(LinkedHashSet<Integer> lambda2) $/;"	m	class:TreeEdge
setMSP	kstar/MutationManager.java	/^	public void setMSP(int m[]){$/;"	m	class:MutationManager
setMagicBulletNumTriples	kstar/MutationManager.java	/^        public void setMagicBulletNumTriples(int magicBulletNumTriples) {$/;"	m	class:MutationManager
setMagicBulletTriples	kstar/MutationManager.java	/^        public void setMagicBulletTriples(boolean magicBulletTriples) {$/;"	m	class:MutationManager
setMaxIntScale	kstar/MutationManager.java	/^	public void setMaxIntScale(float is){$/;"	m	class:MutationManager
setMaxKSconfs	kstar/MutationManager.java	/^	public void setMaxKSconfs(BigInteger mkc) {$/;"	m	class:MutationManager
setMessage	kstar/ThreadElement.java	/^	public void setMessage(ThreadMessage t){$/;"	m	class:ThreadElement
setMinDEEFileName	kstar/MutationManager.java	/^	public void setMinDEEFileName(String mdf) {$/;"	m	class:MutationManager
setMinRatioDiff	kstar/MutationManager.java	/^	public void setMinRatioDiff(double mrd){$/;"	m	class:MutationManager
setMinimizeBB	kstar/MutationManager.java	/^	public void setMinimizeBB(boolean mbb){$/;"	m	class:MutationManager
setMinimizePerts	kstar/MutationManager.java	/^        public void setMinimizePerts(boolean mp){$/;"	m	class:MutationManager
setMut2Strand	kstar/MutationManager.java	/^	public void setMut2Strand(int m2s[]) {$/;"	m	class:MutationManager
setMut2StrandMutIndex	kstar/MutationManager.java	/^	public void setMut2StrandMutIndex(int m2sMi[]) {$/;"	m	class:MutationManager
setMutableSpots	kstar/MutationManager.java	/^	public void setMutableSpots(int ms) {$/;"	m	class:MutationManager
setNBEval	kstar/Amber96ext.java	/^	public void setNBEval(boolean electEval, boolean vdwEval) {$/;"	m	class:Amber96ext
setNumConfsLeft	kstar/StericCheck.java	/^	public void setNumConfsLeft(BigInteger numCLeft){$/;"	m	class:StericCheck
setNumInitUnprunedConf	kstar/MutationManager.java	/^	public void setNumInitUnprunedConf(BigInteger niuc){$/;"	m	class:MutationManager
setNumMutations	kstar/MutationManager.java	/^	public void setNumMutations(int nm){$/;"	m	class:MutationManager
setNumOfStrands	kstar/MutationManager.java	/^	public void setNumOfStrands(int s) {$/;"	m	class:MutationManager
setNumSpPos	kstar/MutationManager.java	/^	public void setNumSpPos(int spp){$/;"	m	class:MutationManager
setNumSplits	kstar/MutationManager.java	/^	public void setNumSplits(int ns){$/;"	m	class:MutationManager
setNumTopConfs	kstar/MutationManager.java	/^	public void setNumTopConfs(int ntc) {$/;"	m	class:MutationManager
setOutputConfInfo	kstar/MutationManager.java	/^	public void setOutputConfInfo(String oci){$/;"	m	class:MutationManager
setOutputPruneInfo	kstar/MutationManager.java	/^	public void setOutputPruneInfo(String opi){$/;"	m	class:MutationManager
setP	kstar/TreeEdge.java	/^    public void setP(TreeNode pn){$/;"	m	class:TreeEdge
setP	kstar/TreeNode.java	/^	public void setP(TreeNode sp){$/;"	m	class:TreeNode
setPCvar	kstar/BranchTree.java	/^	private void setPCvar(TreeNode p, TreeNode c, TreeEdge pc, boolean isL){$/;"	m	class:BranchTree	file:
setPairEMatrixMax	kstar/MutationManager.java	/^	public void setPairEMatrixMax(PairwiseEnergyMatrix pemMax){$/;"	m	class:MutationManager
setPairEMatrixMin	kstar/MutationManager.java	/^	public void setPairEMatrixMin(PairwiseEnergyMatrix pemMin){$/;"	m	class:MutationManager
setPairEntropyMatrix	kstar/MutationManager.java	/^	public void setPairEntropyMatrix(float aae[][][][]){$/;"	m	class:MutationManager
setPairwiseE	kstar/PairwiseEnergyMatrix.java	/^        public void setPairwiseE(int res1, int AA1, int rot1, int res2, int AA2, int rot2, float val){$/;"	m	class:PairwiseEnergyMatrix
setParams	kstar/Backrub.java	/^    public static void setParams(String s){$/;"	m	class:Backrub
setParams	kstar/MutationManager.java	/^	public void setParams(ParamSet theParams) {$/;"	m	class:MutationManager
setParams	kstar/Shear.java	/^    public static void setParams(String s){$/;"	m	class:Shear
setParamsValues	kstar/ParamSet.java	/^	public void setParamsValues(String inP[], String inV[], int nP){$/;"	m	class:ParamSet
setParent	BDAStar/BWMAStarNode.java	/^    public void setParent(BWMAStarNode p)$/;"	m	class:BWMAStarNode
setParent	BDAStar/BWMStarNode.java	/^    public void setParent(BWMStarNode p)$/;"	m	class:BWMStarNode
setPertFile	kstar/MutationManager.java	/^        public void setPertFile(String pf){$/;"	m	class:MutationManager
setPrintTopConfs	kstar/MutationManager.java	/^	public void setPrintTopConfs(boolean ptc) {$/;"	m	class:MutationManager
setProperties	kstar/Atom.java	/^	private void setProperties(){$/;"	m	class:Atom	file:
setPrunedRot	kstar/MutationManager.java	/^	public void setPrunedRot(PrunedRotamers<Boolean> pr){$/;"	m	class:MutationManager
setPruningE	kstar/MutationManager.java	/^	public void setPruningE(float pe){$/;"	m	class:MutationManager
setRCPertStates	kstar/StrandRCs.java	/^        public void setRCPertStates(int[][][] RCPertStates) {$/;"	m	class:StrandRCs
setRCRots	kstar/StrandRCs.java	/^        public void setRCRots(int[][][] RCRots) {$/;"	m	class:StrandRCs
setRc	kstar/TreeNode.java	/^	public void setRc(TreeNode src){$/;"	m	class:TreeNode
setRepeatSearch	kstar/MutationManager.java	/^	public void setRepeatSearch(boolean rs){$/;"	m	class:MutationManager
setResMutatable	kstar/MutationManager.java	/^	public void setResMutatable (int resMut[][]){$/;"	m	class:MutationManager
setResidueTreatment	kstar/VolModule.java	/^	public void setResidueTreatment (int resNum, int treatment) {$/;"	m	class:VolModule
setRotFile	kstar/MutationManager.java	/^	public void setRotFile(String rf){$/;"	m	class:MutationManager
setRotamerLibrary	kstar/MutationManager.java	/^	public void setRotamerLibrary(RotamerLibrary rl){$/;"	m	class:MutationManager
setSCEnergyEval	kstar/Residue.java	/^	public void setSCEnergyEval(boolean scEval){$/;"	m	class:Residue
setSaveTopConfs	kstar/MutationManager.java	/^	public void setSaveTopConfs(boolean stc) {$/;"	m	class:MutationManager
setScaleInt	kstar/MutationManager.java	/^	public void setScaleInt(boolean si){$/;"	m	class:MutationManager
setSfFile	kstar/MutationManager.java	/^	public void setSfFile(String sff){$/;"	m	class:MutationManager
setShellRotE	kstar/PairwiseEnergyMatrix.java	/^	public void setShellRotE(int pos, int AANum, int rot, float val){$/;"	m	class:PairwiseEnergyMatrix
setShellShellE	kstar/PairwiseEnergyMatrix.java	/^        public void setShellShellE(float val){$/;"	m	class:PairwiseEnergyMatrix
setSoftStericThresh	kstar/MutationManager.java	/^	public void setSoftStericThresh(float st){$/;"	m	class:MutationManager
setSolvScale	kstar/MutationManager.java	/^	public void setSolvScale(double ss){$/;"	m	class:MutationManager
setSolventRadius	kstar/VolModule.java	/^	public void setSolventRadius (double radius) {$/;"	m	class:VolModule
setSortScores	kstar/OneMutation.java	/^	public void setSortScores(boolean ss){$/;"	m	class:OneMutation
setSpFlags	kstar/MutationManager.java	/^	public void setSpFlags(boolean spFlags[][][][][][]){$/;"	m	class:MutationManager
setSpaceResolution	kstar/VolModule.java	/^	public void setSpaceResolution (double resol) {$/;"	m	class:VolModule
setSplitFlags	kstar/RotamerSearch.java	/^	public void setSplitFlags(){$/;"	m	class:RotamerSearch
setSplitFlags	kstar/RotamerSearch.java	/^	public void setSplitFlags(boolean fromMatrix[][][][][][]){$/;"	m	class:RotamerSearch
setStericE	kstar/MutationManager.java	/^	public void setStericE(double se){$/;"	m	class:MutationManager
setStericThresh	kstar/MutationManager.java	/^	public void setStericThresh(float st) {$/;"	m	class:MutationManager
setStrandDefault	kstar/MutationManager.java	/^	public void setStrandDefault(String sd[][]) {$/;"	m	class:MutationManager
setStrandLimits	kstar/MutationManager.java	/^	public void setStrandLimits(String sl[][]) {$/;"	m	class:MutationManager
setStrandMut	kstar/MutationManager.java	/^	public void setStrandMut(int sm[][]) {$/;"	m	class:MutationManager
setStrandPresent	kstar/MutationManager.java	/^	public void setStrandPresent(boolean sp[]) {$/;"	m	class:MutationManager
setStrandsPresent	kstar/MutationManager.java	/^	public void setStrandsPresent(int sp) {$/;"	m	class:MutationManager
setSubDepth	kstar/MutationManager.java	/^	public void setSubDepth(int sd){$/;"	m	class:MutationManager
setTemplateAlwaysOn	kstar/MutationManager.java	/^	public void setTemplateAlwaysOn(boolean templAlwaysOn) {$/;"	m	class:MutationManager
setTemplateOff	kstar/RotamerSearch.java	/^	public void setTemplateOff(int[][] strandMut, int res1, int res2, boolean shellRun, boolean templateOnly){$/;"	m	class:RotamerSearch
setTorsion	kstar/Molecule.java	/^	public void setTorsion(int a1num, int a2num, int a3num, int a4num, double torsion,$/;"	m	class:Molecule
setType	mpi/Comm.java	/^  void setType(int Type) {$/;"	m	class:Comm
setType	mpi/Intracomm.java	/^  void setType(int type) {$/;"	m	class:Intracomm
setTypeDEE	kstar/MutationManager.java	/^	public void setTypeDEE(int t){$/;"	m	class:MutationManager
setTypeDep	kstar/MutationManager.java	/^	public void setTypeDep(boolean tD) {$/;"	m	class:MutationManager
setUseEref	kstar/MutationManager.java	/^	public void setUseEref(boolean uer){$/;"	m	class:MutationManager
setUseFlagsAStar	kstar/MutationManager.java	/^        public void setUseFlagsAStar(boolean useFlagsAStar) {$/;"	m	class:MutationManager
setUseMaxKSconfs	kstar/MutationManager.java	/^	public void setUseMaxKSconfs(boolean useKSconfs) {$/;"	m	class:MutationManager
setUseSF	kstar/MutationManager.java	/^	public void setUseSF(boolean usf){$/;"	m	class:MutationManager
setUseTriples	kstar/MutationManager.java	/^        public void setUseTriples(boolean useTriples) {$/;"	m	class:MutationManager
setValue	kstar/ParamSet.java	/^	public void setValue(String paramName, String newValue){$/;"	m	class:ParamSet
setVdwMult	kstar/MutationManager.java	/^	public void setVdwMult(double vm){$/;"	m	class:MutationManager
setarpFilenameMax	kstar/MutationManager.java	/^	public void setarpFilenameMax(String afnm) {$/;"	m	class:MutationManager
setarpFilenameMin	kstar/MutationManager.java	/^	public void setarpFilenameMin(String afnm) {$/;"	m	class:MutationManager
setcurStrForMatrix	kstar/MutationManager.java	/^	public void setcurStrForMatrix(int cSFM) {$/;"	m	class:MutationManager
setupDihedralTerms	kstar/SimpleMinimizer.java	/^	public boolean setupDihedralTerms(){$/;"	m	class:SimpleMinimizer
setupMolSystem	kstar/KSParser.java	/^	private Molecule setupMolSystem(Molecule m, ParamSet sParams, boolean[] strandPresent, String[][] strandLimits){$/;"	m	class:KSParser	file:
setupMolSystem	kstar/KSParser.java	/^	private Molecule setupMolSystem(Molecule m, ParamSet sParams, boolean[] strandPresent, String[][] strandLimits, boolean keepCofactor){$/;"	m	class:KSParser	file:
setupOutputFile	BranchDecomposition/BranchDecompositionH.java	/^	private PrintStream setupOutputFile(String fileName){$/;"	m	class:BranchDecompositionH	file:
setupOutputFile	kstar/BackrubMinimizer.java	/^	private PrintStream setupOutputFile(String fileName){$/;"	m	class:BackrubMinimizer	file:
setupOutputFile	kstar/KSParser.java	/^	private PrintStream setupOutputFile(String fileName){$/;"	m	class:KSParser	file:
setupOutputFile	kstar/RotamerLibrary.java	/^	private PrintStream setupOutputFile(String fileName){$/;"	m	class:RotamerLibrary	file:
setupOutputFile	kstar/RotamerSearch.java	/^	private PrintStream setupOutputFile(String fileName){$/;"	m	class:RotamerSearch	file:
setupPartialAmber	kstar/BBMinimizer.java	/^	private void setupPartialAmber(){$/;"	m	class:BBMinimizer	file:
setupPartialAmber	kstar/BackrubMinimizer.java	/^	private void setupPartialAmber(){$/;"	m	class:BackrubMinimizer	file:
setupPartialArrays	kstar/Amber96ext.java	/^	public void setupPartialArrays(int numRows, int maxNumColumns, int atomList[][],int numColumns[]){$/;"	m	class:Amber96ext
setupPartialNonBondedArrays	kstar/Amber96ext.java	/^	private void setupPartialNonBondedArrays(int numRows, int maxNumColumns, int atomList[][],$/;"	m	class:Amber96ext	file:
setupPartialSolvationArrays	kstar/Amber96ext.java	/^	private void setupPartialSolvationArrays(int numRows, int maxNumColumns, int atomList[][],$/;"	m	class:Amber96ext	file:
setupPertStates	kstar/PMinimizer.java	/^        public void setupPertStates(){\/\/Once the molecule is in the right RC,$/;"	m	class:PMinimizer
setupPerturbations	kstar/PMinimizer.java	/^        public void setupPerturbations(boolean hasLig){\/\/Set up perturbation information$/;"	m	class:PMinimizer
setupRCs	kstar/RotamerSearch.java	/^        public void setupRCs(boolean addWTRot){$/;"	m	class:RotamerSearch
setupRepeatRun	kstar/RotamerSearch.java	/^	private void setupRepeatRun(BigInteger numPrunedConfsToAllow, int numRotForResNonPruned[], $/;"	m	class:RotamerSearch	file:
setupStrand	kstar/StrandRotamers.java	/^	private void setupStrand(Strand s) {$/;"	m	class:StrandRotamers	file:
sfFile	kstar/MutationManager.java	/^	String sfFile = null;$/;"	f	class:MutationManager
sfFileIn	kstar/CommucObj.java	/^	String sfFileIn = null;$/;"	f	class:CommucObj
sfFileOut	kstar/CommucObj.java	/^	String sfFileOut = null;$/;"	f	class:CommucObj
shadow	mpi/Intracomm.java	/^  private Comm shadow ;  \/\/ Used by non-native collectives.$/;"	f	class:Intracomm	file:
shellShellEnergy	kstar/TreeEdge.java	/^    private float shellShellEnergy;$/;"	f	class:TreeEdge	file:
shrinkCurrentMutation	kstar/KSParser.java	/^	String[] shrinkCurrentMutation(String currentMut[], int origStrandMut[][] ,int newStrandMut[][],boolean origStrandPresent[], boolean newStrandPresent[]){$/;"	m	class:KSParser
simpMin	kstar/RotamerSearch.java	/^	SimpleMinimizer simpMin;	\/\/ the simple energy minimizer (side-chains)$/;"	f	class:RotamerSearch
simpleMasterMutationSearch	kstar/RotamerSearch.java	/^	public int simpleMasterMutationSearch(int strandMut[][], int numMutable,$/;"	m	class:RotamerSearch
simplePairwiseMutationAllRotamerSearch	kstar/RotamerSearch.java	/^	public void simplePairwiseMutationAllRotamerSearch(int strandMut[][], int mutableSpots, $/;"	m	class:RotamerSearch
sin_alpha	kstar/TripeptideClosure.java	/^  double[] cos_alpha = new double[3], sin_alpha = new double[3], cos_theta = new double[3],$/;"	f	class:TripeptideClosure
sin_delta	kstar/TripeptideClosure.java	/^  double[] cos_delta = new double[4], sin_delta = new double[4];$/;"	f	class:TripeptideClosure
sin_eta	kstar/TripeptideClosure.java	/^  double[] cos_xi = new double[3], cos_eta = new double[3], sin_xi = new double[3], sin_eta = new double[3];$/;"	f	class:TripeptideClosure
sin_theta	kstar/TripeptideClosure.java	/^          sin_theta = new double[3];$/;"	f	class:TripeptideClosure
sin_xi	kstar/TripeptideClosure.java	/^  double[] cos_xi = new double[3], cos_eta = new double[3], sin_xi = new double[3], sin_eta = new double[3];$/;"	f	class:TripeptideClosure
size	BDAStar/ConformationMap.java	/^	public int size() {$/;"	m	class:ConformationMap
size	BDAStar/ProteinConformationMap.java	/^	public int size() {$/;"	m	class:ProteinConformationMap
size	BDAStarTest/TestConformationMap.java	/^	public int size() {$/;"	m	class:TestConformationMap
size	mpi/Datatype.java	/^  private native int size();$/;"	m	class:Datatype	file:
slaveDoRotamerSearch	kstar/RotamerSearch.java	/^	public void slaveDoRotamerSearch(int runNum, boolean searchComputeEVEnergy, boolean searchDoMinimization, int numInAS, $/;"	m	class:RotamerSearch
slaveMutationRotamerSearch	kstar/RotamerSearch.java	/^	private void slaveMutationRotamerSearch(int runNum, int depth, int maxDepth, int $/;"	m	class:RotamerSearch	file:
slaveNum	kstar/CommucObj.java	/^	int slaveNum = -1;$/;"	f	class:CommucObj
slaveRotamerSearchAStar	kstar/RotamerSearch.java	/^	private void slaveRotamerSearchAStar(int numMutable, int strandMut[][], boolean minimizeBB,$/;"	m	class:RotamerSearch	file:
softOverlapThresh	kstar/RotamerSearch.java	/^	float softOverlapThresh = -10000.0f; \/\/soft overlap threshold used for checking sterics (this should be used when the atom positions may be allowed to change after the steric check)$/;"	f	class:RotamerSearch
softStericThresh	kstar/CommucObj.java	/^	float softStericThresh = -10000.0f;$/;"	f	class:CommucObj
softStericThresh	kstar/KSParser.java	/^		float softStericThresh = -10000.0f; \/\/ soft steric overlap threshold$/;"	f	class:KSParser
softStericThresh	kstar/MutationManager.java	/^	float softStericThresh = -10000.0f;$/;"	f	class:MutationManager
softvdwMultiplier	kstar/KSParser.java	/^		double softvdwMultiplier = 1.0;$/;"	f	class:KSParser
solutionDihedrals	kstar/CloseLoop.java	/^	double[][][] solutionDihedrals; \/*[solution][residue][phi\/psi]*\/$/;"	f	class:CloseLoop
solutionList	BDAStar/BWMAStarNode.java	/^    private LinkedList<Conformation> solutionList;$/;"	f	class:BWMAStarNode	file:
solutionList	BDAStar/BWMStarNode.java	/^    private LinkedList<Conformation> solutionList;$/;"	f	class:BWMStarNode	file:
solutionList	BDAStar/CopyOfBWMAStarNode.java	/^    private LinkedList<Conformation> solutionList;$/;"	f	class:CopyOfBWMAStarNode	file:
solutionSpace	kstar/BranchTree.java	/^	private static BWMSolutionSpace solutionSpace;$/;"	f	class:BranchTree	file:
solutionSpace	kstar/TreeEdge.java	/^    private static BWMSolutionSpace solutionSpace;$/;"	f	class:TreeEdge	file:
solutions	BDAStar/BWMAStarNode.java	/^    private Map<String, Integer> solutions;$/;"	f	class:BWMAStarNode	file:
solutions	BDAStar/BWMStarNode.java	/^    private Map<String, Integer> solutions;$/;"	f	class:BWMStarNode	file:
solutions	BDAStar/CopyOfBWMAStarNode.java	/^    private Map<String, Integer> solutions;$/;"	f	class:CopyOfBWMAStarNode	file:
solutions	kstar/CloseLoop.java	/^    int solutions = 0;$/;"	f	class:CloseLoop
solvCutoff	kstar/Amber96ext.java	/^	final double solvCutoff = 9.0;$/;"	f	class:Amber96ext
solvExcludePairs	kstar/Amber96ext.java	/^	boolean solvExcludePairs[][];$/;"	f	class:Amber96ext
solvScale	kstar/Amber96ext.java	/^	double solvScale = 1.0; \/\/the scale factor for the solvation energies$/;"	f	class:Amber96ext
solvScale	kstar/CommucObj.java	/^	double solvScale = 1.0;$/;"	f	class:CommucObj
solvScale	kstar/KSParser.java	/^		double solvScale = 1.0;$/;"	f	class:KSParser
solvScale	kstar/MutationManager.java	/^	double solvScale = 1.0;$/;"	f	class:MutationManager
solvScale	kstar/RotamerSearch.java	/^	double solvScale = 1.0; \/\/the solvation energies scaling factor$/;"	f	class:RotamerSearch
solvationTerms	kstar/Amber96ext.java	/^	double solvationTerms[];$/;"	f	class:Amber96ext
solve_3pep_poly	kstar/TripeptideClosure.java	/^public int solve_3pep_poly ( float r_n1[], float r_a1[], float r_a3[], float r_c3[], float r_soln_n[][][],$/;"	m	class:TripeptideClosure
solve_3pep_poly	kstar/TripeptideClosure.java	/^public int solve_3pep_poly( double r_n1[], double r_a1[], double r_a3[], double r_c3[], double r_soln_n[][][],$/;"	m	class:TripeptideClosure
solve_sturm	kstar/SturmSolver.java	/^    public int solve_sturm(int order, double poly_coeffs[], double roots[])$/;"	m	class:SturmSolver
solventRadius	kstar/VolModule.java	/^	double solventRadius;		\/\/ Radius of solvent sphere (in Angstroms)$/;"	f	class:VolModule
sort	BranchDecomposition/BranchDecompositionH.java	/^	private double [] sort(double a[]){$/;"	m	class:BranchDecompositionH	file:
sortDACSpartitions	kstar/KSParser.java	/^	private void sortDACSpartitions(OneMutation mutArray[], int initDepth, int majorSplitPos[], int numPartitions[], $/;"	m	class:KSParser	file:
sortSS	kstar/PDBChemModel.java	/^        private void sortSS(ArrayList<Integer> starts, ArrayList<Integer> ends, ArrayList<Character> strands,$/;"	m	class:PDBChemModel	file:
sortScores	kstar/OneMutation.java	/^	private boolean sortScores = false; \/\/if true, then sort by score (default is false; should only be set using the method below)$/;"	f	class:OneMutation	file:
sortedEnds	kstar/PDBChemModel.java	/^    ArrayList<Integer> sortedStarts, sortedEnds;\/\/for use by sortSS: keeps track of secondary structures to sort$/;"	f	class:PDBChemModel
sortedStarts	kstar/PDBChemModel.java	/^    ArrayList<Integer> sortedStarts, sortedEnds;\/\/for use by sortSS: keeps track of secondary structures to sort$/;"	f	class:PDBChemModel
sortedStrands	kstar/PDBChemModel.java	/^    ArrayList<Character> sortedStrands;$/;"	f	class:PDBChemModel
source	kstar/ThreadElement.java	/^		public int source;$/;"	f	class:ThreadElement.ThreadStatus
source	kstar/ThreadMessage.java	/^	public int source;$/;"	f	class:ThreadMessage
source	mpi/Status.java	/^  public int source;$/;"	f	class:Status
space	BDAStar/ProteinConformationTrie.java	/^    private SolutionSpace space;$/;"	f	class:ProteinConformationTrie	file:
spacePoints	kstar/VolModule.java	/^	Vector spacePoints;			\/\/ Vector of surface space (double[3]) the x,y,z coordinate$/;"	f	class:VolModule
spaceRes	kstar/VolModule.java	/^	double spaceRes;				\/\/ Resolution of the space field (in Angstroms)$/;"	f	class:VolModule
split	mpi/Intracomm.java	/^  private native long split(int colour, int key);$/;"	m	class:Intracomm	file:
splitFlags	kstar/CommucObj.java	/^	boolean splitFlags[][] = null;$/;"	f	class:CommucObj
splitFlags	kstar/DEE.java	/^	boolean splitFlags[][][][][][] = null;$/;"	f	class:DEE
splitFlags	kstar/MSAStar.java	/^        boolean[][] splitFlags = null;\/\/Reduced-size array indicating which pairs of rotamers are pruned$/;"	f	class:MSAStar
splitFlags	kstar/MutationManager.java	/^	boolean splitFlags[][][][][][] = null;$/;"	f	class:MutationManager
splitFlags	kstar/RotamerSearch.java	/^	boolean splitFlags[][][][][][] = null;$/;"	f	class:RotamerSearch
src	mpi/Prequest.java	/^  private int src ;$/;"	f	class:Prequest	file:
srcdir	mpi/Makefile	/^srcdir = .$/;"	m
ssend	mpi/Comm.java	/^  private native void ssend(Object   buf,$/;"	m	class:Comm	file:
standardizeHNamesBB	kstar/PDBChemModel.java	/^        public static void standardizeHNamesBB(Residue newResidue){$/;"	m	class:PDBChemModel
startRes	kstar/PartialStructureSwitch.java	/^        int startRes;\/\/Which residue (given as an index in affectedRes) this sections starts at$/;"	f	class:PartialStructureSwitch.ChainSection
startThreads	kstar/MPItoThread.java	/^	public static void startThreads(KSParser mainKSP,Thread mainThread){$/;"	m	class:MPItoThread
startingPertFile	kstar/PerturbationSelector.java	/^    String startingPertFile;$/;"	f	class:PerturbationSelector
state	kstar/RotInfo.java	/^	public T state;$/;"	f	class:RotInfo
stericE	kstar/CommucObj.java	/^	double stericE = Math.pow(10, 38);$/;"	f	class:CommucObj
stericE	kstar/DEE.java	/^	float stericE = bigE;$/;"	f	class:DEE
stericE	kstar/MutationManager.java	/^	double stericE = Math.pow(10,38);$/;"	f	class:MutationManager
stericE	kstar/RotamerSearch.java	/^	final float stericE = (float)Math.pow(10,38);	\/\/ the energy stored for an unallowed steric$/;"	f	class:RotamerSearch
stericF	kstar/MSAStar.java	/^	StericCheck stericF = null;$/;"	f	class:MSAStar
stericThresh	kstar/CommucObj.java	/^	float stericThresh = -10000.0f;$/;"	f	class:CommucObj
stericThresh	kstar/KSParser.java	/^		float stericThresh = -10000.0f; \/\/ allowed overlap between the vdW radii of two atoms, steric clash if larger overlap$/;"	f	class:KSParser
stericThresh	kstar/MutationManager.java	/^	float stericThresh = -10000.0f;$/;"	f	class:MutationManager
storeBestStateLambda	kstar/TreeEdge.java	/^    private void storeBestStateLambda(int curState[], Object arrayM[], float curEnergy) {$/;"	m	class:TreeEdge	file:
storeCoord	kstar/BBMinimizer.java	/^	private float [] storeCoord(int resNum){$/;"	m	class:BBMinimizer	file:
storeCoord	kstar/BackrubMinimizer.java	/^	private float [] storeCoord(int resNum){$/;"	m	class:BackrubMinimizer	file:
storeCoord	kstar/SimpleMinimizer.java	/^	private void storeCoord(int index, int mAtNum){$/;"	m	class:SimpleMinimizer	file:
storeDihedrals	kstar/CloseLoop.java	/^	private double[][][] storeDihedrals(int numSolutions, float r_soln_n[][][], float r_soln_a[][][], float r_soln_c[][][])$/;"	m	class:CloseLoop	file:
storeResBB	kstar/Perturbation.java	/^    public HashMap<String, float[]> storeResBB( Residue res ){$/;"	m	class:Perturbation
storeResBB	kstar/Perturbation.java	/^    public HashMap<String, float[]> storeResBB(Residue res, Molecule molec){$/;"	m	class:Perturbation
storeWTCoord	kstar/StrandRCs.java	/^        public void storeWTCoord(Molecule m, int resNum){$/;"	m	class:StrandRCs
storeWTRotamer	kstar/StrandRCs.java	/^        public void storeWTRotamer(Molecule m, int resNum){$/;"	m	class:StrandRCs
storeWTRotamers	kstar/StrandRCs.java	/^        public void storeWTRotamers(Molecule m){$/;"	m	class:StrandRCs
strCumulativeDihedStep	kstar/SimpleMinimizer.java	/^	double strCumulativeDihedStep[][] = null;$/;"	f	class:SimpleMinimizer
strCurCOM	kstar/SimpleMinimizer.java	/^	double strCurCOM[][] = null;$/;"	f	class:SimpleMinimizer
strDihedDiff	kstar/SimpleMinimizer.java	/^	double strDihedDiff[][] = null;$/;"	f	class:SimpleMinimizer
strDihedLocalNum	kstar/SimpleMinimizer.java	/^	int strDihedLocalNum[][] = new int[0][0];$/;"	f	class:SimpleMinimizer
strDihedNumTerms	kstar/SimpleMinimizer.java	/^	int strDihedNumTerms[] = new int[0];$/;"	f	class:SimpleMinimizer
strDihedPN	kstar/SimpleMinimizer.java	/^	int strDihedPN[][] = new int[0][0];$/;"	f	class:SimpleMinimizer
strDihedToResNum	kstar/SimpleMinimizer.java	/^	int strDihedToResNum[][] = null;$/;"	f	class:SimpleMinimizer
strDihedWeight	kstar/SimpleMinimizer.java	/^	double strDihedWeight[][] = new double[0][0];$/;"	f	class:SimpleMinimizer
strDihedralAtNums	kstar/SimpleMinimizer.java	/^	int strDihedralAtNums[][][] = null;$/;"	f	class:SimpleMinimizer
strDihedralDistal	kstar/SimpleMinimizer.java	/^	int strDihedralDistal[][][] = null;$/;"	f	class:SimpleMinimizer
strNumAtomsDistal	kstar/SimpleMinimizer.java	/^	int strNumAtomsDistal[][] = null;$/;"	f	class:SimpleMinimizer
strStartCOM	kstar/SimpleMinimizer.java	/^	double strStartCOM[][] = null;$/;"	f	class:SimpleMinimizer
strand	BDAStar/ProteinPosition.java	/^	private int strand;$/;"	f	class:ProteinPosition	file:
strand	kstar/Molecule.java	/^	Strand strand[] = null;			\/\/ Array of strands in this molecule$/;"	f	class:Molecule
strandDefault	kstar/CommucObj.java	/^	String[][] strandDefault = null;$/;"	f	class:CommucObj
strandDefault	kstar/KSParser.java	/^		String[][] strandDefault;$/;"	f	class:KSParser.MolParameters
strandDefault	kstar/MutationManager.java	/^	String[][] strandDefault = null;$/;"	f	class:MutationManager
strandDesignIndices	BDAStar/BWMSolutionSpace.java	/^    private int[][] strandDesignIndices;$/;"	f	class:BWMSolutionSpace	file:
strandLimits	kstar/CommucObj.java	/^	String[][] strandLimits = null;$/;"	f	class:CommucObj
strandLimits	kstar/KSParser.java	/^		String[][] strandLimits;$/;"	f	class:KSParser.MolParameters
strandLimits	kstar/MutationManager.java	/^	String[][] strandLimits = null;$/;"	f	class:MutationManager
strandMut	kstar/BBMinimizer.java	/^	int strandMut[][] = null;$/;"	f	class:BBMinimizer
strandMut	kstar/BackrubMinimizer.java	/^	int strandMut[][] = null;$/;"	f	class:BackrubMinimizer
strandMut	kstar/CommucObj.java	/^	int[][] strandMut = null;$/;"	f	class:CommucObj
strandMut	kstar/DEE.java	/^	int strandMut[][] = null;$/;"	f	class:DEE
strandMut	kstar/KSParser.java	/^		int[][] strandMut;$/;"	f	class:KSParser.MolParameters
strandMut	kstar/MutationManager.java	/^	int[][] strandMut = null;$/;"	f	class:MutationManager
strandMut	kstar/StericCheck.java	/^	int strandMut[][] = null;$/;"	f	class:StericCheck
strandNumber	kstar/Atom.java	/^	int	strandNumber=-1;					\/\/ the number of the strand containing atom$/;"	f	class:Atom
strandNumber	kstar/Residue.java	/^	int	strandNumber=-1;	\/\/ The number of the strand containing this residue$/;"	f	class:Residue
strandNumber	kstar/StrandRotamers.java	/^	protected int strandNumber = -1; 		\/\/the strand number$/;"	f	class:StrandRotamers
strandOffsetIndex	kstar/PrunedRotamers.java	/^	private int[] strandOffsetIndex;$/;"	f	class:PrunedRotamers	file:
strandPresent	kstar/CommucObj.java	/^	boolean[] strandPresent = null;$/;"	f	class:CommucObj
strandPresent	kstar/KSParser.java	/^		boolean[] strandPresent;$/;"	f	class:KSParser.MolParameters
strandPresent	kstar/MutationManager.java	/^	boolean[] strandPresent = null;$/;"	f	class:MutationManager
strandResidueNumber	kstar/Atom.java	/^	int	strandResidueNumber=-1;		\/\/ the strand relative number of the residue continaing atom$/;"	f	class:Atom
strandResidueNumber	kstar/Residue.java	/^	int	strandResidueNumber=-1;		\/\/ The strand relative residue number$/;"	f	class:Residue
strandRot	kstar/DEE.java	/^	StrandRotamers strandRot[] = null;$/;"	f	class:DEE
strandRot	kstar/RotamerSearch.java	/^	StrandRotamers[] strandRot = null;$/;"	f	class:RotamerSearch
strandRot	kstar/SimpleMinimizer.java	/^	StrandRotamers[] strandRot = null;$/;"	f	class:SimpleMinimizer
strandRot	kstar/StericCheck.java	/^	StrandRotamers strandRot[] = null;$/;"	f	class:StericCheck
strandsPresent	kstar/CommucObj.java	/^	int strandsPresent = 0;$/;"	f	class:CommucObj
strandsPresent	kstar/KSParser.java	/^		int strandsPresent;$/;"	f	class:KSParser.MolParameters
strandsPresent	kstar/MutationManager.java	/^	int strandsPresent = 0;$/;"	f	class:MutationManager
stringSet	kstar/TreeEdge.java	/^    Set<String> stringSet = new HashSet<String>();$/;"	f	class:TreeEdge
structInfo	kstar/PartialStructureSwitch.java	/^    String structInfo[];\/\/Information on structures$/;"	f	class:PartialStructureSwitch
sturm	kstar/TripeptideClosure.java	/^  SturmSolver sturm;$/;"	f	class:TripeptideClosure
sub	mpi/Cartcomm.java	/^  private native long sub(boolean [] remain_dims);$/;"	m	class:Cartcomm	file:
subDepth	kstar/CommucObj.java	/^	int subDepth = -1;$/;"	f	class:CommucObj
subDepth	kstar/MutationManager.java	/^	int subDepth = -1;$/;"	f	class:MutationManager
subroot	BDAStar/ProteinConformationTrie.java	/^    private BDAStarNode subroot;$/;"	f	class:ProteinConformationTrie	file:
subtract	kstar/RotMatrix.java	/^        double[] subtract(double[] vec1,double[] vec2){$/;"	m	class:RotMatrix
subtract	kstar/RotMatrix.java	/^        float[] subtract(float[] vec1,float[] vec2){$/;"	m	class:RotMatrix
successors	kstar/Perturbation.java	/^    int[] successors;\/\/Perturbations that need to be applied after this one because they are affected by this one's state$/;"	f	class:Perturbation
suffix	BDAStar/BDAStarNode.java	/^    private Conformation suffix;$/;"	f	class:BDAStarNode	file:
sumMinMinPVE	kstar/MSAStar.java	/^	private float sumMinMinPVE(int jLevel, int firstIndex, int conf[], int topLevel){$/;"	m	class:MSAStar	file:
switchedTemplateE	kstar/RotamerSearch.java	/^        float switchedTemplateE[] = null;\/\/The changes in template energies caused by full structure switch perturbations$/;"	f	class:RotamerSearch
sysFiPsiStep	kstar/BBMinimizer.java	/^	private float sysFiPsiStep = 0.8f; \/\/initial step size for phi\/psi changes; used for full conformation energy minimization$/;"	f	class:BBMinimizer	file:
sysMaxDihedRot	kstar/BBMinimizer.java	/^	final float sysMaxDihedRot = 3.0f; \/\/the maximum rotation from the initial phi\/sp values$/;"	f	class:BBMinimizer
sysMaxTrans	kstar/BBMinimizer.java	/^	float sysMaxTrans = 1.5f;\/\/2.0f; \/\/the maximum displacement (in angstrom) from the initial CA$/;"	f	class:BBMinimizer
sysRH	kstar/SimpleMinimizer.java	/^	StrandRotamers sysRH = null;$/;"	f	class:SimpleMinimizer
sysStrNum	kstar/TreeEdge.java	/^    private int sysStrNum = -1; \/\/the strand number in the molecule of the system strand$/;"	f	class:TreeEdge	file:
t	BranchDecomposition/BreadthFirstSearch.java	/^	private int t = -1; \/\/the index of the end node$/;"	f	class:BreadthFirstSearch	file:
t_ang0	kstar/TripeptideClosure.java	/^  double[] len0 = new double[6], bondAngle0 = new double[7], t_ang0 = new double[2];$/;"	f	class:TripeptideClosure
tables	kstar/RamachandranChecker.java	/^    float[][][] tables;\/\/tables[a][b][c] is density at phi=b+\/-1, psi=c+\/-1$/;"	f	class:RamachandranChecker
tag	kstar/ThreadElement.java	/^		public int tag;$/;"	f	class:ThreadElement.ThreadStatus
tag	kstar/ThreadMessage.java	/^	public int tag;$/;"	f	class:ThreadMessage
tag	mpi/Request.java	/^  protected int tag;$/;"	f	class:Request
tag	mpi/Status.java	/^  public int tag;$/;"	f	class:Status
tauCutoff	kstar/BackrubMinimizer.java	/^	final float tauCutoff = 5.5f; \/\/the cutoff value for tau deviation from the ideal values (if the initial tau values are within the ideal range)$/;"	f	class:BackrubMinimizer
tc	kstar/PartialStructureSwitch.java	/^        TripeptideClosure tc = null;$/;"	f	class:PartialStructureSwitch.ChainSection
tcRes	kstar/PartialStructureSwitch.java	/^        int tcRes[] = null;$/;"	f	class:PartialStructureSwitch.ChainSection
te	kstar/KSthread.java	/^	ThreadElement te;$/;"	f	class:KSthread
tempCoords	kstar/SimpleMinimizer.java	/^	float tempCoords[] = null;$/;"	f	class:SimpleMinimizer
templateA96ff	kstar/RotamerSearch.java	/^	Amber96ext templateA96ff; \/\/KER: forcefield that keeps the energy computation for the template $/;"	f	class:RotamerSearch
templateAlwaysOn	kstar/CommucObj.java	/^	public boolean templateAlwaysOn = false;$/;"	f	class:CommucObj
templateAlwaysOn	kstar/MutationManager.java	/^	private boolean templateAlwaysOn;$/;"	f	class:MutationManager	file:
templateCoord	kstar/FullStructureSwitch.java	/^    float[][][] templateCoord;$/;"	f	class:FullStructureSwitch
templateHeap	kstar/TreeEdge.java	/^        private PriorityQueue<T> templateHeap;$/;"	f	class:TreeEdge.LazyHeap	file:
templateInt	kstar/DEE.java	/^	float templateInt = 0.0f;$/;"	f	class:DEE
templateOffA96ff	kstar/RotamerSearch.java	/^    Amber96ext templateOffA96ff; \/\/KER: templateOff is to compute the energy since we don't want to include backbone atoms in template$/;"	f	class:RotamerSearch
test_two_cone_existence_soln	kstar/TripeptideClosure.java	/^public void test_two_cone_existence_soln(double tt, double kx, double et, double ap)$/;"	m	class:TripeptideClosure
testall	mpi/Request.java	/^  private static native Status[] testall(Request [] array_of_request);$/;"	m	class:Request	file:
testsome	mpi/Request.java	/^  private static native Status[] testsome(Request [] array_of_request);$/;"	m	class:Request	file:
thequeue	kstar/ExpansionQueue.java	/^	 private PriorityBlockingQueue<QueueNode> thequeue;$/;"	f	class:ExpansionQueue	file:
theta	kstar/TripeptideClosure.java	/^          alpha = new double[3], theta = new double[3];$/;"	f	class:TripeptideClosure
theta2	kstar/BackrubMinimizer.java	/^	float theta2[][] = null; \/\/the rotation angles for the first small rotation$/;"	f	class:BackrubMinimizer
theta3	kstar/BackrubMinimizer.java	/^	float theta3[][] = null; \/\/the rotation angles for the second small rotation$/;"	f	class:BackrubMinimizer
thetaSmallScale	kstar/Backrubs.java	/^	final float thetaSmallScale = 0.7f; \/\/the scaling factor for the rotation angles for the small rotations$/;"	f	class:Backrubs
threadEle	kstar/MPItoThread.java	/^	static Hashtable<Thread,ThreadElement> threadEle = null;$/;"	f	class:MPItoThread
threadEleArray	kstar/MPItoThread.java	/^	static ThreadElement[] threadEleArray = null;$/;"	f	class:MPItoThread
three2one	kstar/RotamerLibrary.java	/^	public static HashMap<String,String> three2one = null;$/;"	f	class:RotamerLibrary
toConfString	kstar/TreeEdge.java	/^        public String toConfString()$/;"	m	class:TreeEdge.Conf
toObject	kstar/PrunedRotamers.java	/^	public static Boolean[][][] toObject(boolean[][][] prunedRot)$/;"	m	class:PrunedRotamers
toPrimitive	kstar/PrunedRotamers.java	/^	public boolean[][][] toPrimitive(Object[][][] prunedRot)$/;"	m	class:PrunedRotamers
toString	BDAStar/BDAStarNode.java	/^    public String toString()$/;"	m	class:BDAStarNode
toString	BDAStar/ProteinChoice.java	/^    public String toString()$/;"	m	class:ProteinChoice
toString	BDAStar/ProteinConformation.java	/^    public String toString()$/;"	m	class:ProteinConformation
toString	BDAStarTest/TestConformation.java	/^    public String toString()$/;"	m	class:TestConformation
toString	BDAStarTest/TestProteinConformation.java	/^    public String toString()$/;"	m	class:TestProteinConformation
toString	kstar/InteractionGraph.java	/^	public String toString()$/;"	m	class:InteractionGraph
toString	kstar/Molecule.java	/^	public String toString(){$/;"	m	class:Molecule
toString	kstar/PrunedRotamers.java	/^	public String toString(){$/;"	m	class:Index3
toString	kstar/RotTypeMap.java	/^	public String toString()$/;"	m	class:RotTypeMap
toString	kstar/TreeEdge.java	/^        public String toString()$/;"	m	class:TreeEdge.Conf
toString	kstar/TreeEdge.java	/^        public String toString()$/;"	m	class:TreeEdge.RightConf
toString	kstar/TreeNode.java	/^	public String toString()$/;"	m	class:TreeNode
tooClose	kstar/VolModule.java	/^	private boolean tooClose(double newsurfpt[], int neighborAt[], int numAtomsToCheck,$/;"	m	class:VolModule	file:
topConfs	kstar/RotamerSearch.java	/^	PriorityQueue<ConfPair> topConfs = null; \/\/Stores the top conformations of the run$/;"	f	class:RotamerSearch
topL	kstar/MSAStar.java	/^	int topL = 0;$/;"	f	class:MSAStar
top_srcdir	mpi/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
torsion	kstar/Atom.java	/^	public double torsion(Atom atom1, Atom atom2, Atom atom3){$/;"	m	class:Atom
torsionInRadians	kstar/Atom.java	/^	public double torsionInRadians(Atom atom1, Atom atom2, Atom atom3){$/;"	m	class:Atom
totNumRCs	kstar/StrandRCs.java	/^       int totNumRCs;\/\/The total number of RCs for the strand$/;"	f	class:StrandRCs
totalFlexRes	kstar/BBMinimizer.java	/^	int totalFlexRes = 0;$/;"	f	class:BBMinimizer
totalFlexRes	kstar/BackrubMinimizer.java	/^	int totalFlexRes = 0;$/;"	f	class:BackrubMinimizer
totalFlexRes	kstar/SimpleMinimizer.java	/^	int totalFlexRes = 0;$/;"	f	class:SimpleMinimizer
totalNonTransRotStrands	kstar/BBMinimizer.java	/^	int totalNonTransRotStrands = 0;$/;"	f	class:BBMinimizer
totalNonTransRotStrands	kstar/BackrubMinimizer.java	/^	int totalNonTransRotStrands = 0;$/;"	f	class:BackrubMinimizer
totalNumDihedrals	kstar/StrandRotamers.java	/^	private int totalNumDihedrals = 0;			\/\/number of dihedrals in this strand$/;"	f	class:StrandRotamers	file:
totalNumRotamers	kstar/RotamerLibrary.java	/^	private int totalNumRotamers; \/\/AAs with 0 rotamers are counted as 1 rotamer	$/;"	f	class:RotamerLibrary	file:
totalPossible	BDAStar/BWMAStarNode.java	/^    private int totalPossible;$/;"	f	class:BWMAStarNode	file:
totalPossible	BDAStar/BWMStarNode.java	/^    private int totalPossible;$/;"	f	class:BWMStarNode	file:
totalPossibleCombinations	BDAStar/BWMAStarNode.java	/^    public int totalPossibleCombinations()$/;"	m	class:BWMAStarNode
totalRightCombinations	BDAStar/BWMAStarNode.java	/^    private int totalRightCombinations()$/;"	m	class:BWMAStarNode	file:
totalTransRotStrands	kstar/BBMinimizer.java	/^	int totalTransRotStrands = 0;$/;"	f	class:BBMinimizer
totalTransRotStrands	kstar/BackrubMinimizer.java	/^	int totalTransRotStrands = 0;$/;"	f	class:BackrubMinimizer
totalTransRotStrands	kstar/SimpleMinimizer.java	/^	int totalTransRotStrands = 0;$/;"	f	class:SimpleMinimizer
tracePath	BranchDecomposition/BreadthFirstSearch.java	/^	private int [] tracePath(int pOft){$/;"	m	class:BreadthFirstSearch	file:
transform	kstar/PartialStructureSwitch.java	/^    private float[] transform( float[] x, float[][] mtx, float[] anchorStart, float[] anchorTarget ){$/;"	m	class:PartialStructureSwitch	file:
transformEntry	kstar/PartialStructureSwitch.java	/^    private float[] transformEntry( HashMap<String, float[]> hm, String s, float[][] mtx, float[] anchorStart, float[] anchorTarget ){$/;"	m	class:PartialStructureSwitch	file:
transformGraph	BranchDecomposition/MinVertexCut.java	/^	private BranchTree transformGraph(BranchTree H, int vMap[][], int splitV[]){$/;"	m	class:MinVertexCut	file:
transformRootedTree	kstar/BranchTree.java	/^	private void transformRootedTree(TreeNode tn[], TreeEdge te[], int numUnprunedRot[], int molResidueMap[], int invResidueMap[], int sysStrandNum){$/;"	m	class:BranchTree	file:
translate	kstar/RotMatrix.java	/^	public void translate(float tx, float ty, float tz, float theCoords[],$/;"	m	class:RotMatrix
translateAtomList	kstar/Molecule.java	/^        public void translateAtomList(int atomList[], float[] tr_vec, boolean updateAtoms, boolean backwards){$/;"	m	class:Molecule
translateBackBone	kstar/CloseLoop.java	/^	public void translateBackBone(int s, float r_soln_n[][][], float r_soln_a[][][], float r_soln_c[][][])$/;"	m	class:CloseLoop
translateMolecule	kstar/Molecule.java	/^	public void translateMolecule(float dx, float dy, float dz){$/;"	m	class:Molecule
translateMolecule	kstar/Molecule.java	/^	public void translateMolecule(float dx, float dy, float dz, boolean$/;"	m	class:Molecule
translateResidue	kstar/Molecule.java	/^	public void translateResidue(int resNum, float dx, float dy,$/;"	m	class:Molecule
translateResidue	kstar/Molecule.java	/^	public void translateResidue(int strNum, int resNum, float dx,$/;"	m	class:Molecule
translateStrand	kstar/Molecule.java	/^	public void translateStrand(int strNum, float dx, float dy,$/;"	m	class:Molecule
traverseTree	kstar/BranchTree.java	/^	public void traverseTree(StrandRotamers sysLR, StrandRotamers ligRot, Molecule m, RotamerLibrary rl,$/;"	m	class:BranchTree
traverseTreeHelper	kstar/BranchTree.java	/^	private void traverseTreeHelper(TreeNode n, StrandRotamers sysLR, StrandRotamers ligRot, Molecule m, RotamerLibrary rl,$/;"	m	class:BranchTree	file:
tripleFlags	kstar/DEE.java	/^        boolean tripleFlags[][][][][][][][][] = null;$/;"	f	class:DEE
tripleFlags	kstar/MSAStar.java	/^        boolean[][][] tripleFlags = null;\/\/Which triples are pruned$/;"	f	class:MSAStar
tripleFlags	kstar/RotamerSearch.java	/^        boolean tripleFlags[][][][][][][][][] = null;\/\/Pruned triples$/;"	f	class:RotamerSearch
twoAnchors	kstar/PartialStructureSwitch.java	/^        boolean twoAnchors;$/;"	f	class:PartialStructureSwitch.ChainSection
two_pi	kstar/TripeptideClosure.java	/^  double two_pi = 2*pi;$/;"	f	class:TripeptideClosure
type	kstar/Atom.java	/^	int type=-1;							\/\/ the force field type number$/;"	f	class:Atom
type	kstar/Perturbation.java	/^    String type;\/\/e.g. "Shear"$/;"	f	class:Perturbation
type	mpi/Request.java	/^  protected Datatype type;$/;"	f	class:Request
typeDEE	kstar/CommucObj.java	/^	int typeDEE = -1;$/;"	f	class:CommucObj
typeDEE	kstar/MutationManager.java	/^	int typeDEE = -1;$/;"	f	class:MutationManager
typeDep	kstar/CommucObj.java	/^boolean typeDep = false;	$/;"	f	class:CommucObj
typeDep	kstar/MutationManager.java	/^	boolean typeDep = false;$/;"	f	class:MutationManager
typeDependent	kstar/DEE.java	/^	boolean typeDependent = false;$/;"	f	class:DEE
typeSave	mpi/Request.java	/^  protected long commSave, typeSave ;$/;"	f	class:Request
typeTag	mpi/Request.java	/^  protected int typeTag = TYPE_NORMAL   ;$/;"	f	class:Request
uB	mpi/Datatype.java	/^  private native int uB();$/;"	m	class:Datatype	file:
ub	mpi/Datatype.java	/^  protected int lb, ub ;$/;"	f	class:Datatype
ubSet	mpi/Datatype.java	/^  protected boolean ubSet, lbSet ;$/;"	f	class:Datatype
uf	mpi/Op.java	/^  private User_function uf = null ;$/;"	f	class:Op	file:
unMinE	kstar/CommucObj.java	/^		float unMinE = 0.0f;$/;"	f	class:CommucObj.ConfInfo
unRotateAtomList	kstar/Molecule.java	/^        public void unRotateAtomList(int atomList[], float[][] rot_mtx, float cx, float cy, float cz, boolean updateAtoms){$/;"	m	class:Molecule
unapplyRotMatrix	kstar/RotMatrix.java	/^        float[] unapplyRotMatrix(float[][] rm, float[] vec){\/\/Reverse rotation specified by matrix rm on vector vec, i.e. compute inv(rm)*vec=transpose(rm)*vec$/;"	m	class:RotMatrix
undo	kstar/FullStructureSwitch.java	/^    public void undo(){$/;"	m	class:FullStructureSwitch
undo	kstar/Perturbation.java	/^    public void undo(){\/\/Undo the perturbation as it was most recently applied$/;"	m	class:Perturbation
unifyEdges	BranchDecomposition/BranchDecompositionH.java	/^	private void unifyEdges(BranchTree h, Object vNa[], BranchNode x){$/;"	m	class:BranchDecompositionH	file:
union	mpi/Group.java	/^  private static native long union(Group group1, Group group2);$/;"	m	class:Group	file:
unpack	mpi/Comm.java	/^  private native int unpack(byte[]   inbuf,$/;"	m	class:Comm	file:
updateAtomCoord	kstar/Molecule.java	/^	public void updateAtomCoord(){$/;"	m	class:Molecule
updateBestE	kstar/RotamerSearch.java	/^	public synchronized void updateBestE(float ue){$/;"	m	class:RotamerSearch
updateConformationList	BDAStar/BWMAStarNode.java	/^    private Conformation updateConformationList (Conformation leftConformation, BWMAStarNode leftPartialNode) $/;"	m	class:BWMAStarNode	file:
updateConformationList	BDAStar/CopyOfBWMAStarNode.java	/^    private Conformation updateConformationList (Conformation leftConformation, int offset) $/;"	m	class:CopyOfBWMAStarNode	file:
updateCoord	kstar/Molecule.java	/^	private void updateCoord(Atom updateAtom){$/;"	m	class:Molecule	file:
updateCoordinates	kstar/Molecule.java	/^	public void updateCoordinates(){$/;"	m	class:Molecule
updateCoordinates	kstar/Molecule.java	/^	public void updateCoordinates(Atom updateAtom){$/;"	m	class:Molecule
updateCoordinates	kstar/Molecule.java	/^	public void updateCoordinates(int atomNumber){$/;"	m	class:Molecule
updateCumulative	kstar/SimpleMinimizer.java	/^	protected void updateCumulative(double cumulativeDihedStep[], double newDihedDiff[], int index,$/;"	m	class:SimpleMinimizer
updateCumulativeRot	kstar/BBMinimizer.java	/^	private float updateCumulativeRot(int resNum, float rotStep, double center[], boolean checkOnly, float axisToRot[], boolean centerIsCA){$/;"	m	class:BBMinimizer	file:
updateCumulativeRot	kstar/BackrubMinimizer.java	/^	private float updateCumulativeRot(int[] resNums, float rotStep, double center[], boolean checkOnly, float axisToRot[]){$/;"	m	class:BackrubMinimizer	file:
updateCumulativeTrans	kstar/BBMinimizer.java	/^	private float updateCumulativeTrans(int resNum, int coord, float transStep, boolean onlyCheck){$/;"	m	class:BBMinimizer	file:
updateCumulativeTrans	kstar/BackrubMinimizer.java	/^	private float updateCumulativeTrans(int strNum, int coord, float transStep, boolean onlyCheck, double[] initCOM){$/;"	m	class:BackrubMinimizer	file:
updateCurCA	kstar/BBMinimizer.java	/^	private void updateCurCA(){$/;"	m	class:BBMinimizer	file:
updateLeftEnergy	kstar/TreeEdge.java	/^        public void updateLeftEnergy(double newLeftEnergy)$/;"	m	class:TreeEdge.Conf
updateMoleculeAtomNumbers	kstar/Molecule.java	/^	public void updateMoleculeAtomNumbers() {$/;"	m	class:Molecule
updateNumAtoms	kstar/Molecule.java	/^	public void updateNumAtoms() {$/;"	m	class:Molecule
updateResidueNumbers	kstar/Molecule.java	/^	public void updateResidueNumbers() {$/;"	m	class:Molecule
updateRightConformations	BDAStar/BWMStarNode.java	/^    private void updateRightConformations (Conformation MSet, Conformation lambda, Conformation lastUsed) {$/;"	m	class:BWMStarNode	file:
updateTag	kstar/KSParser.java	/^		final static int updateTag = 2; \/\/used in DACS for updating the best energy found for the different partitions$/;"	f	class:KSParser
useBRsample	kstar/BackrubMinimizer.java	/^	boolean useBRsample[][] = null; \/\/determines if the given backrub for the given residue should be considered$/;"	f	class:BackrubMinimizer
useEntropy	kstar/EnvironmentVars.java	/^	public static boolean useEntropy = false;$/;"	f	class:EnvironmentVars
useEref	kstar/CommucObj.java	/^	boolean useEref = false;$/;"	f	class:CommucObj
useEref	kstar/MutationManager.java	/^	boolean useEref = false;$/;"	f	class:MutationManager
useFlags	kstar/DEE.java	/^	boolean useFlags = false;$/;"	f	class:DEE
useFlagsAStar	kstar/CommucObj.java	/^        boolean useFlagsAStar;$/;"	f	class:CommucObj
useFlagsAStar	kstar/MutationManager.java	/^        boolean useFlagsAStar;$/;"	f	class:MutationManager
useFlagsAStar	kstar/RotamerSearch.java	/^        boolean useFlagsAStar = false;          \/\/Should split and potentially triple flags be used in A*?$/;"	f	class:RotamerSearch
useMaxKSconfs	kstar/CommucObj.java	/^	public boolean useMaxKSconfs;$/;"	f	class:CommucObj
useMaxKSconfs	kstar/MutationManager.java	/^	private boolean useMaxKSconfs;$/;"	f	class:MutationManager	file:
useSF	kstar/CommucObj.java	/^	boolean useSF = false;$/;"	f	class:CommucObj
useSF	kstar/MutationManager.java	/^	boolean useSF = false;$/;"	f	class:MutationManager
useTC	kstar/PartialStructureSwitch.java	/^    boolean useTC = false;\/\/Use a tripeptide closure for two-anchor sections$/;"	f	class:PartialStructureSwitch
useTriples	kstar/CommucObj.java	/^        boolean useTriples;$/;"	f	class:CommucObj
useTriples	kstar/DEE.java	/^        boolean useTriples = false;$/;"	f	class:DEE
useTriples	kstar/MutationManager.java	/^        boolean useTriples;$/;"	f	class:MutationManager
useTriples	kstar/RotamerSearch.java	/^        boolean useTriples = false;             \/\/Indicates whether triples should be used$/;"	f	class:RotamerSearch
v	kstar/InteractionGraph.java	/^	private int v[] = null; \/\/the vertex set (molecule-relative residue numbering, not pdb numbering)$/;"	f	class:InteractionGraph	file:
vNames	BranchDecomposition/GraphVertices.java	/^	private String vNames[] = null; \/\/the names of the vertices$/;"	f	class:GraphVertices	file:
validConf	kstar/Residue.java	/^        boolean validConf = true;\/\/This is true unless there's an uncloseable proline ring or some other conformational problem$/;"	f	class:Residue
values	BDAStar/ConformationMap.java	/^	public Collection<ProteinConformationTrie> values() {$/;"	m	class:ConformationMap
values	BDAStar/ProteinConformationMap.java	/^	ProteinConformationTrie[][] values;$/;"	f	class:ProteinConformationMap
values	BDAStar/ProteinConformationMap.java	/^	public Collection<ProteinConformationTrie> values() {$/;"	m	class:ProteinConformationMap
values	BDAStarTest/TestConformationMap.java	/^	ProteinConformationTrie[] values;$/;"	f	class:TestConformationMap
values	BDAStarTest/TestConformationMap.java	/^	public Collection<ProteinConformationTrie> values() {$/;"	m	class:TestConformationMap
values	kstar/ParamSet.java	/^	private String values[] = null; \/\/the parameter values$/;"	f	class:ParamSet	file:
vdWri	kstar/EEF1.java	/^	float vdWri[] = new float[numAtTypesEEF1];	$/;"	f	class:EEF1
vdwAtomType1	kstar/Amber96ext.java	/^	int[]		vdwAtomType1 = null;$/;"	f	class:Amber96ext
vdwE	kstar/Amber96ext.java	/^	float[] vdwE = null;$/;"	f	class:Amber96ext
vdwMult	kstar/CommucObj.java	/^	double vdwMult = 1.0;$/;"	f	class:CommucObj
vdwMult	kstar/MutationManager.java	/^	double vdwMult = 1.0;$/;"	f	class:MutationManager
vdwMultiplier	kstar/Amber96ext.java	/^	float vdwMultiplier = 1.0f;$/;"	f	class:Amber96ext
vdwMultiplier	kstar/RotamerSearch.java	/^	double vdwMultiplier = 1.0f;$/;"	f	class:RotamerSearch
vdwR	kstar/Amber96ext.java	/^	float[] vdwR = null;$/;"	f	class:Amber96ext
vol	kstar/OneMutation.java	/^	float vol = 0.0f;$/;"	f	class:OneMutation
volFilename	kstar/RotamerLibrary.java	/^	private String volFilename;$/;"	f	class:RotamerLibrary	file:
waitall	mpi/Request.java	/^  private static native Status[] waitall(Request [] array_of_request);$/;"	m	class:Request	file:
waitsome	mpi/Request.java	/^  private static native Status[] waitsome(Request [] array_of_request);$/;"	m	class:Request	file:
white	BranchDecomposition/BreadthFirstSearch.java	/^	private final String white = "w";$/;"	f	class:BreadthFirstSearch	file:
workToDo	kstar/CommucObj.java	/^	boolean workToDo = true;$/;"	f	class:CommucObj
writeExtraInfo	kstar/FullStructureSwitch.java	/^    public void writeExtraInfo( BufferedWriter bw ){$/;"	m	class:FullStructureSwitch
writeExtraInfo	kstar/PartialStructureSwitch.java	/^    public void writeExtraInfo( BufferedWriter bw ){$/;"	m	class:PartialStructureSwitch
writeExtraInfo	kstar/Perturbation.java	/^    public void writeExtraInfo(BufferedWriter bw){$/;"	m	class:Perturbation
writeObject	kstar/PrunedRotamers.java	/^	public void writeObject(Object outObj, String outFile)$/;"	m	class:PrunedRotamers
writeObjects	kstar/PrunedRotamers.java	/^	public void writeObjects(String fileHeader)$/;"	m	class:PrunedRotamers
writePertFile	kstar/PertFileHandler.java	/^    public static void writePertFile(String fileName, Molecule m, PrunedRotamers<Boolean> eliminatedRCAtPos,$/;"	m	class:PertFileHandler
xAxisRotate	kstar/RotMatrix.java	/^	public void xAxisRotate(double thetaDeg, float theCoords[],int numCoords) {$/;"	m	class:RotMatrix
xAxisRotate	kstar/RotMatrix.java	/^	public void xAxisRotate(float thetaDeg, float theCoords[],int numCoords) {$/;"	m	class:RotMatrix
xi	kstar/TripeptideClosure.java	/^  double[] delta = new double[4], xi = new double[3], eta = new double [3],$/;"	f	class:TripeptideClosure
yAxisRotate	kstar/RotMatrix.java	/^	public void yAxisRotate(double thetaDeg, float theCoords[],int numCoords) {$/;"	m	class:RotMatrix
yAxisRotate	kstar/RotMatrix.java	/^	public void yAxisRotate(float thetaDeg, float theCoords[],int numCoords) {$/;"	m	class:RotMatrix
zAxisRotate	kstar/RotMatrix.java	/^	public void zAxisRotate(double thetaDeg, float theCoords[],int numCoords) {$/;"	m	class:RotMatrix
zAxisRotate	kstar/RotMatrix.java	/^	public void zAxisRotate(float thetaDeg, float theCoords[],int numCoords) {$/;"	m	class:RotMatrix
